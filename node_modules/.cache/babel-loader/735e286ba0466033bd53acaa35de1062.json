{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = secp256k1Recover;\n\nvar _elliptic = _interopRequireDefault(require(\"elliptic\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst EC = _elliptic.default.ec;\nconst ec = new EC('secp256k1');\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */\n\nfunction secp256k1Recover(message, signature, recovery) {\n  return new Uint8Array( // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  ec.recoverPubKey(message, {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  }, recovery).encode(null, true));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/secp256k1/recover.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","secp256k1Recover","_elliptic","EC","ec","message","signature","recovery","Uint8Array","recoverPubKey","r","slice","s","encode"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,SAAS,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAAtC,C,CAEA;AACA;;;AACA,MAAMQ,EAAE,GAAGD,SAAS,CAACF,OAAV,CAAkBI,EAA7B;AACA,MAAMA,EAAE,GAAG,IAAID,EAAJ,CAAO,WAAP,CAAX;AACA;AACA;AACA;AACA;;AAEA,SAASF,gBAAT,CAA0BI,OAA1B,EAAmCC,SAAnC,EAA8CC,QAA9C,EAAwD;AACtD,SAAO,IAAIC,UAAJ,EAAgB;AACvBJ,EAAAA,EAAE,CAACK,aAAH,CAAiBJ,OAAjB,EAA0B;AACxBK,IAAAA,CAAC,EAAEJ,SAAS,CAACK,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CADqB;AAExBC,IAAAA,CAAC,EAAEN,SAAS,CAACK,KAAV,CAAgB,EAAhB,EAAoB,EAApB;AAFqB,GAA1B,EAGGJ,QAHH,EAGaM,MAHb,CAGoB,IAHpB,EAG0B,IAH1B,CADO,CAAP;AAKD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = secp256k1Recover;\n\nvar _elliptic = _interopRequireDefault(require(\"elliptic\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst EC = _elliptic.default.ec;\nconst ec = new EC('secp256k1');\n/**\n * @name secp256k1Recover\n * @description Recovers a publicKey from the supplied signature\n */\n\nfunction secp256k1Recover(message, signature, recovery) {\n  return new Uint8Array( // eslint-disable-next-line @typescript-eslint/no-unsafe-call,@typescript-eslint/no-unsafe-member-access\n  ec.recoverPubKey(message, {\n    r: signature.slice(0, 32),\n    s: signature.slice(32, 64)\n  }, recovery).encode(null, true));\n}"]},"metadata":{},"sourceType":"script"}