{"ast":null,"code":"const crypto = require('crypto');\n\nconst {\n  stringToU8a,\n  u8aToString\n} = require('@polkadot/util');\n\nconst requires = {\n  crypto\n};\nlet imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\nconst heap = new Array(32).fill(undefined);\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) {\n  return heap[idx];\n}\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n  if (idx < 36) return;\n  heap[idx] = heap_next;\n  heap_next = idx;\n}\n\nfunction takeObject(idx) {\n  const ret = getObject(idx);\n  dropObject(idx);\n  return ret;\n}\n\nlet cachegetInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n  if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory0;\n}\n\nu8aToString();\nlet cachegetUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n  if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n  return u8aToString(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nmodule.exports.ext_bip39_generate = function (words) {\n  try {\n    wasm.ext_bip39_generate(8, words);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    return getStringFromWasm0(r0, r1);\n  } finally {\n    wasm.__wbindgen_free(r0, r1);\n  }\n};\n\nlet WASM_VECTOR_LEN = 0;\nlet cachegetNodeBufferMemory0 = null;\n\nfunction getNodeBufferMemory0() {\n  if (cachegetNodeBufferMemory0 === null || cachegetNodeBufferMemory0.buffer !== wasm.memory.buffer) {\n    cachegetNodeBufferMemory0 = Buffer.from(wasm.memory.buffer);\n  }\n\n  return cachegetNodeBufferMemory0;\n}\n\nfunction passStringToWasm0(arg, malloc) {\n  const len = Buffer.byteLength(arg);\n  const ptr = malloc(len);\n  getNodeBufferMemory0().write(arg, ptr, len);\n  WASM_VECTOR_LEN = len;\n  return ptr;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n  return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n\nmodule.exports.ext_bip39_to_entropy = function (phrase) {\n  var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_bip39_to_entropy(8, ptr0, len0);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_bip39_to_mini_secret = function (phrase, password) {\n  var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_bip39_to_mini_secret(8, ptr0, len0, ptr1, len1);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_bip39_to_seed = function (phrase, password) {\n  var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_bip39_to_seed(8, ptr0, len0, ptr1, len1);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_bip39_validate = function (phrase) {\n  var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ret = wasm.ext_bip39_validate(ptr0, len0);\n  return ret !== 0;\n};\n\nfunction passArray8ToWasm0(arg, malloc) {\n  const ptr = malloc(arg.length * 1);\n  getUint8Memory0().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nmodule.exports.ext_ed_from_seed = function (seed) {\n  var ptr0 = passArray8ToWasm0(seed, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_ed_from_seed(8, ptr0, len0);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_ed_sign = function (pubkey, seckey, message) {\n  var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(seckey, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  var ptr2 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n  var len2 = WASM_VECTOR_LEN;\n  wasm.ext_ed_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v3 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v3;\n};\n\nmodule.exports.ext_ed_verify = function (signature, message, pubkey) {\n  var ptr0 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  var ptr2 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n  var len2 = WASM_VECTOR_LEN;\n  var ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n  return ret !== 0;\n};\n\nmodule.exports.ext_blake2b = function (data, key, size) {\n  var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_blake2b(8, ptr0, len0, ptr1, len1, size);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_keccak256 = function (data) {\n  var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_keccak256(8, ptr0, len0);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_pbkdf2 = function (data, salt, rounds) {\n  var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(salt, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_pbkdf2(8, ptr0, len0, ptr1, len1, rounds);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_scrypt = function (password, salt, log2_n, r, p) {\n  var ptr0 = passArray8ToWasm0(password, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(salt, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_scrypt(8, ptr0, len0, ptr1, len1, log2_n, r, p);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_sha512 = function (data) {\n  var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_sha512(8, ptr0, len0);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_twox = function (data, rounds) {\n  var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_twox(8, ptr0, len0, rounds);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_sr_derive_keypair_hard = function (pair, cc) {\n  var ptr0 = passArray8ToWasm0(pair, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_sr_derive_keypair_hard(8, ptr0, len0, ptr1, len1);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_sr_derive_keypair_soft = function (pair, cc) {\n  var ptr0 = passArray8ToWasm0(pair, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_sr_derive_keypair_soft(8, ptr0, len0, ptr1, len1);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_sr_derive_public_soft = function (pubkey, cc) {\n  var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  wasm.ext_sr_derive_public_soft(8, ptr0, len0, ptr1, len1);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v2 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v2;\n};\n\nmodule.exports.ext_sr_from_seed = function (seed) {\n  var ptr0 = passArray8ToWasm0(seed, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  wasm.ext_sr_from_seed(8, ptr0, len0);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v1 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v1;\n};\n\nmodule.exports.ext_sr_sign = function (pubkey, secret, message) {\n  var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(secret, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  var ptr2 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n  var len2 = WASM_VECTOR_LEN;\n  wasm.ext_sr_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n  var r0 = getInt32Memory0()[8 / 4 + 0];\n  var r1 = getInt32Memory0()[8 / 4 + 1];\n  var v3 = getArrayU8FromWasm0(r0, r1).slice();\n\n  wasm.__wbindgen_free(r0, r1 * 1);\n\n  return v3;\n};\n\nmodule.exports.ext_sr_verify = function (signature, message, pubkey) {\n  var ptr0 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n  var len0 = WASM_VECTOR_LEN;\n  var ptr1 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n  var len1 = WASM_VECTOR_LEN;\n  var ptr2 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n  var len2 = WASM_VECTOR_LEN;\n  var ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n  return ret !== 0;\n};\n\nfunction addHeapObject(obj) {\n  if (heap_next === heap.length) heap.push(heap.length + 1);\n  const idx = heap_next;\n  heap_next = heap[idx];\n  heap[idx] = obj;\n  return idx;\n}\n\nfunction handleError(f) {\n  return function () {\n    try {\n      return f.apply(this, arguments);\n    } catch (e) {\n      wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n  };\n}\n\nmodule.exports.__wbindgen_is_undefined = function (arg0) {\n  var ret = getObject(arg0) === undefined;\n  return ret;\n};\n\nmodule.exports.__wbg_self_1b7a39e3a92c949c = handleError(function () {\n  var ret = self.self;\n  return addHeapObject(ret);\n});\n\nmodule.exports.__wbg_require_604837428532a733 = function (arg0, arg1) {\n  var ret = requires[getStringFromWasm0(arg0, arg1)];\n  return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_crypto_968f1772287e2df0 = function (arg0) {\n  var ret = getObject(arg0).crypto;\n  return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_a3d34b4fee3c2869 = function (arg0) {\n  var ret = getObject(arg0).getRandomValues;\n  return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_f5e14ab7ac8e995d = function (arg0, arg1, arg2) {\n  getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nmodule.exports.__wbg_randomFillSync_d5bd2d655fdf256a = function (arg0, arg1, arg2) {\n  getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nmodule.exports.__wbindgen_object_drop_ref = function (arg0) {\n  takeObject(arg0);\n};\n\nmodule.exports.__wasm = wasm;\n\nmodule.exports.abort = function () {\n  throw new Error('abort');\n};\n\nconst createPromise = require('./wasm_promise');\n\nconst wasmPromise = createPromise().catch(() => null);\n\nmodule.exports.isReady = function () {\n  return !!wasm;\n};\n\nmodule.exports.waitReady = function () {\n  return wasmPromise.then(() => !!wasm);\n};\n\nwasmPromise.then(_wasm => {\n  wasm = _wasm;\n});","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/wasm-crypto/wasm.js"],"names":["crypto","require","stringToU8a","u8aToString","requires","imports","module","exports","wasm","heap","Array","fill","undefined","push","getObject","idx","heap_next","length","dropObject","takeObject","ret","cachegetInt32Memory0","getInt32Memory0","buffer","memory","Int32Array","cachegetUint8Memory0","getUint8Memory0","Uint8Array","getStringFromWasm0","ptr","len","subarray","ext_bip39_generate","words","r0","r1","__wbindgen_free","WASM_VECTOR_LEN","cachegetNodeBufferMemory0","getNodeBufferMemory0","Buffer","from","passStringToWasm0","arg","malloc","byteLength","write","getArrayU8FromWasm0","ext_bip39_to_entropy","phrase","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","v1","slice","ext_bip39_to_mini_secret","password","ptr1","len1","v2","ext_bip39_to_seed","ext_bip39_validate","passArray8ToWasm0","set","ext_ed_from_seed","seed","ext_ed_sign","pubkey","seckey","message","ptr2","len2","v3","ext_ed_verify","signature","ext_blake2b","data","key","size","ext_keccak256","ext_pbkdf2","salt","rounds","ext_scrypt","log2_n","r","p","ext_sha512","ext_twox","ext_sr_derive_keypair_hard","pair","cc","ext_sr_derive_keypair_soft","ext_sr_derive_public_soft","ext_sr_from_seed","ext_sr_sign","secret","ext_sr_verify","addHeapObject","obj","handleError","f","apply","arguments","e","__wbindgen_exn_store","__wbindgen_is_undefined","arg0","__wbg_self_1b7a39e3a92c949c","self","__wbg_require_604837428532a733","arg1","__wbg_crypto_968f1772287e2df0","__wbg_getRandomValues_a3d34b4fee3c2869","getRandomValues","__wbg_getRandomValues_f5e14ab7ac8e995d","arg2","__wbg_randomFillSync_d5bd2d655fdf256a","randomFillSync","__wbindgen_object_drop_ref","__wasm","abort","Error","createPromise","wasmPromise","catch","isReady","waitReady","then","_wasm"],"mappings":"AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,IAA+BF,OAAO,CAAC,gBAAD,CAA5C;;AAEA,MAAMG,QAAQ,GAAG;AAAEJ,EAAAA;AAAF,CAAjB;AAEA,IAAIK,OAAO,GAAG,EAAd;AACAA,OAAO,CAAC,0BAAD,CAAP,GAAsCC,MAAM,CAACC,OAA7C;AACA,IAAIC,IAAJ;AAEA,MAAMC,IAAI,GAAG,IAAIC,KAAJ,CAAU,EAAV,EAAcC,IAAd,CAAmBC,SAAnB,CAAb;AAEAH,IAAI,CAACI,IAAL,CAAUD,SAAV,EAAqB,IAArB,EAA2B,IAA3B,EAAiC,KAAjC;;AAEA,SAASE,SAAT,CAAmBC,GAAnB,EAAwB;AAAE,SAAON,IAAI,CAACM,GAAD,CAAX;AAAmB;;AAE7C,IAAIC,SAAS,GAAGP,IAAI,CAACQ,MAArB;;AAEA,SAASC,UAAT,CAAoBH,GAApB,EAAyB;AACrB,MAAIA,GAAG,GAAG,EAAV,EAAc;AACdN,EAAAA,IAAI,CAACM,GAAD,CAAJ,GAAYC,SAAZ;AACAA,EAAAA,SAAS,GAAGD,GAAZ;AACH;;AAED,SAASI,UAAT,CAAoBJ,GAApB,EAAyB;AACrB,QAAMK,GAAG,GAAGN,SAAS,CAACC,GAAD,CAArB;AACAG,EAAAA,UAAU,CAACH,GAAD,CAAV;AACA,SAAOK,GAAP;AACH;;AAED,IAAIC,oBAAoB,GAAG,IAA3B;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAID,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,CAACE,MAArB,KAAgCf,IAAI,CAACgB,MAAL,CAAYD,MAAjF,EAAyF;AACrFF,IAAAA,oBAAoB,GAAG,IAAII,UAAJ,CAAejB,IAAI,CAACgB,MAAL,CAAYD,MAA3B,CAAvB;AACH;;AACD,SAAOF,oBAAP;AACH;;AAGDlB,WAAW;AAEX,IAAIuB,oBAAoB,GAAG,IAA3B;;AACA,SAASC,eAAT,GAA2B;AACvB,MAAID,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,CAACH,MAArB,KAAgCf,IAAI,CAACgB,MAAL,CAAYD,MAAjF,EAAyF;AACrFG,IAAAA,oBAAoB,GAAG,IAAIE,UAAJ,CAAepB,IAAI,CAACgB,MAAL,CAAYD,MAA3B,CAAvB;AACH;;AACD,SAAOG,oBAAP;AACH;;AAED,SAASG,kBAAT,CAA4BC,GAA5B,EAAiCC,GAAjC,EAAsC;AAClC,SAAO5B,WAAW,CAACwB,eAAe,GAAGK,QAAlB,CAA2BF,GAA3B,EAAgCA,GAAG,GAAGC,GAAtC,CAAD,CAAlB;AACH;;AACDzB,MAAM,CAACC,OAAP,CAAe0B,kBAAf,GAAoC,UAASC,KAAT,EAAgB;AAChD,MAAI;AACA1B,IAAAA,IAAI,CAACyB,kBAAL,CAAwB,CAAxB,EAA2BC,KAA3B;AACA,QAAIC,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,QAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,WAAOO,kBAAkB,CAACM,EAAD,EAAKC,EAAL,CAAzB;AACH,GALD,SAKU;AACN5B,IAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAzB;AACH;AACJ,CATD;;AAWA,IAAIE,eAAe,GAAG,CAAtB;AAEA,IAAIC,yBAAyB,GAAG,IAAhC;;AACA,SAASC,oBAAT,GAAgC;AAC5B,MAAID,yBAAyB,KAAK,IAA9B,IAAsCA,yBAAyB,CAAChB,MAA1B,KAAqCf,IAAI,CAACgB,MAAL,CAAYD,MAA3F,EAAmG;AAC/FgB,IAAAA,yBAAyB,GAAGE,MAAM,CAACC,IAAP,CAAYlC,IAAI,CAACgB,MAAL,CAAYD,MAAxB,CAA5B;AACH;;AACD,SAAOgB,yBAAP;AACH;;AAED,SAASI,iBAAT,CAA2BC,GAA3B,EAAgCC,MAAhC,EAAwC;AAEpC,QAAMd,GAAG,GAAGU,MAAM,CAACK,UAAP,CAAkBF,GAAlB,CAAZ;AACA,QAAMd,GAAG,GAAGe,MAAM,CAACd,GAAD,CAAlB;AACAS,EAAAA,oBAAoB,GAAGO,KAAvB,CAA6BH,GAA7B,EAAkCd,GAAlC,EAAuCC,GAAvC;AACAO,EAAAA,eAAe,GAAGP,GAAlB;AACA,SAAOD,GAAP;AACH;;AAED,SAASkB,mBAAT,CAA6BlB,GAA7B,EAAkCC,GAAlC,EAAuC;AACnC,SAAOJ,eAAe,GAAGK,QAAlB,CAA2BF,GAAG,GAAG,CAAjC,EAAoCA,GAAG,GAAG,CAAN,GAAUC,GAA9C,CAAP;AACH;;AACDzB,MAAM,CAACC,OAAP,CAAe0C,oBAAf,GAAsC,UAASC,MAAT,EAAiB;AACnD,MAAIC,IAAI,GAAGR,iBAAiB,CAACO,MAAD,EAAS1C,IAAI,CAAC4C,iBAAd,EAAiC5C,IAAI,CAAC6C,kBAAtC,CAA5B;AACA,MAAIC,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAACyC,oBAAL,CAA0B,CAA1B,EAA6BE,IAA7B,EAAmCG,IAAnC;AACA,MAAInB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAekD,wBAAf,GAA0C,UAASP,MAAT,EAAiBQ,QAAjB,EAA2B;AACjE,MAAIP,IAAI,GAAGR,iBAAiB,CAACO,MAAD,EAAS1C,IAAI,CAAC4C,iBAAd,EAAiC5C,IAAI,CAAC6C,kBAAtC,CAA5B;AACA,MAAIC,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGhB,iBAAiB,CAACe,QAAD,EAAWlD,IAAI,CAAC4C,iBAAhB,EAAmC5C,IAAI,CAAC6C,kBAAxC,CAA5B;AACA,MAAIO,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACiD,wBAAL,CAA8B,CAA9B,EAAiCN,IAAjC,EAAuCG,IAAvC,EAA6CK,IAA7C,EAAmDC,IAAnD;AACA,MAAIzB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAeuD,iBAAf,GAAmC,UAASZ,MAAT,EAAiBQ,QAAjB,EAA2B;AAC1D,MAAIP,IAAI,GAAGR,iBAAiB,CAACO,MAAD,EAAS1C,IAAI,CAAC4C,iBAAd,EAAiC5C,IAAI,CAAC6C,kBAAtC,CAA5B;AACA,MAAIC,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGhB,iBAAiB,CAACe,QAAD,EAAWlD,IAAI,CAAC4C,iBAAhB,EAAmC5C,IAAI,CAAC6C,kBAAxC,CAA5B;AACA,MAAIO,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACsD,iBAAL,CAAuB,CAAvB,EAA0BX,IAA1B,EAAgCG,IAAhC,EAAsCK,IAAtC,EAA4CC,IAA5C;AACA,MAAIzB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAewD,kBAAf,GAAoC,UAASb,MAAT,EAAiB;AACjD,MAAIC,IAAI,GAAGR,iBAAiB,CAACO,MAAD,EAAS1C,IAAI,CAAC4C,iBAAd,EAAiC5C,IAAI,CAAC6C,kBAAtC,CAA5B;AACA,MAAIC,IAAI,GAAGhB,eAAX;AACA,MAAIlB,GAAG,GAAGZ,IAAI,CAACuD,kBAAL,CAAwBZ,IAAxB,EAA8BG,IAA9B,CAAV;AACA,SAAOlC,GAAG,KAAK,CAAf;AACH,CALD;;AAOA,SAAS4C,iBAAT,CAA2BpB,GAA3B,EAAgCC,MAAhC,EAAwC;AACpC,QAAMf,GAAG,GAAGe,MAAM,CAACD,GAAG,CAAC3B,MAAJ,GAAa,CAAd,CAAlB;AACAU,EAAAA,eAAe,GAAGsC,GAAlB,CAAsBrB,GAAtB,EAA2Bd,GAAG,GAAG,CAAjC;AACAQ,EAAAA,eAAe,GAAGM,GAAG,CAAC3B,MAAtB;AACA,SAAOa,GAAP;AACH;;AACDxB,MAAM,CAACC,OAAP,CAAe2D,gBAAf,GAAkC,UAASC,IAAT,EAAe;AAC7C,MAAIhB,IAAI,GAAGa,iBAAiB,CAACG,IAAD,EAAO3D,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAAC0D,gBAAL,CAAsB,CAAtB,EAAyBf,IAAzB,EAA+BG,IAA/B;AACA,MAAInB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAe6D,WAAf,GAA6B,UAASC,MAAT,EAAiBC,MAAjB,EAAyBC,OAAzB,EAAkC;AAC3D,MAAIpB,IAAI,GAAGa,iBAAiB,CAACK,MAAD,EAAS7D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACM,MAAD,EAAS9D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA,MAAIkC,IAAI,GAAGR,iBAAiB,CAACO,OAAD,EAAU/D,IAAI,CAAC4C,iBAAf,CAA5B;AACA,MAAIqB,IAAI,GAAGnC,eAAX;AACA9B,EAAAA,IAAI,CAAC4D,WAAL,CAAiB,CAAjB,EAAoBjB,IAApB,EAA0BG,IAA1B,EAAgCK,IAAhC,EAAsCC,IAAtC,EAA4CY,IAA5C,EAAkDC,IAAlD;AACA,MAAItC,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIoD,EAAE,GAAG1B,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOsC,EAAP;AACH,CAbD;;AAeApE,MAAM,CAACC,OAAP,CAAeoE,aAAf,GAA+B,UAASC,SAAT,EAAoBL,OAApB,EAA6BF,MAA7B,EAAqC;AAChE,MAAIlB,IAAI,GAAGa,iBAAiB,CAACY,SAAD,EAAYpE,IAAI,CAAC4C,iBAAjB,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACO,OAAD,EAAU/D,IAAI,CAAC4C,iBAAf,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA,MAAIkC,IAAI,GAAGR,iBAAiB,CAACK,MAAD,EAAS7D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIqB,IAAI,GAAGnC,eAAX;AACA,MAAIlB,GAAG,GAAGZ,IAAI,CAACmE,aAAL,CAAmBxB,IAAnB,EAAyBG,IAAzB,EAA+BK,IAA/B,EAAqCC,IAArC,EAA2CY,IAA3C,EAAiDC,IAAjD,CAAV;AACA,SAAOrD,GAAG,KAAK,CAAf;AACH,CATD;;AAWAd,MAAM,CAACC,OAAP,CAAesE,WAAf,GAA6B,UAASC,IAAT,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACnD,MAAI7B,IAAI,GAAGa,iBAAiB,CAACc,IAAD,EAAOtE,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACe,GAAD,EAAMvE,IAAI,CAAC4C,iBAAX,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACqE,WAAL,CAAiB,CAAjB,EAAoB1B,IAApB,EAA0BG,IAA1B,EAAgCK,IAAhC,EAAsCC,IAAtC,EAA4CoB,IAA5C;AACA,MAAI7C,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAe0E,aAAf,GAA+B,UAASH,IAAT,EAAe;AAC1C,MAAI3B,IAAI,GAAGa,iBAAiB,CAACc,IAAD,EAAOtE,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAACyE,aAAL,CAAmB,CAAnB,EAAsB9B,IAAtB,EAA4BG,IAA5B;AACA,MAAInB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAe2E,UAAf,GAA4B,UAASJ,IAAT,EAAeK,IAAf,EAAqBC,MAArB,EAA6B;AACrD,MAAIjC,IAAI,GAAGa,iBAAiB,CAACc,IAAD,EAAOtE,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACmB,IAAD,EAAO3E,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAAC0E,UAAL,CAAgB,CAAhB,EAAmB/B,IAAnB,EAAyBG,IAAzB,EAA+BK,IAA/B,EAAqCC,IAArC,EAA2CwB,MAA3C;AACA,MAAIjD,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAe8E,UAAf,GAA4B,UAAS3B,QAAT,EAAmByB,IAAnB,EAAyBG,MAAzB,EAAiCC,CAAjC,EAAoCC,CAApC,EAAuC;AAC/D,MAAIrC,IAAI,GAAGa,iBAAiB,CAACN,QAAD,EAAWlD,IAAI,CAAC4C,iBAAhB,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACmB,IAAD,EAAO3E,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAAC6E,UAAL,CAAgB,CAAhB,EAAmBlC,IAAnB,EAAyBG,IAAzB,EAA+BK,IAA/B,EAAqCC,IAArC,EAA2C0B,MAA3C,EAAmDC,CAAnD,EAAsDC,CAAtD;AACA,MAAIrD,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAekF,UAAf,GAA4B,UAASX,IAAT,EAAe;AACvC,MAAI3B,IAAI,GAAGa,iBAAiB,CAACc,IAAD,EAAOtE,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAACiF,UAAL,CAAgB,CAAhB,EAAmBtC,IAAnB,EAAyBG,IAAzB;AACA,MAAInB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAemF,QAAf,GAA0B,UAASZ,IAAT,EAAeM,MAAf,EAAuB;AAC7C,MAAIjC,IAAI,GAAGa,iBAAiB,CAACc,IAAD,EAAOtE,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAACkF,QAAL,CAAc,CAAd,EAAiBvC,IAAjB,EAAuBG,IAAvB,EAA6B8B,MAA7B;AACA,MAAIjD,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAeoF,0BAAf,GAA4C,UAASC,IAAT,EAAeC,EAAf,EAAmB;AAC3D,MAAI1C,IAAI,GAAGa,iBAAiB,CAAC4B,IAAD,EAAOpF,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAAC6B,EAAD,EAAKrF,IAAI,CAAC4C,iBAAV,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACmF,0BAAL,CAAgC,CAAhC,EAAmCxC,IAAnC,EAAyCG,IAAzC,EAA+CK,IAA/C,EAAqDC,IAArD;AACA,MAAIzB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAeuF,0BAAf,GAA4C,UAASF,IAAT,EAAeC,EAAf,EAAmB;AAC3D,MAAI1C,IAAI,GAAGa,iBAAiB,CAAC4B,IAAD,EAAOpF,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAAC6B,EAAD,EAAKrF,IAAI,CAAC4C,iBAAV,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACsF,0BAAL,CAAgC,CAAhC,EAAmC3C,IAAnC,EAAyCG,IAAzC,EAA+CK,IAA/C,EAAqDC,IAArD;AACA,MAAIzB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAewF,yBAAf,GAA2C,UAAS1B,MAAT,EAAiBwB,EAAjB,EAAqB;AAC5D,MAAI1C,IAAI,GAAGa,iBAAiB,CAACK,MAAD,EAAS7D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAAC6B,EAAD,EAAKrF,IAAI,CAAC4C,iBAAV,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA9B,EAAAA,IAAI,CAACuF,yBAAL,CAA+B,CAA/B,EAAkC5C,IAAlC,EAAwCG,IAAxC,EAA8CK,IAA9C,EAAoDC,IAApD;AACA,MAAIzB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIuC,EAAE,GAAGb,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOyB,EAAP;AACH,CAXD;;AAaAvD,MAAM,CAACC,OAAP,CAAeyF,gBAAf,GAAkC,UAAS7B,IAAT,EAAe;AAC7C,MAAIhB,IAAI,GAAGa,iBAAiB,CAACG,IAAD,EAAO3D,IAAI,CAAC4C,iBAAZ,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA9B,EAAAA,IAAI,CAACwF,gBAAL,CAAsB,CAAtB,EAAyB7C,IAAzB,EAA+BG,IAA/B;AACA,MAAInB,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIiC,EAAE,GAAGP,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOmB,EAAP;AACH,CATD;;AAWAjD,MAAM,CAACC,OAAP,CAAe0F,WAAf,GAA6B,UAAS5B,MAAT,EAAiB6B,MAAjB,EAAyB3B,OAAzB,EAAkC;AAC3D,MAAIpB,IAAI,GAAGa,iBAAiB,CAACK,MAAD,EAAS7D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACkC,MAAD,EAAS1F,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA,MAAIkC,IAAI,GAAGR,iBAAiB,CAACO,OAAD,EAAU/D,IAAI,CAAC4C,iBAAf,CAA5B;AACA,MAAIqB,IAAI,GAAGnC,eAAX;AACA9B,EAAAA,IAAI,CAACyF,WAAL,CAAiB,CAAjB,EAAoB9C,IAApB,EAA0BG,IAA1B,EAAgCK,IAAhC,EAAsCC,IAAtC,EAA4CY,IAA5C,EAAkDC,IAAlD;AACA,MAAItC,EAAE,GAAGb,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIc,EAAE,GAAGd,eAAe,GAAG,IAAI,CAAJ,GAAQ,CAAX,CAAxB;AACA,MAAIoD,EAAE,GAAG1B,mBAAmB,CAACb,EAAD,EAAKC,EAAL,CAAnB,CAA4BoB,KAA5B,EAAT;;AACAhD,EAAAA,IAAI,CAAC6B,eAAL,CAAqBF,EAArB,EAAyBC,EAAE,GAAG,CAA9B;;AACA,SAAOsC,EAAP;AACH,CAbD;;AAeApE,MAAM,CAACC,OAAP,CAAe4F,aAAf,GAA+B,UAASvB,SAAT,EAAoBL,OAApB,EAA6BF,MAA7B,EAAqC;AAChE,MAAIlB,IAAI,GAAGa,iBAAiB,CAACY,SAAD,EAAYpE,IAAI,CAAC4C,iBAAjB,CAA5B;AACA,MAAIE,IAAI,GAAGhB,eAAX;AACA,MAAIqB,IAAI,GAAGK,iBAAiB,CAACO,OAAD,EAAU/D,IAAI,CAAC4C,iBAAf,CAA5B;AACA,MAAIQ,IAAI,GAAGtB,eAAX;AACA,MAAIkC,IAAI,GAAGR,iBAAiB,CAACK,MAAD,EAAS7D,IAAI,CAAC4C,iBAAd,CAA5B;AACA,MAAIqB,IAAI,GAAGnC,eAAX;AACA,MAAIlB,GAAG,GAAGZ,IAAI,CAAC2F,aAAL,CAAmBhD,IAAnB,EAAyBG,IAAzB,EAA+BK,IAA/B,EAAqCC,IAArC,EAA2CY,IAA3C,EAAiDC,IAAjD,CAAV;AACA,SAAOrD,GAAG,KAAK,CAAf;AACH,CATD;;AAWA,SAASgF,aAAT,CAAuBC,GAAvB,EAA4B;AACxB,MAAIrF,SAAS,KAAKP,IAAI,CAACQ,MAAvB,EAA+BR,IAAI,CAACI,IAAL,CAAUJ,IAAI,CAACQ,MAAL,GAAc,CAAxB;AAC/B,QAAMF,GAAG,GAAGC,SAAZ;AACAA,EAAAA,SAAS,GAAGP,IAAI,CAACM,GAAD,CAAhB;AAEAN,EAAAA,IAAI,CAACM,GAAD,CAAJ,GAAYsF,GAAZ;AACA,SAAOtF,GAAP;AACH;;AAED,SAASuF,WAAT,CAAqBC,CAArB,EAAwB;AACpB,SAAO,YAAY;AACf,QAAI;AACA,aAAOA,CAAC,CAACC,KAAF,CAAQ,IAAR,EAAcC,SAAd,CAAP;AAEH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRlG,MAAAA,IAAI,CAACmG,oBAAL,CAA0BP,aAAa,CAACM,CAAD,CAAvC;AACH;AACJ,GAPD;AAQH;;AAEDpG,MAAM,CAACC,OAAP,CAAeqG,uBAAf,GAAyC,UAASC,IAAT,EAAe;AACpD,MAAIzF,GAAG,GAAGN,SAAS,CAAC+F,IAAD,CAAT,KAAoBjG,SAA9B;AACA,SAAOQ,GAAP;AACH,CAHD;;AAKAd,MAAM,CAACC,OAAP,CAAeuG,2BAAf,GAA6CR,WAAW,CAAC,YAAW;AAChE,MAAIlF,GAAG,GAAG2F,IAAI,CAACA,IAAf;AACA,SAAOX,aAAa,CAAChF,GAAD,CAApB;AACH,CAHuD,CAAxD;;AAKAd,MAAM,CAACC,OAAP,CAAeyG,8BAAf,GAAgD,UAASH,IAAT,EAAeI,IAAf,EAAqB;AACjE,MAAI7F,GAAG,GAAGhB,QAAQ,CAACyB,kBAAkB,CAACgF,IAAD,EAAOI,IAAP,CAAnB,CAAlB;AACA,SAAOb,aAAa,CAAChF,GAAD,CAApB;AACH,CAHD;;AAKAd,MAAM,CAACC,OAAP,CAAe2G,6BAAf,GAA+C,UAASL,IAAT,EAAe;AAC1D,MAAIzF,GAAG,GAAGN,SAAS,CAAC+F,IAAD,CAAT,CAAgB7G,MAA1B;AACA,SAAOoG,aAAa,CAAChF,GAAD,CAApB;AACH,CAHD;;AAKAd,MAAM,CAACC,OAAP,CAAe4G,sCAAf,GAAwD,UAASN,IAAT,EAAe;AACnE,MAAIzF,GAAG,GAAGN,SAAS,CAAC+F,IAAD,CAAT,CAAgBO,eAA1B;AACA,SAAOhB,aAAa,CAAChF,GAAD,CAApB;AACH,CAHD;;AAKAd,MAAM,CAACC,OAAP,CAAe8G,sCAAf,GAAwD,UAASR,IAAT,EAAeI,IAAf,EAAqBK,IAArB,EAA2B;AAC/ExG,EAAAA,SAAS,CAAC+F,IAAD,CAAT,CAAgBO,eAAhB,CAAgCpE,mBAAmB,CAACiE,IAAD,EAAOK,IAAP,CAAnD;AACH,CAFD;;AAIAhH,MAAM,CAACC,OAAP,CAAegH,qCAAf,GAAuD,UAASV,IAAT,EAAeI,IAAf,EAAqBK,IAArB,EAA2B;AAC9ExG,EAAAA,SAAS,CAAC+F,IAAD,CAAT,CAAgBW,cAAhB,CAA+BxE,mBAAmB,CAACiE,IAAD,EAAOK,IAAP,CAAlD;AACH,CAFD;;AAIAhH,MAAM,CAACC,OAAP,CAAekH,0BAAf,GAA4C,UAASZ,IAAT,EAAe;AACvD1F,EAAAA,UAAU,CAAC0F,IAAD,CAAV;AACH,CAFD;;AAKAvG,MAAM,CAACC,OAAP,CAAemH,MAAf,GAAwBlH,IAAxB;;AAEAF,MAAM,CAACC,OAAP,CAAeoH,KAAf,GAAuB,YAAY;AAAE,QAAM,IAAIC,KAAJ,CAAU,OAAV,CAAN;AAA2B,CAAhE;;AAEA,MAAMC,aAAa,GAAG5H,OAAO,CAAC,gBAAD,CAA7B;;AACA,MAAM6H,WAAW,GAAGD,aAAa,GAAGE,KAAhB,CAAsB,MAAM,IAA5B,CAApB;;AAEAzH,MAAM,CAACC,OAAP,CAAeyH,OAAf,GAAyB,YAAY;AAAE,SAAO,CAAC,CAACxH,IAAT;AAAgB,CAAvD;;AACAF,MAAM,CAACC,OAAP,CAAe0H,SAAf,GAA2B,YAAY;AAAE,SAAOH,WAAW,CAACI,IAAZ,CAAiB,MAAM,CAAC,CAAC1H,IAAzB,CAAP;AAAwC,CAAjF;;AAEAsH,WAAW,CAACI,IAAZ,CAAkBC,KAAD,IAAW;AAAE3H,EAAAA,IAAI,GAAG2H,KAAP;AAAc,CAA5C","sourcesContent":["const crypto = require('crypto');\nconst { stringToU8a, u8aToString } = require('@polkadot/util');\n\nconst requires = { crypto };\n\nlet imports = {};\nimports['__wbindgen_placeholder__'] = module.exports;\nlet wasm;\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\n\nu8aToString();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return u8aToString(getUint8Memory0().subarray(ptr, ptr + len));\n}\nmodule.exports.ext_bip39_generate = function(words) {\n    try {\n        wasm.ext_bip39_generate(8, words);\n        var r0 = getInt32Memory0()[8 / 4 + 0];\n        var r1 = getInt32Memory0()[8 / 4 + 1];\n        return getStringFromWasm0(r0, r1);\n    } finally {\n        wasm.__wbindgen_free(r0, r1);\n    }\n};\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachegetNodeBufferMemory0 = null;\nfunction getNodeBufferMemory0() {\n    if (cachegetNodeBufferMemory0 === null || cachegetNodeBufferMemory0.buffer !== wasm.memory.buffer) {\n        cachegetNodeBufferMemory0 = Buffer.from(wasm.memory.buffer);\n    }\n    return cachegetNodeBufferMemory0;\n}\n\nfunction passStringToWasm0(arg, malloc) {\n\n    const len = Buffer.byteLength(arg);\n    const ptr = malloc(len);\n    getNodeBufferMemory0().write(arg, ptr, len);\n    WASM_VECTOR_LEN = len;\n    return ptr;\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\nmodule.exports.ext_bip39_to_entropy = function(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_bip39_to_entropy(8, ptr0, len0);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_bip39_to_mini_secret = function(phrase, password) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_bip39_to_mini_secret(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_bip39_to_seed = function(phrase, password) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passStringToWasm0(password, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_bip39_to_seed(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_bip39_validate = function(phrase) {\n    var ptr0 = passStringToWasm0(phrase, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ret = wasm.ext_bip39_validate(ptr0, len0);\n    return ret !== 0;\n};\n\nfunction passArray8ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 1);\n    getUint8Memory0().set(arg, ptr / 1);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\nmodule.exports.ext_ed_from_seed = function(seed) {\n    var ptr0 = passArray8ToWasm0(seed, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_ed_from_seed(8, ptr0, len0);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_ed_sign = function(pubkey, seckey, message) {\n    var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(seckey, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    wasm.ext_ed_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v3 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v3;\n};\n\nmodule.exports.ext_ed_verify = function(signature, message, pubkey) {\n    var ptr0 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.ext_ed_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n};\n\nmodule.exports.ext_blake2b = function(data, key, size) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(key, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_blake2b(8, ptr0, len0, ptr1, len1, size);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_keccak256 = function(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_keccak256(8, ptr0, len0);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_pbkdf2 = function(data, salt, rounds) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(salt, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_pbkdf2(8, ptr0, len0, ptr1, len1, rounds);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_scrypt = function(password, salt, log2_n, r, p) {\n    var ptr0 = passArray8ToWasm0(password, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(salt, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_scrypt(8, ptr0, len0, ptr1, len1, log2_n, r, p);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_sha512 = function(data) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_sha512(8, ptr0, len0);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_twox = function(data, rounds) {\n    var ptr0 = passArray8ToWasm0(data, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_twox(8, ptr0, len0, rounds);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_sr_derive_keypair_hard = function(pair, cc) {\n    var ptr0 = passArray8ToWasm0(pair, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_sr_derive_keypair_hard(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_sr_derive_keypair_soft = function(pair, cc) {\n    var ptr0 = passArray8ToWasm0(pair, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_sr_derive_keypair_soft(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_sr_derive_public_soft = function(pubkey, cc) {\n    var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(cc, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    wasm.ext_sr_derive_public_soft(8, ptr0, len0, ptr1, len1);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v2 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v2;\n};\n\nmodule.exports.ext_sr_from_seed = function(seed) {\n    var ptr0 = passArray8ToWasm0(seed, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    wasm.ext_sr_from_seed(8, ptr0, len0);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v1 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v1;\n};\n\nmodule.exports.ext_sr_sign = function(pubkey, secret, message) {\n    var ptr0 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(secret, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    wasm.ext_sr_sign(8, ptr0, len0, ptr1, len1, ptr2, len2);\n    var r0 = getInt32Memory0()[8 / 4 + 0];\n    var r1 = getInt32Memory0()[8 / 4 + 1];\n    var v3 = getArrayU8FromWasm0(r0, r1).slice();\n    wasm.__wbindgen_free(r0, r1 * 1);\n    return v3;\n};\n\nmodule.exports.ext_sr_verify = function(signature, message, pubkey) {\n    var ptr0 = passArray8ToWasm0(signature, wasm.__wbindgen_malloc);\n    var len0 = WASM_VECTOR_LEN;\n    var ptr1 = passArray8ToWasm0(message, wasm.__wbindgen_malloc);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = passArray8ToWasm0(pubkey, wasm.__wbindgen_malloc);\n    var len2 = WASM_VECTOR_LEN;\n    var ret = wasm.ext_sr_verify(ptr0, len0, ptr1, len1, ptr2, len2);\n    return ret !== 0;\n};\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nmodule.exports.__wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nmodule.exports.__wbg_self_1b7a39e3a92c949c = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nmodule.exports.__wbg_require_604837428532a733 = function(arg0, arg1) {\n    var ret = requires[getStringFromWasm0(arg0, arg1)];\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_crypto_968f1772287e2df0 = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_a3d34b4fee3c2869 = function(arg0) {\n    var ret = getObject(arg0).getRandomValues;\n    return addHeapObject(ret);\n};\n\nmodule.exports.__wbg_getRandomValues_f5e14ab7ac8e995d = function(arg0, arg1, arg2) {\n    getObject(arg0).getRandomValues(getArrayU8FromWasm0(arg1, arg2));\n};\n\nmodule.exports.__wbg_randomFillSync_d5bd2d655fdf256a = function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n};\n\nmodule.exports.__wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\n\nmodule.exports.__wasm = wasm;\n\nmodule.exports.abort = function () { throw new Error('abort'); };\n\nconst createPromise = require('./wasm_promise');\nconst wasmPromise = createPromise().catch(() => null);\n\nmodule.exports.isReady = function () { return !!wasm; }\nmodule.exports.waitReady = function () { return wasmPromise.then(() => !!wasm); }\n\nwasmPromise.then((_wasm) => { wasm = _wasm });\n\n"]},"metadata":{},"sourceType":"script"}