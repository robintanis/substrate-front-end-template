{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compareMap;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"./util\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction hasMismatch(a, b) {\n  return (0, _util.isUndefined)(a) || ((0, _util2.hasEq)(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(entry => notEntry(entry) || hasMismatch(a.get(entry[0]), entry[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nfunction compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if ((0, _util.isObject)(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/codec/utils/compareMap.js"],"names":["Object","defineProperty","exports","value","default","compareMap","_util","require","_util2","hasMismatch","a","b","isUndefined","hasEq","eq","notEntry","Array","isArray","length","compareMapArray","size","some","entry","get","Map","entries","isObject"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,UAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB,C,CAEA;AACA;;;AACA,SAASE,WAAT,CAAqBC,CAArB,EAAwBC,CAAxB,EAA2B;AACzB,SAAO,CAAC,GAAGL,KAAK,CAACM,WAAV,EAAuBF,CAAvB,MAA8B,CAAC,GAAGF,MAAM,CAACK,KAAX,EAAkBH,CAAlB,IAAuB,CAACA,CAAC,CAACI,EAAF,CAAKH,CAAL,CAAxB,GAAkCD,CAAC,KAAKC,CAAtE,CAAP;AACD;;AAED,SAASI,QAAT,CAAkBZ,KAAlB,EAAyB;AACvB,SAAO,CAACa,KAAK,CAACC,OAAN,CAAcd,KAAd,CAAD,IAAyBA,KAAK,CAACe,MAAN,KAAiB,CAAjD;AACD;;AAED,SAASC,eAAT,CAAyBT,CAAzB,EAA4BC,CAA5B,EAA+B;AAC7B;AACA,SAAOD,CAAC,CAACU,IAAF,KAAWT,CAAC,CAACO,MAAb,IAAuB,CAACP,CAAC,CAACU,IAAF,CAAOC,KAAK,IAAIP,QAAQ,CAACO,KAAD,CAAR,IAAmBb,WAAW,CAACC,CAAC,CAACa,GAAF,CAAMD,KAAK,CAAC,CAAD,CAAX,CAAD,EAAkBA,KAAK,CAAC,CAAD,CAAvB,CAA9C,CAA/B;AACD,C,CAAC;AACF;;;AAGA,SAASjB,UAAT,CAAoBK,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,MAAIK,KAAK,CAACC,OAAN,CAAcN,CAAd,CAAJ,EAAsB;AACpB,WAAOQ,eAAe,CAACT,CAAD,EAAIC,CAAJ,CAAtB;AACD,GAFD,MAEO,IAAIA,CAAC,YAAYa,GAAjB,EAAsB;AAC3B,WAAOL,eAAe,CAACT,CAAD,EAAI,CAAC,GAAGC,CAAC,CAACc,OAAF,EAAJ,CAAJ,CAAtB;AACD,GAFM,MAEA,IAAI,CAAC,GAAGnB,KAAK,CAACoB,QAAV,EAAoBf,CAApB,CAAJ,EAA4B;AACjC,WAAOQ,eAAe,CAACT,CAAD,EAAIV,MAAM,CAACyB,OAAP,CAAed,CAAf,CAAJ,CAAtB;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compareMap;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"./util\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction hasMismatch(a, b) {\n  return (0, _util.isUndefined)(a) || ((0, _util2.hasEq)(a) ? !a.eq(b) : a !== b);\n}\n\nfunction notEntry(value) {\n  return !Array.isArray(value) || value.length !== 2;\n}\n\nfunction compareMapArray(a, b) {\n  // equal number of entries and each entry in the array should match\n  return a.size === b.length && !b.some(entry => notEntry(entry) || hasMismatch(a.get(entry[0]), entry[1]));\n} // NOTE These are used internally and when comparing objects, expects that\n// when the second is an Map<string, Codec> that the first has to be as well\n\n\nfunction compareMap(a, b) {\n  if (Array.isArray(b)) {\n    return compareMapArray(a, b);\n  } else if (b instanceof Map) {\n    return compareMapArray(a, [...b.entries()]);\n  } else if ((0, _util.isObject)(b)) {\n    return compareMapArray(a, Object.entries(b));\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}