{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.candidates = candidates;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description Get the candidate info for a society\n */\n\n\nfunction candidates(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.query.society.candidates().pipe((0, _operators.switchMap)(candidates => (0, _rxjs.combineLatest)([(0, _rxjs.of)(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({\n    who\n  }) => who))])), (0, _operators.map)(([candidates, suspended]) => candidates.map(({\n    kind,\n    value,\n    who\n  }, index) => ({\n    accountId: who,\n    isSuspended: suspended[index].isSome,\n    kind,\n    value\n  })))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/society/candidates.js"],"names":["Object","defineProperty","exports","value","candidates","_rxjs","require","_operators","_util","instanceId","api","memo","query","society","pipe","switchMap","combineLatest","of","suspendedCandidates","multi","map","who","suspended","kind","index","accountId","isSuspended","isSome"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,UAAR,GAAqBA,UAArB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;;;AACA,SAASF,UAAT,CAAoBK,UAApB,EAAgCC,GAAhC,EAAqC;AACnC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,MAAMC,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBT,UAAlB,GAA+BU,IAA/B,CAAoC,CAAC,GAAGP,UAAU,CAACQ,SAAf,EAA0BX,UAAU,IAAI,CAAC,GAAGC,KAAK,CAACW,aAAV,EAAyB,CAAC,CAAC,GAAGX,KAAK,CAACY,EAAV,EAAcb,UAAd,CAAD,EAA4BM,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAkBK,mBAAlB,CAAsCC,KAAtC,CAA4Cf,UAAU,CAACgB,GAAX,CAAe,CAAC;AACpOC,IAAAA;AADoO,GAAD,KAE/NA,GAFgN,CAA5C,CAA5B,CAAzB,CAAxC,CAApC,EAEzB,CAAC,GAAGd,UAAU,CAACa,GAAf,EAAoB,CAAC,CAAChB,UAAD,EAAakB,SAAb,CAAD,KAA6BlB,UAAU,CAACgB,GAAX,CAAe,CAAC;AAC/EG,IAAAA,IAD+E;AAE/EpB,IAAAA,KAF+E;AAG/EkB,IAAAA;AAH+E,GAAD,EAI7EG,KAJ6E,MAIlE;AACZC,IAAAA,SAAS,EAAEJ,GADC;AAEZK,IAAAA,WAAW,EAAEJ,SAAS,CAACE,KAAD,CAAT,CAAiBG,MAFlB;AAGZJ,IAAAA,IAHY;AAIZpB,IAAAA;AAJY,GAJkE,CAAf,CAAjD,CAFyB,CAAlC,CAAP;AAYD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.candidates = candidates;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description Get the candidate info for a society\n */\nfunction candidates(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.query.society.candidates().pipe((0, _operators.switchMap)(candidates => (0, _rxjs.combineLatest)([(0, _rxjs.of)(candidates), api.query.society.suspendedCandidates.multi(candidates.map(({\n    who\n  }) => who))])), (0, _operators.map)(([candidates, suspended]) => candidates.map(({\n    kind,\n    value,\n    who\n  }, index) => ({\n    accountId: who,\n    isSuspended: suspended[index].isSome,\n    kind,\n    value\n  })))));\n}"]},"metadata":{},"sourceType":"script"}