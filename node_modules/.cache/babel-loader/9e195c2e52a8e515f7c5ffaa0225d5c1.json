{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractTypes;\n\nvar _types = require(\"@polkadot/types/types\");\n\nvar _create = require(\"@polkadot/types/create\"); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\n\n\nfunction extractTypes(types) {\n  return types.map(type => {\n    const decoded = (0, _create.getTypeDef)(type);\n\n    switch (decoded.info) {\n      case _types.TypeDefInfo.Plain:\n        return decoded.type;\n\n      case _types.TypeDefInfo.BTreeSet:\n      case _types.TypeDefInfo.Compact:\n      case _types.TypeDefInfo.Option:\n      case _types.TypeDefInfo.Vec:\n      case _types.TypeDefInfo.VecFixed:\n        return extractTypes([decoded.sub.type]);\n\n      case _types.TypeDefInfo.BTreeMap:\n      case _types.TypeDefInfo.HashMap:\n      case _types.TypeDefInfo.Result:\n      case _types.TypeDefInfo.Tuple:\n        return extractTypes(decoded.sub.map(sub => sub.type));\n\n      default:\n        throw new Error(`Unhandled: Unable to create and validate type from ${type}`);\n    }\n  });\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/metadata/Metadata/util/extractTypes.js"],"names":["Object","defineProperty","exports","value","default","extractTypes","_types","require","_create","types","map","type","decoded","getTypeDef","info","TypeDefInfo","Plain","BTreeSet","Compact","Option","Vec","VecFixed","sub","BTreeMap","HashMap","Result","Tuple","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,uBAAD,CAApB;;AAEA,IAAIC,OAAO,GAAGD,OAAO,CAAC,wBAAD,CAArB,C,CAEA;AACA;;AAEA;;;AACA,SAASF,YAAT,CAAsBI,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACvB,UAAMC,OAAO,GAAG,CAAC,GAAGJ,OAAO,CAACK,UAAZ,EAAwBF,IAAxB,CAAhB;;AAEA,YAAQC,OAAO,CAACE,IAAhB;AACE,WAAKR,MAAM,CAACS,WAAP,CAAmBC,KAAxB;AACE,eAAOJ,OAAO,CAACD,IAAf;;AAEF,WAAKL,MAAM,CAACS,WAAP,CAAmBE,QAAxB;AACA,WAAKX,MAAM,CAACS,WAAP,CAAmBG,OAAxB;AACA,WAAKZ,MAAM,CAACS,WAAP,CAAmBI,MAAxB;AACA,WAAKb,MAAM,CAACS,WAAP,CAAmBK,GAAxB;AACA,WAAKd,MAAM,CAACS,WAAP,CAAmBM,QAAxB;AACE,eAAOhB,YAAY,CAAC,CAACO,OAAO,CAACU,GAAR,CAAYX,IAAb,CAAD,CAAnB;;AAEF,WAAKL,MAAM,CAACS,WAAP,CAAmBQ,QAAxB;AACA,WAAKjB,MAAM,CAACS,WAAP,CAAmBS,OAAxB;AACA,WAAKlB,MAAM,CAACS,WAAP,CAAmBU,MAAxB;AACA,WAAKnB,MAAM,CAACS,WAAP,CAAmBW,KAAxB;AACE,eAAOrB,YAAY,CAACO,OAAO,CAACU,GAAR,CAAYZ,GAAZ,CAAgBY,GAAG,IAAIA,GAAG,CAACX,IAA3B,CAAD,CAAnB;;AAEF;AACE,cAAM,IAAIgB,KAAJ,CAAW,sDAAqDhB,IAAK,EAArE,CAAN;AAlBJ;AAoBD,GAvBM,CAAP;AAwBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = extractTypes;\n\nvar _types = require(\"@polkadot/types/types\");\n\nvar _create = require(\"@polkadot/types/create\");\n\n// Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/** @internal */\nfunction extractTypes(types) {\n  return types.map(type => {\n    const decoded = (0, _create.getTypeDef)(type);\n\n    switch (decoded.info) {\n      case _types.TypeDefInfo.Plain:\n        return decoded.type;\n\n      case _types.TypeDefInfo.BTreeSet:\n      case _types.TypeDefInfo.Compact:\n      case _types.TypeDefInfo.Option:\n      case _types.TypeDefInfo.Vec:\n      case _types.TypeDefInfo.VecFixed:\n        return extractTypes([decoded.sub.type]);\n\n      case _types.TypeDefInfo.BTreeMap:\n      case _types.TypeDefInfo.HashMap:\n      case _types.TypeDefInfo.Result:\n      case _types.TypeDefInfo.Tuple:\n        return extractTypes(decoded.sub.map(sub => sub.type));\n\n      default:\n        throw new Error(`Unhandled: Unable to create and validate type from ${type}`);\n    }\n  });\n}"]},"metadata":{},"sourceType":"script"}