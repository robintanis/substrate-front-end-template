{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.contractRegex = exports.contractKey = exports.addressRegex = exports.addressKey = exports.accountRegex = exports.accountKey = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _keyring = require(\"@polkadot/keyring\"); // Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst ACCOUNT_PREFIX = 'account:';\nconst ADDRESS_PREFIX = 'address:';\nconst CONTRACT_PREFIX = 'contract:';\n\nfunction toHex(address) {\n  return (0, _util.u8aToHex)( // When saving pre-checksum changes, ensure that we can decode\n  (0, _keyring.decodeAddress)(address, true));\n}\n\nconst accountKey = address => `${ACCOUNT_PREFIX}${toHex(address)}`;\n\nexports.accountKey = accountKey;\n\nconst addressKey = address => `${ADDRESS_PREFIX}${toHex(address)}`;\n\nexports.addressKey = addressKey;\n\nconst contractKey = address => `${CONTRACT_PREFIX}${toHex(address)}`;\n\nexports.contractKey = contractKey;\nconst accountRegex = new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`, '');\nexports.accountRegex = accountRegex;\nconst addressRegex = new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`, '');\nexports.addressRegex = addressRegex;\nconst contractRegex = new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`, '');\nexports.contractRegex = contractRegex;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/ui-keyring/defaults.js"],"names":["Object","defineProperty","exports","value","contractRegex","contractKey","addressRegex","addressKey","accountRegex","accountKey","_util","require","_keyring","ACCOUNT_PREFIX","ADDRESS_PREFIX","CONTRACT_PREFIX","toHex","address","u8aToHex","decodeAddress","RegExp"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBF,OAAO,CAACG,WAAR,GAAsBH,OAAO,CAACI,YAAR,GAAuBJ,OAAO,CAACK,UAAR,GAAqBL,OAAO,CAACM,YAAR,GAAuBN,OAAO,CAACO,UAAR,GAAqB,KAAK,CAA3I;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,mBAAD,CAAtB,C,CAEA;AACA;;;AACA,MAAME,cAAc,GAAG,UAAvB;AACA,MAAMC,cAAc,GAAG,UAAvB;AACA,MAAMC,eAAe,GAAG,WAAxB;;AAEA,SAASC,KAAT,CAAeC,OAAf,EAAwB;AACtB,SAAO,CAAC,GAAGP,KAAK,CAACQ,QAAV,GAAqB;AAC5B,GAAC,GAAGN,QAAQ,CAACO,aAAb,EAA4BF,OAA5B,EAAqC,IAArC,CADO,CAAP;AAED;;AAED,MAAMR,UAAU,GAAGQ,OAAO,IAAK,GAAEJ,cAAe,GAAEG,KAAK,CAACC,OAAD,CAAU,EAAjE;;AAEAf,OAAO,CAACO,UAAR,GAAqBA,UAArB;;AAEA,MAAMF,UAAU,GAAGU,OAAO,IAAK,GAAEH,cAAe,GAAEE,KAAK,CAACC,OAAD,CAAU,EAAjE;;AAEAf,OAAO,CAACK,UAAR,GAAqBA,UAArB;;AAEA,MAAMF,WAAW,GAAGY,OAAO,IAAK,GAAEF,eAAgB,GAAEC,KAAK,CAACC,OAAD,CAAU,EAAnE;;AAEAf,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACA,MAAMG,YAAY,GAAG,IAAIY,MAAJ,CAAY,IAAGP,cAAe,aAA9B,EAA4C,EAA5C,CAArB;AACAX,OAAO,CAACM,YAAR,GAAuBA,YAAvB;AACA,MAAMF,YAAY,GAAG,IAAIc,MAAJ,CAAY,IAAGN,cAAe,aAA9B,EAA4C,EAA5C,CAArB;AACAZ,OAAO,CAACI,YAAR,GAAuBA,YAAvB;AACA,MAAMF,aAAa,GAAG,IAAIgB,MAAJ,CAAY,IAAGL,eAAgB,aAA/B,EAA6C,EAA7C,CAAtB;AACAb,OAAO,CAACE,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.contractRegex = exports.contractKey = exports.addressRegex = exports.addressKey = exports.accountRegex = exports.accountKey = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _keyring = require(\"@polkadot/keyring\");\n\n// Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst ACCOUNT_PREFIX = 'account:';\nconst ADDRESS_PREFIX = 'address:';\nconst CONTRACT_PREFIX = 'contract:';\n\nfunction toHex(address) {\n  return (0, _util.u8aToHex)( // When saving pre-checksum changes, ensure that we can decode\n  (0, _keyring.decodeAddress)(address, true));\n}\n\nconst accountKey = address => `${ACCOUNT_PREFIX}${toHex(address)}`;\n\nexports.accountKey = accountKey;\n\nconst addressKey = address => `${ADDRESS_PREFIX}${toHex(address)}`;\n\nexports.addressKey = addressKey;\n\nconst contractKey = address => `${CONTRACT_PREFIX}${toHex(address)}`;\n\nexports.contractKey = contractKey;\nconst accountRegex = new RegExp(`^${ACCOUNT_PREFIX}0x[0-9a-f]*`, '');\nexports.accountRegex = accountRegex;\nconst addressRegex = new RegExp(`^${ADDRESS_PREFIX}0x[0-9a-f]*`, '');\nexports.addressRegex = addressRegex;\nconst contractRegex = new RegExp(`^${CONTRACT_PREFIX}0x[0-9a-f]*`, '');\nexports.contractRegex = contractRegex;"]},"metadata":{},"sourceType":"script"}