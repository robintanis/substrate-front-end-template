{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// The runtime definition of SessionKeys are passed as a Trait to session\n// Defined in `node/runtime/src/lib.rs` as follow\n//   impl_opaque_keys! {\n//     pub struct SessionKeys {\n// Here we revert to tuples to keep the interfaces \"opaque\", as per the use\n\n\nconst keyTypes = {\n  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n  Keys: 'SessionKeys4',\n  // shortcuts for 1, 2, 3, 4, 5 & 6 key tuples\n  SessionKeys1: '(AccountId)',\n  SessionKeys2: '(AccountId, AccountId)',\n  // older substrate master\n  SessionKeys3: '(AccountId, AccountId, AccountId)',\n  // CC2, Substrate master\n  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n  // CC3\n  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)'\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread({}, keyTypes), {}, {\n    FullIdentification: 'Exposure',\n    IdentificationTuple: '(ValidatorId, FullIdentification)',\n    MembershipProof: {\n      session: 'SessionIndex',\n      trieNodes: 'Vec<Vec<u8>>',\n      validatorCount: 'ValidatorCount'\n    },\n    SessionIndex: 'u32',\n    ValidatorCount: 'u32'\n  })\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/interfaces/session/definitions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","keyTypes","Keys","SessionKeys1","SessionKeys2","SessionKeys3","SessionKeys4","SessionKeys5","SessionKeys6","_default","rpc","types","FullIdentification","IdentificationTuple","MembershipProof","session","trieNodes","validatorCount","SessionIndex","ValidatorCount"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n// The runtime definition of SessionKeys are passed as a Trait to session\n// Defined in `node/runtime/src/lib.rs` as follow\n//   impl_opaque_keys! {\n//     pub struct SessionKeys {\n// Here we revert to tuples to keep the interfaces \"opaque\", as per the use\nconst keyTypes = {\n  // default to Substrate master defaults, 4 keys (polkadot master, 5 keys)\n  Keys: 'SessionKeys4',\n  // shortcuts for 1, 2, 3, 4, 5 & 6 key tuples\n  SessionKeys1: '(AccountId)',\n  SessionKeys2: '(AccountId, AccountId)',\n  // older substrate master\n  SessionKeys3: '(AccountId, AccountId, AccountId)',\n  // CC2, Substrate master\n  SessionKeys4: '(AccountId, AccountId, AccountId, AccountId)',\n  // CC3\n  SessionKeys5: '(AccountId, AccountId, AccountId, AccountId, AccountId)',\n  SessionKeys6: '(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)'\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread({}, keyTypes), {}, {\n    FullIdentification: 'Exposure',\n    IdentificationTuple: '(ValidatorId, FullIdentification)',\n    MembershipProof: {\n      session: 'SessionIndex',\n      trieNodes: 'Vec<Vec<u8>>',\n      validatorCount: 'ValidatorCount'\n    },\n    SessionIndex: 'u32',\n    ValidatorCount: 'u32'\n  })\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}