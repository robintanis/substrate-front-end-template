{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blake2AsHex;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _asU8a = _interopRequireDefault(require(\"./asU8a\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name blake2AsHex\n * @summary Creates a blake2b hex from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a hex string with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsHex } from '@polkadot/util-crypto';\n *\n * blake2AsHex('abc'); // => 0xba80a53f981c4d0d\n * ```\n */\n\n\nfunction blake2AsHex(data, bitLength = 256) {\n  return (0, _util.u8aToHex)((0, _asU8a.default)(data, bitLength));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/blake2/asHex.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","blake2AsHex","_util","_asU8a","data","bitLength","u8aToHex"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,MAAM,GAAGT,sBAAsB,CAACC,OAAO,CAAC,SAAD,CAAR,CAAnC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,WAAT,CAAqBG,IAArB,EAA2BC,SAAS,GAAG,GAAvC,EAA4C;AAC1C,SAAO,CAAC,GAAGH,KAAK,CAACI,QAAV,EAAoB,CAAC,GAAGH,MAAM,CAACH,OAAX,EAAoBI,IAApB,EAA0BC,SAA1B,CAApB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = blake2AsHex;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _asU8a = _interopRequireDefault(require(\"./asU8a\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name blake2AsHex\n * @summary Creates a blake2b hex from the input.\n * @description\n * From a `Uint8Array` input, create the blake2b and return the result as a hex string with the specified `bitLength`.\n * @example\n * <BR>\n *\n * ```javascript\n * import { blake2AsHex } from '@polkadot/util-crypto';\n *\n * blake2AsHex('abc'); // => 0xba80a53f981c4d0d\n * ```\n */\nfunction blake2AsHex(data, bitLength = 256) {\n  return (0, _util.u8aToHex)((0, _asU8a.default)(data, bitLength));\n}"]},"metadata":{},"sourceType":"script"}