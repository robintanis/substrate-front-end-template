{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mnemonicGenerate;\n\nrequire(\"../polyfill\");\n\nvar _bip = require(\"bip39\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// mapping of words to the actual strength (as expected)\n\n\nconst STRENGTH_MAP = {\n  12: 16 * 8,\n  15: 20 * 8,\n  18: 24 * 8,\n  21: 28 * 8,\n  24: 32 * 8\n};\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */\n\nfunction mnemonicGenerate(numWords = 12) {\n  return (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39Generate)(numWords) : (0, _bip.generateMnemonic)(STRENGTH_MAP[numWords]);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/mnemonic/generate.js"],"names":["Object","defineProperty","exports","value","default","mnemonicGenerate","require","_bip","_wasmCrypto","STRENGTH_MAP","numWords","isReady","bip39Generate","generateMnemonic"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,gBAAlB;;AAEAC,OAAO,CAAC,aAAD,CAAP;;AAEA,IAAIC,IAAI,GAAGD,OAAO,CAAC,OAAD,CAAlB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;AACA;AACA;;;AACA,MAAMG,YAAY,GAAG;AACnB,MAAI,KAAK,CADU;AAEnB,MAAI,KAAK,CAFU;AAGnB,MAAI,KAAK,CAHU;AAInB,MAAI,KAAK,CAJU;AAKnB,MAAI,KAAK;AALU,CAArB;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASJ,gBAAT,CAA0BK,QAAQ,GAAG,EAArC,EAAyC;AACvC,SAAO,CAAC,GAAGF,WAAW,CAACG,OAAhB,MAA6B,CAAC,GAAGH,WAAW,CAACI,aAAhB,EAA+BF,QAA/B,CAA7B,GAAwE,CAAC,GAAGH,IAAI,CAACM,gBAAT,EAA2BJ,YAAY,CAACC,QAAD,CAAvC,CAA/E;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mnemonicGenerate;\n\nrequire(\"../polyfill\");\n\nvar _bip = require(\"bip39\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// mapping of words to the actual strength (as expected)\nconst STRENGTH_MAP = {\n  12: 16 * 8,\n  15: 20 * 8,\n  18: 24 * 8,\n  21: 28 * 8,\n  24: 32 * 8\n};\n/**\n * @name mnemonicGenerate\n * @summary Creates a valid mnemonic string using using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki).\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * ```\n */\n\nfunction mnemonicGenerate(numWords = 12) {\n  return (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39Generate)(numWords) : (0, _bip.generateMnemonic)(STRENGTH_MAP[numWords]);\n}"]},"metadata":{},"sourceType":"script"}