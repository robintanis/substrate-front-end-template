{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = testKeyring;\nexports.PAIRS = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _pair = _interopRequireDefault(require(\"./pair\"));\n\nvar _ = _interopRequireDefault(require(\".\")); // Copyright 2017-2020 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE This is not great since we have the secretKey here explicitly, but a testing\n// keyring is for testing - what happens is that in most cases the keyring is initialises\n// before anything else. Since the sr25519 crypto is async, this creates problems with\n// adding the keys when only the keyring is used.\n\n\nconst PAIRS = [{\n  publicKey: (0, _util.hexToU8a)('0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'),\n  secretKey: (0, _util.hexToU8a)('0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011'),\n  seed: 'Alice'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f'),\n  secretKey: (0, _util.hexToU8a)('0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd'),\n  seed: 'Alice//stash'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48'),\n  secretKey: (0, _util.hexToU8a)('0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325'),\n  seed: 'Bob'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e'),\n  secretKey: (0, _util.hexToU8a)('0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde'),\n  seed: 'Bob//stash'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22'),\n  secretKey: (0, _util.hexToU8a)('0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c'),\n  seed: 'Charlie'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20'),\n  secretKey: (0, _util.hexToU8a)('0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568'),\n  seed: 'Dave'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e'),\n  secretKey: (0, _util.hexToU8a)('0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587'),\n  seed: 'Eve'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c'),\n  secretKey: (0, _util.hexToU8a)('0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426'),\n  seed: 'Ferdie'\n}];\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialised with DOT funds.\n */\n\nexports.PAIRS = PAIRS;\n\nfunction testKeyring(options = {}, isDerived = true) {\n  const keyring = new _.default(options);\n  PAIRS.forEach(({\n    name,\n    publicKey,\n    secretKey,\n    seed,\n    type = 'sr25519'\n  }) => {\n    const meta = {\n      isTesting: true,\n      name: name || seed.replace('//', '_').toLowerCase()\n    };\n    const pair = !isDerived && !name ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair((0, _pair.default)({\n      toSS58: keyring.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey\n    }, meta));\n\n    pair.lock = () => {// we don't have lock/unlock functionality here\n    };\n  });\n  return keyring;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/keyring/testing.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","testKeyring","PAIRS","_util","_pair","_","publicKey","hexToU8a","secretKey","seed","options","isDerived","keyring","forEach","name","type","meta","isTesting","replace","toLowerCase","pair","addFromUri","addPair","toSS58","encodeAddress","lock"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = testKeyring;\nexports.PAIRS = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _pair = _interopRequireDefault(require(\"./pair\"));\n\nvar _ = _interopRequireDefault(require(\".\"));\n\n// Copyright 2017-2020 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE This is not great since we have the secretKey here explicitly, but a testing\n// keyring is for testing - what happens is that in most cases the keyring is initialises\n// before anything else. Since the sr25519 crypto is async, this creates problems with\n// adding the keys when only the keyring is used.\nconst PAIRS = [{\n  publicKey: (0, _util.hexToU8a)('0xd43593c715fdd31c61141abd04a99fd6822c8558854ccde39a5684e7a56da27d'),\n  secretKey: (0, _util.hexToU8a)('0x98319d4ff8a9508c4bb0cf0b5a78d760a0b2082c02775e6e82370816fedfff48925a225d97aa00682d6a59b95b18780c10d7032336e88f3442b42361f4a66011'),\n  seed: 'Alice'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xbe5ddb1579b72e84524fc29e78609e3caf42e85aa118ebfe0b0ad404b5bdd25f'),\n  secretKey: (0, _util.hexToU8a)('0xe8da6c9d810e020f5e3c7f5af2dea314cbeaa0d72bc6421e92c0808a0c584a6046ab28e97c3ffc77fe12b5a4d37e8cd4afbfebbf2391ffc7cb07c0f38c023efd'),\n  seed: 'Alice//stash'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48'),\n  secretKey: (0, _util.hexToU8a)('0x081ff694633e255136bdb456c20a5fc8fed21f8b964c11bb17ff534ce80ebd5941ae88f85d0c1bfc37be41c904e1dfc01de8c8067b0d6d5df25dd1ac0894a325'),\n  seed: 'Bob'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xfe65717dad0447d715f660a0a58411de509b42e6efb8375f562f58a554d5860e'),\n  secretKey: (0, _util.hexToU8a)('0xc006507cdfc267a21532394c49ca9b754ca71de21e15a1cdf807c7ceab6d0b6c3ed408d9d35311540dcd54931933e67cf1ea10d46f75408f82b789d9bd212fde'),\n  seed: 'Bob//stash'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x90b5ab205c6974c9ea841be688864633dc9ca8a357843eeacf2314649965fe22'),\n  secretKey: (0, _util.hexToU8a)('0xa8f2d83016052e5d6d77b2f6fd5d59418922a09024cda701b3c34369ec43a7668faf12ff39cd4e5d92bb773972f41a7a5279ebc2ed92264bed8f47d344f8f18c'),\n  seed: 'Charlie'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x306721211d5404bd9da88e0204360a1a9ab8b87c66c1bc2fcdd37f3c2222cc20'),\n  secretKey: (0, _util.hexToU8a)('0x20e05482ca4677e0edbc58ae9a3a59f6ed3b1a9484ba17e64d6fe8688b2b7b5d108c4487b9323b98b11fe36cb301b084e920f7b7895536809a6d62a451b25568'),\n  seed: 'Dave'\n}, {\n  publicKey: (0, _util.hexToU8a)('0xe659a7a1628cdd93febc04a4e0646ea20e9f5f0ce097d9a05290d4a9e054df4e'),\n  secretKey: (0, _util.hexToU8a)('0x683576abfd5dc35273e4264c23095a1bf21c14517bece57c7f0cc5c0ed4ce06a3dbf386b7828f348abe15d76973a72009e6ef86a5c91db2990cb36bb657c6587'),\n  seed: 'Eve'\n}, {\n  publicKey: (0, _util.hexToU8a)('0x1cbd2d43530a44705ad088af313e18f80b53ef16b36177cd4b77b846f2a5f07c'),\n  secretKey: (0, _util.hexToU8a)('0xb835c20f450079cf4f513900ae9faf8df06ad86c681884122c752a4b2bf74d4303e4f21bc6cc62bb4eeed5a9cce642c25e2d2ac1464093b50f6196d78e3a7426'),\n  seed: 'Ferdie'\n}];\n/**\n * @name testKeyring\n * @summary Create an instance of Keyring pre-populated with locked test accounts\n * @description The test accounts (i.e. alice, bob, dave, eve, ferdie)\n * are available on the dev chain and each test account is initialised with DOT funds.\n */\n\nexports.PAIRS = PAIRS;\n\nfunction testKeyring(options = {}, isDerived = true) {\n  const keyring = new _.default(options);\n  PAIRS.forEach(({\n    name,\n    publicKey,\n    secretKey,\n    seed,\n    type = 'sr25519'\n  }) => {\n    const meta = {\n      isTesting: true,\n      name: name || seed.replace('//', '_').toLowerCase()\n    };\n    const pair = !isDerived && !name ? keyring.addFromUri(seed, meta, options.type) : keyring.addPair((0, _pair.default)({\n      toSS58: keyring.encodeAddress,\n      type\n    }, {\n      publicKey,\n      secretKey\n    }, meta));\n\n    pair.lock = () => {// we don't have lock/unlock functionality here\n    };\n  });\n  return keyring;\n}"]},"metadata":{},"sourceType":"script"}