{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _eventemitter2 = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _xWs = _interopRequireDefault(require(\"@polkadot/x-ws\"));\n\nvar _coder2 = _interopRequireDefault(require(\"../coder\"));\n\nvar _defaults = _interopRequireDefault(require(\"../defaults\"));\n\nvar _errors = require(\"./errors\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nconst ALIASSES = {\n  chain_finalisedHead: 'chain_finalizedHead',\n  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',\n  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'\n};\nconst RETRY_DELAY = 1000;\nconst l = (0, _util.logger)('api-ws');\n/**\n * # @polkadot/rpc-provider/ws\n *\n * @name WsProvider\n *\n * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import WsProvider from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const api = new Api(provider);\n * ```\n *\n * @see [[HttpProvider]]\n */\n\nvar _coder = (0, _classPrivateFieldLooseKey2.default)(\"coder\");\n\nvar _endpoints = (0, _classPrivateFieldLooseKey2.default)(\"endpoints\");\n\nvar _headers = (0, _classPrivateFieldLooseKey2.default)(\"headers\");\n\nvar _eventemitter = (0, _classPrivateFieldLooseKey2.default)(\"eventemitter\");\n\nvar _handlers = (0, _classPrivateFieldLooseKey2.default)(\"handlers\");\n\nvar _queued = (0, _classPrivateFieldLooseKey2.default)(\"queued\");\n\nvar _waitingForId = (0, _classPrivateFieldLooseKey2.default)(\"waitingForId\");\n\nvar _autoConnectMs = (0, _classPrivateFieldLooseKey2.default)(\"autoConnectMs\");\n\nvar _endpointIndex = (0, _classPrivateFieldLooseKey2.default)(\"endpointIndex\");\n\nvar _isConnected = (0, _classPrivateFieldLooseKey2.default)(\"isConnected\");\n\nvar _subscriptions = (0, _classPrivateFieldLooseKey2.default)(\"subscriptions\");\n\nvar _websocket = (0, _classPrivateFieldLooseKey2.default)(\"websocket\");\n\nvar _emit = (0, _classPrivateFieldLooseKey2.default)(\"emit\");\n\nvar _onSocketClose = (0, _classPrivateFieldLooseKey2.default)(\"onSocketClose\");\n\nvar _onSocketError = (0, _classPrivateFieldLooseKey2.default)(\"onSocketError\");\n\nvar _onSocketMessage = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessage\");\n\nvar _onSocketMessageResult = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessageResult\");\n\nvar _onSocketMessageSubscribe = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessageSubscribe\");\n\nvar _onSocketOpen = (0, _classPrivateFieldLooseKey2.default)(\"onSocketOpen\");\n\nvar _resubscribe = (0, _classPrivateFieldLooseKey2.default)(\"resubscribe\");\n\nvar _sendQueue = (0, _classPrivateFieldLooseKey2.default)(\"sendQueue\");\n\nclass WsProvider {\n  /**\n   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.\n   * @param {boolean} autoConnect Whether to connect automatically or not.\n   */\n  constructor(endpoint = _defaults.default.WS_URL, autoConnectMs = RETRY_DELAY, headers = {}) {\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoints, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _eventemitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handlers, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _queued, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _waitingForId, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _autoConnectMs, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpointIndex, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isConnected, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _subscriptions, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _websocket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _emit, {\n      writable: true,\n      value: (type, ...args) => {\n        (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].emit(type, ...args);\n      }\n    });\n    Object.defineProperty(this, _onSocketClose, {\n      writable: true,\n      value: event => {\n        if ((0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          l.error(`disconnected from ${(0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]}: ${event.code}:: ${event.reason || (0, _errors.getWSErrorString)(event.code)}`);\n        }\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected] = false;\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('disconnected');\n\n        if ((0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          setTimeout(() => {\n            this.connectWithRetry().catch(() => {// does not throw\n            });\n          }, (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs]);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketError, {\n      writable: true,\n      value: error => {\n        l.debug(() => ['socket error', error]);\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessage, {\n      writable: true,\n      value: message => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        l.debug(() => ['received', message.data]);\n        const response = JSON.parse(message.data);\n        return (0, _util.isUndefined)(response.method) ? (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageResult)[_onSocketMessageResult](response) : (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageResult, {\n      writable: true,\n      value: response => {\n        const handler = (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][response.id];\n\n        if (!handler) {\n          l.debug(() => `Unable to find handler for id=${response.id}`);\n          return;\n        }\n\n        try {\n          const {\n            method,\n            params,\n            subscription\n          } = handler;\n\n          const result = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update\n          // immediately if we have some queued results already\n\n\n          handler.callback(null, result);\n\n          if (subscription) {\n            const subId = `${subscription.type}::${result}`;\n            (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subId] = _objectSpread(_objectSpread({}, subscription), {}, {\n              method,\n              params\n            }); // if we have a result waiting for this subscription already\n\n            if ((0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId]) {\n              (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe]((0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId]);\n            }\n          }\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n\n        delete (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][response.id];\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageSubscribe, {\n      writable: true,\n      value: response => {\n        const method = ALIASSES[response.method] || response.method || 'invalid';\n        const subId = `${method}::${response.params.subscription}`;\n\n        const handler = (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subId];\n\n        if (!handler) {\n          // store the JSON, we could have out-of-order subid coming in\n          (0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId] = response;\n          l.debug(() => `Unable to find handler for subscription=${subId}`);\n          return;\n        } // housekeeping\n\n\n        delete (0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId];\n\n        try {\n          const result = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].decodeResponse(response);\n\n          handler.callback(null, result);\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketOpen, {\n      writable: true,\n      value: () => {\n        (0, _util.assert)(!(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]), 'WebSocket cannot be null in onOpen');\n        l.debug(() => ['connected to', (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]]);\n        (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected] = true;\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('connected');\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _sendQueue)[_sendQueue]();\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _resubscribe)[_resubscribe]();\n\n        return true;\n      }\n    });\n    Object.defineProperty(this, _resubscribe, {\n      writable: true,\n      value: () => {\n        const subscriptions = (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions];\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions] = {}; // eslint-disable-next-line @typescript-eslint/no-misused-promises\n\n        Object.keys(subscriptions).forEach(async id => {\n          const {\n            callback,\n            method,\n            params,\n            type\n          } = subscriptions[id]; // only re-create subscriptions which are not in author (only area where\n          // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n          // are not included (and will not be re-broadcast)\n\n          if (type.startsWith('author_')) {\n            return;\n          }\n\n          try {\n            await this.subscribe(type, method, params, callback);\n          } catch (error) {\n            l.error(error);\n          }\n        });\n      }\n    });\n    Object.defineProperty(this, _sendQueue, {\n      writable: true,\n      value: () => {\n        Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued]).forEach(id => {\n          try {\n            // we have done the websocket check in onSocketOpen, if an issue, will catch it\n            (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].send((0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id]);\n\n            delete (0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id];\n          } catch (error) {\n            l.error(error);\n          }\n        });\n      }\n    });\n    const endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];\n    (0, _util.assert)(endpoints.length !== 0, 'WsProvider requires at least one Endpoint');\n    endpoints.forEach(endpoint => {\n      (0, _util.assert)(/^(wss|ws):\\/\\//.test(endpoint), `Endpoint should start with 'ws://', received '${endpoint}'`);\n    });\n    (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter] = new _eventemitter2.default();\n    (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;\n    (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder] = new _coder2.default();\n    (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = -1;\n    (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints] = endpoints;\n    (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers] = headers;\n    (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = null;\n\n    if (autoConnectMs > 0) {\n      this.connectWithRetry().catch(() => {// does not throw\n      });\n    }\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return true;\n  }\n  /**\n   * @summary Whether the node is connected or not.\n   * @return {boolean} true if connected\n   */\n\n\n  get isConnected() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected];\n  }\n  /**\n   * @description Returns a clone of the object\n   */\n\n\n  clone() {\n    return new WsProvider((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints]);\n  }\n  /**\n   * @summary Manually connect\n   * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may\n   * connect manually using this method.\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async connect() {\n    try {\n      (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = ((0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] + 1) % (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints].length;\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = typeof WebSocket !== 'undefined' && (0, _util.isChildClass)(WebSocket, _xWs.default) ? new _xWs.default((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers\n      : new _xWs.default((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]], undefined, undefined, (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers]);\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onclose = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketClose)[_onSocketClose];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onerror = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketError)[_onSocketError];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onmessage = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessage)[_onSocketMessage];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onopen = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketOpen)[_onSocketOpen];\n    } catch (error) {\n      l.error(error);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @description Connect, never throwing an error, but rather forcing a retry\n   */\n\n\n  async connectWithRetry() {\n    try {\n      await this.connect();\n    } catch (error) {\n      setTimeout(() => {\n        this.connectWithRetry().catch(() => {// does not throw\n        });\n      }, (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] || RETRY_DELAY);\n    }\n  }\n  /**\n   * @description Manually disconnect from the connection, clearing autoconnect logic\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async disconnect() {\n    try {\n      (0, _util.assert)(!(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]), 'Cannot disconnect on a non-connected websocket'); // switch off autoConnect, we are in manual mode now\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = 0; // 1000 - Normal closure; the connection successfully completed\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].close(1000);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = null;\n    } catch (error) {\n      l.error(error);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @summary Listens on events after having subscribed using the [[subscribe]] function.\n   * @param  {ProviderInterfaceEmitted} type Event\n   * @param  {ProviderInterfaceEmitCb}  sub  Callback\n   * @return unsubscribe function\n   */\n\n\n  on(type, sub) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].on(type, sub);\n\n    return () => {\n      (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].removeListener(type, sub);\n    };\n  }\n  /**\n   * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.\n   * @param method The RPC methods to execute\n   * @param params Encoded paramaters as appliucable for the method\n   * @param subscription Subscription details (internally used)\n   */\n\n\n  send(method, params, subscription) {\n    return new Promise((resolve, reject) => {\n      try {\n        const json = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].encodeJson(method, params);\n\n        const id = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].getId();\n\n        const callback = (error, result) => {\n          error ? reject(error) : resolve(result);\n        };\n\n        l.debug(() => ['calling', method, json]);\n        (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][id] = {\n          callback,\n          method,\n          params,\n          subscription\n        };\n\n        if (this.isConnected && !(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket])) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].send(json);\n        } else {\n          (0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id] = json;\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  /**\n   * @name subscribe\n   * @summary Allows subscribing to a specific event.\n   * @param  {string}                     type     Subscription type\n   * @param  {string}                     method   Subscription method\n   * @param  {any[]}                 params   Parameters\n   * @param  {ProviderInterfaceCallback} callback Callback\n   * @return {Promise<number>}                     Promise resolving to the dd of the subscription you can use with [[unsubscribe]].\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * const provider = new WsProvider('ws://127.0.0.1:9944');\n   * const rpc = new Rpc(provider);\n   *\n   * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {\n   *   console.log(values)\n   * }).then((subscriptionId) => {\n   *   console.log('balance changes subscription id: ', subscriptionId)\n   * })\n   * ```\n   */\n\n\n  async subscribe(type, method, params, callback) {\n    const id = await this.send(method, params, {\n      callback,\n      type\n    });\n    return id;\n  }\n  /**\n   * @summary Allows unsubscribing to subscriptions made with [[subscribe]].\n   */\n\n\n  async unsubscribe(type, method, id) {\n    const subscription = `${type}::${id}`; // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub\n    // the assigned id now does not match what the API user originally received. It has\n    // a slight complication in solving - since we cannot rely on the send id, but rather\n    // need to find the actual subscription id to map it\n\n    if ((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription])) {\n      l.debug(() => `Unable to find active subscription=${subscription}`);\n      return false;\n    }\n\n    delete (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription];\n    const result = await this.send(method, [id]);\n    return result;\n  }\n\n}\n\nexports.default = WsProvider;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/rpc-provider/ws/Provider.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_eventemitter2","_util","_xWs","_coder2","_defaults","_errors","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","ALIASSES","chain_finalisedHead","chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads","RETRY_DELAY","l","logger","_coder","_endpoints","_headers","_eventemitter","_handlers","_queued","_waitingForId","_autoConnectMs","_endpointIndex","_isConnected","_subscriptions","_websocket","_emit","_onSocketClose","_onSocketError","_onSocketMessage","_onSocketMessageResult","_onSocketMessageSubscribe","_onSocketOpen","_resubscribe","_sendQueue","WsProvider","constructor","endpoint","WS_URL","autoConnectMs","headers","writable","type","args","emit","event","error","code","reason","getWSErrorString","setTimeout","connectWithRetry","catch","debug","message","data","response","JSON","parse","isUndefined","method","handler","id","params","subscription","result","decodeResponse","callback","subId","undefined","assert","isNull","subscriptions","startsWith","subscribe","send","endpoints","Array","isArray","test","hasSubscriptions","isConnected","clone","connect","WebSocket","isChildClass","onclose","onerror","onmessage","onopen","disconnect","close","on","sub","removeListener","Promise","resolve","reject","json","encodeJson","getId","unsubscribe"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _eventemitter2 = _interopRequireDefault(require(\"eventemitter3\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _xWs = _interopRequireDefault(require(\"@polkadot/x-ws\"));\n\nvar _coder2 = _interopRequireDefault(require(\"../coder\"));\n\nvar _defaults = _interopRequireDefault(require(\"../defaults\"));\n\nvar _errors = require(\"./errors\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nconst ALIASSES = {\n  chain_finalisedHead: 'chain_finalizedHead',\n  chain_subscribeFinalisedHeads: 'chain_subscribeFinalizedHeads',\n  chain_unsubscribeFinalisedHeads: 'chain_unsubscribeFinalizedHeads'\n};\nconst RETRY_DELAY = 1000;\nconst l = (0, _util.logger)('api-ws');\n/**\n * # @polkadot/rpc-provider/ws\n *\n * @name WsProvider\n *\n * @description The WebSocket Provider allows sending requests using WebSocket to a WebSocket RPC server TCP port. Unlike the [[HttpProvider]], it does support subscriptions and allows listening to events such as new blocks or balance changes.\n *\n * @example\n * <BR>\n *\n * ```javascript\n * import Api from '@polkadot/api/promise';\n * import WsProvider from '@polkadot/rpc-provider/ws';\n *\n * const provider = new WsProvider('ws://127.0.0.1:9944');\n * const api = new Api(provider);\n * ```\n *\n * @see [[HttpProvider]]\n */\n\nvar _coder = (0, _classPrivateFieldLooseKey2.default)(\"coder\");\n\nvar _endpoints = (0, _classPrivateFieldLooseKey2.default)(\"endpoints\");\n\nvar _headers = (0, _classPrivateFieldLooseKey2.default)(\"headers\");\n\nvar _eventemitter = (0, _classPrivateFieldLooseKey2.default)(\"eventemitter\");\n\nvar _handlers = (0, _classPrivateFieldLooseKey2.default)(\"handlers\");\n\nvar _queued = (0, _classPrivateFieldLooseKey2.default)(\"queued\");\n\nvar _waitingForId = (0, _classPrivateFieldLooseKey2.default)(\"waitingForId\");\n\nvar _autoConnectMs = (0, _classPrivateFieldLooseKey2.default)(\"autoConnectMs\");\n\nvar _endpointIndex = (0, _classPrivateFieldLooseKey2.default)(\"endpointIndex\");\n\nvar _isConnected = (0, _classPrivateFieldLooseKey2.default)(\"isConnected\");\n\nvar _subscriptions = (0, _classPrivateFieldLooseKey2.default)(\"subscriptions\");\n\nvar _websocket = (0, _classPrivateFieldLooseKey2.default)(\"websocket\");\n\nvar _emit = (0, _classPrivateFieldLooseKey2.default)(\"emit\");\n\nvar _onSocketClose = (0, _classPrivateFieldLooseKey2.default)(\"onSocketClose\");\n\nvar _onSocketError = (0, _classPrivateFieldLooseKey2.default)(\"onSocketError\");\n\nvar _onSocketMessage = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessage\");\n\nvar _onSocketMessageResult = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessageResult\");\n\nvar _onSocketMessageSubscribe = (0, _classPrivateFieldLooseKey2.default)(\"onSocketMessageSubscribe\");\n\nvar _onSocketOpen = (0, _classPrivateFieldLooseKey2.default)(\"onSocketOpen\");\n\nvar _resubscribe = (0, _classPrivateFieldLooseKey2.default)(\"resubscribe\");\n\nvar _sendQueue = (0, _classPrivateFieldLooseKey2.default)(\"sendQueue\");\n\nclass WsProvider {\n  /**\n   * @param {string | string[]}  endpoint    The endpoint url. Usually `ws://ip:9944` or `wss://ip:9944`, may provide an array of endpoint strings.\n   * @param {boolean} autoConnect Whether to connect automatically or not.\n   */\n  constructor(endpoint = _defaults.default.WS_URL, autoConnectMs = RETRY_DELAY, headers = {}) {\n    Object.defineProperty(this, _coder, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpoints, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _headers, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _eventemitter, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _handlers, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _queued, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _waitingForId, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _autoConnectMs, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _endpointIndex, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isConnected, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _subscriptions, {\n      writable: true,\n      value: {}\n    });\n    Object.defineProperty(this, _websocket, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _emit, {\n      writable: true,\n      value: (type, ...args) => {\n        (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].emit(type, ...args);\n      }\n    });\n    Object.defineProperty(this, _onSocketClose, {\n      writable: true,\n      value: event => {\n        if ((0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          l.error(`disconnected from ${(0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]}: ${event.code}:: ${event.reason || (0, _errors.getWSErrorString)(event.code)}`);\n        }\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected] = false;\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('disconnected');\n\n        if ((0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] > 0) {\n          setTimeout(() => {\n            this.connectWithRetry().catch(() => {// does not throw\n            });\n          }, (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs]);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketError, {\n      writable: true,\n      value: error => {\n        l.debug(() => ['socket error', error]);\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessage, {\n      writable: true,\n      value: message => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        l.debug(() => ['received', message.data]);\n        const response = JSON.parse(message.data);\n        return (0, _util.isUndefined)(response.method) ? (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageResult)[_onSocketMessageResult](response) : (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe](response);\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageResult, {\n      writable: true,\n      value: response => {\n        const handler = (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][response.id];\n\n        if (!handler) {\n          l.debug(() => `Unable to find handler for id=${response.id}`);\n          return;\n        }\n\n        try {\n          const {\n            method,\n            params,\n            subscription\n          } = handler;\n\n          const result = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].decodeResponse(response); // first send the result - in case of subs, we may have an update\n          // immediately if we have some queued results already\n\n\n          handler.callback(null, result);\n\n          if (subscription) {\n            const subId = `${subscription.type}::${result}`;\n            (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subId] = _objectSpread(_objectSpread({}, subscription), {}, {\n              method,\n              params\n            }); // if we have a result waiting for this subscription already\n\n            if ((0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId]) {\n              (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessageSubscribe)[_onSocketMessageSubscribe]((0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId]);\n            }\n          }\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n\n        delete (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][response.id];\n      }\n    });\n    Object.defineProperty(this, _onSocketMessageSubscribe, {\n      writable: true,\n      value: response => {\n        const method = ALIASSES[response.method] || response.method || 'invalid';\n        const subId = `${method}::${response.params.subscription}`;\n\n        const handler = (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subId];\n\n        if (!handler) {\n          // store the JSON, we could have out-of-order subid coming in\n          (0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId] = response;\n          l.debug(() => `Unable to find handler for subscription=${subId}`);\n          return;\n        } // housekeeping\n\n\n        delete (0, _classPrivateFieldLooseBase2.default)(this, _waitingForId)[_waitingForId][subId];\n\n        try {\n          const result = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].decodeResponse(response);\n\n          handler.callback(null, result);\n        } catch (error) {\n          handler.callback(error, undefined);\n        }\n      }\n    });\n    Object.defineProperty(this, _onSocketOpen, {\n      writable: true,\n      value: () => {\n        (0, _util.assert)(!(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]), 'WebSocket cannot be null in onOpen');\n        l.debug(() => ['connected to', (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]]);\n        (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected] = true;\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('connected');\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _sendQueue)[_sendQueue]();\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _resubscribe)[_resubscribe]();\n\n        return true;\n      }\n    });\n    Object.defineProperty(this, _resubscribe, {\n      writable: true,\n      value: () => {\n        const subscriptions = (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions];\n\n        (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions] = {}; // eslint-disable-next-line @typescript-eslint/no-misused-promises\n\n        Object.keys(subscriptions).forEach(async id => {\n          const {\n            callback,\n            method,\n            params,\n            type\n          } = subscriptions[id]; // only re-create subscriptions which are not in author (only area where\n          // transactions are created, i.e. submissions such as 'author_submitAndWatchExtrinsic'\n          // are not included (and will not be re-broadcast)\n\n          if (type.startsWith('author_')) {\n            return;\n          }\n\n          try {\n            await this.subscribe(type, method, params, callback);\n          } catch (error) {\n            l.error(error);\n          }\n        });\n      }\n    });\n    Object.defineProperty(this, _sendQueue, {\n      writable: true,\n      value: () => {\n        Object.keys((0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued]).forEach(id => {\n          try {\n            // we have done the websocket check in onSocketOpen, if an issue, will catch it\n            (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].send((0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id]);\n\n            delete (0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id];\n          } catch (error) {\n            l.error(error);\n          }\n        });\n      }\n    });\n    const endpoints = Array.isArray(endpoint) ? endpoint : [endpoint];\n    (0, _util.assert)(endpoints.length !== 0, 'WsProvider requires at least one Endpoint');\n    endpoints.forEach(endpoint => {\n      (0, _util.assert)(/^(wss|ws):\\/\\//.test(endpoint), `Endpoint should start with 'ws://', received '${endpoint}'`);\n    });\n    (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter] = new _eventemitter2.default();\n    (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = autoConnectMs || 0;\n    (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder] = new _coder2.default();\n    (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = -1;\n    (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints] = endpoints;\n    (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers] = headers;\n    (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = null;\n\n    if (autoConnectMs > 0) {\n      this.connectWithRetry().catch(() => {// does not throw\n      });\n    }\n  }\n  /**\n   * @summary `true` when this provider supports subscriptions\n   */\n\n\n  get hasSubscriptions() {\n    return true;\n  }\n  /**\n   * @summary Whether the node is connected or not.\n   * @return {boolean} true if connected\n   */\n\n\n  get isConnected() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _isConnected)[_isConnected];\n  }\n  /**\n   * @description Returns a clone of the object\n   */\n\n\n  clone() {\n    return new WsProvider((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints]);\n  }\n  /**\n   * @summary Manually connect\n   * @description The [[WsProvider]] connects automatically by default, however if you decided otherwise, you may\n   * connect manually using this method.\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async connect() {\n    try {\n      (0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] = ((0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex] + 1) % (0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints].length;\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = typeof WebSocket !== 'undefined' && (0, _util.isChildClass)(WebSocket, _xWs.default) ? new _xWs.default((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]]) // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore - WS may be an instance of w3cwebsocket, which supports headers\n      : new _xWs.default((0, _classPrivateFieldLooseBase2.default)(this, _endpoints)[_endpoints][(0, _classPrivateFieldLooseBase2.default)(this, _endpointIndex)[_endpointIndex]], undefined, undefined, (0, _classPrivateFieldLooseBase2.default)(this, _headers)[_headers]);\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onclose = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketClose)[_onSocketClose];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onerror = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketError)[_onSocketError];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onmessage = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketMessage)[_onSocketMessage];\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].onopen = (0, _classPrivateFieldLooseBase2.default)(this, _onSocketOpen)[_onSocketOpen];\n    } catch (error) {\n      l.error(error);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @description Connect, never throwing an error, but rather forcing a retry\n   */\n\n\n  async connectWithRetry() {\n    try {\n      await this.connect();\n    } catch (error) {\n      setTimeout(() => {\n        this.connectWithRetry().catch(() => {// does not throw\n        });\n      }, (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] || RETRY_DELAY);\n    }\n  }\n  /**\n   * @description Manually disconnect from the connection, clearing autoconnect logic\n   */\n  // eslint-disable-next-line @typescript-eslint/require-await\n\n\n  async disconnect() {\n    try {\n      (0, _util.assert)(!(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket]), 'Cannot disconnect on a non-connected websocket'); // switch off autoConnect, we are in manual mode now\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _autoConnectMs)[_autoConnectMs] = 0; // 1000 - Normal closure; the connection successfully completed\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].close(1000);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket] = null;\n    } catch (error) {\n      l.error(error);\n\n      (0, _classPrivateFieldLooseBase2.default)(this, _emit)[_emit]('error', error);\n\n      throw error;\n    }\n  }\n  /**\n   * @summary Listens on events after having subscribed using the [[subscribe]] function.\n   * @param  {ProviderInterfaceEmitted} type Event\n   * @param  {ProviderInterfaceEmitCb}  sub  Callback\n   * @return unsubscribe function\n   */\n\n\n  on(type, sub) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].on(type, sub);\n\n    return () => {\n      (0, _classPrivateFieldLooseBase2.default)(this, _eventemitter)[_eventemitter].removeListener(type, sub);\n    };\n  }\n  /**\n   * @summary Send JSON data using WebSockets to configured HTTP Endpoint or queue.\n   * @param method The RPC methods to execute\n   * @param params Encoded paramaters as appliucable for the method\n   * @param subscription Subscription details (internally used)\n   */\n\n\n  send(method, params, subscription) {\n    return new Promise((resolve, reject) => {\n      try {\n        const json = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].encodeJson(method, params);\n\n        const id = (0, _classPrivateFieldLooseBase2.default)(this, _coder)[_coder].getId();\n\n        const callback = (error, result) => {\n          error ? reject(error) : resolve(result);\n        };\n\n        l.debug(() => ['calling', method, json]);\n        (0, _classPrivateFieldLooseBase2.default)(this, _handlers)[_handlers][id] = {\n          callback,\n          method,\n          params,\n          subscription\n        };\n\n        if (this.isConnected && !(0, _util.isNull)((0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket])) {\n          (0, _classPrivateFieldLooseBase2.default)(this, _websocket)[_websocket].send(json);\n        } else {\n          (0, _classPrivateFieldLooseBase2.default)(this, _queued)[_queued][id] = json;\n        }\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  /**\n   * @name subscribe\n   * @summary Allows subscribing to a specific event.\n   * @param  {string}                     type     Subscription type\n   * @param  {string}                     method   Subscription method\n   * @param  {any[]}                 params   Parameters\n   * @param  {ProviderInterfaceCallback} callback Callback\n   * @return {Promise<number>}                     Promise resolving to the dd of the subscription you can use with [[unsubscribe]].\n   *\n   * @example\n   * <BR>\n   *\n   * ```javascript\n   * const provider = new WsProvider('ws://127.0.0.1:9944');\n   * const rpc = new Rpc(provider);\n   *\n   * rpc.state.subscribeStorage([[storage.system.account, <Address>]], (_, values) => {\n   *   console.log(values)\n   * }).then((subscriptionId) => {\n   *   console.log('balance changes subscription id: ', subscriptionId)\n   * })\n   * ```\n   */\n\n\n  async subscribe(type, method, params, callback) {\n    const id = await this.send(method, params, {\n      callback,\n      type\n    });\n    return id;\n  }\n  /**\n   * @summary Allows unsubscribing to subscriptions made with [[subscribe]].\n   */\n\n\n  async unsubscribe(type, method, id) {\n    const subscription = `${type}::${id}`; // FIXME This now could happen with re-subscriptions. The issue is that with a re-sub\n    // the assigned id now does not match what the API user originally received. It has\n    // a slight complication in solving - since we cannot rely on the send id, but rather\n    // need to find the actual subscription id to map it\n\n    if ((0, _util.isUndefined)((0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription])) {\n      l.debug(() => `Unable to find active subscription=${subscription}`);\n      return false;\n    }\n\n    delete (0, _classPrivateFieldLooseBase2.default)(this, _subscriptions)[_subscriptions][subscription];\n    const result = await this.send(method, [id]);\n    return result;\n  }\n\n}\n\nexports.default = WsProvider;"]},"metadata":{},"sourceType":"script"}