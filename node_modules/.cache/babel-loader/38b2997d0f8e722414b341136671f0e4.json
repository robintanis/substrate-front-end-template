{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nclass SubmittableResult {\n  constructor({\n    events,\n    status\n  }) {\n    this.events = void 0;\n    this.status = void 0;\n    this.events = events || [];\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return this.events.filter(({\n      event\n    }) => event.section === section && event.method === method);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.events.find(({\n      event\n    }) => event.section === section && event.method === method);\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    return {\n      events: this.events.map(event => event.toHuman(isExtended)),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}\n\nexports.default = SubmittableResult;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api/submittable/Result.js"],"names":["Object","defineProperty","exports","value","default","SubmittableResult","constructor","events","status","isCompleted","isError","isInBlock","isFinalized","isDropped","isFinalityTimeout","isInvalid","isUsurped","isWarning","isRetracted","filterRecords","section","method","filter","event","findRecord","find","toHuman","isExtended","map"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB,C,CAEA;AACA;;AACA,MAAMC,iBAAN,CAAwB;AACtBC,EAAAA,WAAW,CAAC;AACVC,IAAAA,MADU;AAEVC,IAAAA;AAFU,GAAD,EAGR;AACD,SAAKD,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKC,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKD,MAAL,GAAcA,MAAM,IAAI,EAAxB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACD;;AAED,MAAIC,WAAJ,GAAkB;AAChB,WAAO,KAAKC,OAAL,IAAgB,KAAKF,MAAL,CAAYG,SAA5B,IAAyC,KAAKH,MAAL,CAAYI,WAA5D;AACD;;AAED,MAAIF,OAAJ,GAAc;AACZ,WAAO,KAAKF,MAAL,CAAYK,SAAZ,IAAyB,KAAKL,MAAL,CAAYM,iBAArC,IAA0D,KAAKN,MAAL,CAAYO,SAAtE,IAAmF,KAAKP,MAAL,CAAYQ,SAAtG;AACD;;AAED,MAAIJ,WAAJ,GAAkB;AAChB,WAAO,KAAKJ,MAAL,CAAYI,WAAnB;AACD;;AAED,MAAID,SAAJ,GAAgB;AACd,WAAO,KAAKH,MAAL,CAAYG,SAAnB;AACD;;AAED,MAAIM,SAAJ,GAAgB;AACd,WAAO,KAAKT,MAAL,CAAYU,WAAnB;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,aAAa,CAACC,OAAD,EAAUC,MAAV,EAAkB;AAC7B,WAAO,KAAKd,MAAL,CAAYe,MAAZ,CAAmB,CAAC;AACzBC,MAAAA;AADyB,KAAD,KAEpBA,KAAK,CAACH,OAAN,KAAkBA,OAAlB,IAA6BG,KAAK,CAACF,MAAN,KAAiBA,MAF7C,CAAP;AAGD;AACD;AACF;AACA;;;AAGEG,EAAAA,UAAU,CAACJ,OAAD,EAAUC,MAAV,EAAkB;AAC1B,WAAO,KAAKd,MAAL,CAAYkB,IAAZ,CAAiB,CAAC;AACvBF,MAAAA;AADuB,KAAD,KAElBA,KAAK,CAACH,OAAN,KAAkBA,OAAlB,IAA6BG,KAAK,CAACF,MAAN,KAAiBA,MAF7C,CAAP;AAGD;AACD;AACF;AACA;;;AAGEK,EAAAA,OAAO,CAACC,UAAD,EAAa;AAClB,WAAO;AACLpB,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYqB,GAAZ,CAAgBL,KAAK,IAAIA,KAAK,CAACG,OAAN,CAAcC,UAAd,CAAzB,CADH;AAELnB,MAAAA,MAAM,EAAE,KAAKA,MAAL,CAAYkB,OAAZ,CAAoBC,UAApB;AAFH,KAAP;AAID;;AA5DqB;;AAgExBzB,OAAO,CAACE,OAAR,GAAkBC,iBAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nclass SubmittableResult {\n  constructor({\n    events,\n    status\n  }) {\n    this.events = void 0;\n    this.status = void 0;\n    this.events = events || [];\n    this.status = status;\n  }\n\n  get isCompleted() {\n    return this.isError || this.status.isInBlock || this.status.isFinalized;\n  }\n\n  get isError() {\n    return this.status.isDropped || this.status.isFinalityTimeout || this.status.isInvalid || this.status.isUsurped;\n  }\n\n  get isFinalized() {\n    return this.status.isFinalized;\n  }\n\n  get isInBlock() {\n    return this.status.isInBlock;\n  }\n\n  get isWarning() {\n    return this.status.isRetracted;\n  }\n  /**\n   * @description Filters EventRecords for the specified method & section (there could be multiple)\n   */\n\n\n  filterRecords(section, method) {\n    return this.events.filter(({\n      event\n    }) => event.section === section && event.method === method);\n  }\n  /**\n   * @description Finds an EventRecord for the specified method & section\n   */\n\n\n  findRecord(section, method) {\n    return this.events.find(({\n      event\n    }) => event.section === section && event.method === method);\n  }\n  /**\n   * @description Creates a human representation of the output\n   */\n\n\n  toHuman(isExtended) {\n    return {\n      events: this.events.map(event => event.toHuman(isExtended)),\n      status: this.status.toHuman(isExtended)\n    };\n  }\n\n}\n\nexports.default = SubmittableResult;"]},"metadata":{},"sourceType":"script"}