{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapToTypeMap;\n\nvar _typeToConstructor = _interopRequireDefault(require(\"./typeToConstructor\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Constructor }`\n */\n\n\nfunction mapToTypeMap(registry, input) {\n  return Object.entries(input).reduce((output, [key, type]) => {\n    output[key] = (0, _typeToConstructor.default)(registry, type);\n    return output;\n  }, {});\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/codec/utils/mapToTypeMap.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","mapToTypeMap","_typeToConstructor","registry","input","entries","reduce","output","key","type"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,kBAAkB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C,C,CAEA;AACA;;AAEA;AACA;AACA;;;AACA,SAASM,YAAT,CAAsBE,QAAtB,EAAgCC,KAAhC,EAAuC;AACrC,SAAOR,MAAM,CAACS,OAAP,CAAeD,KAAf,EAAsBE,MAAtB,CAA6B,CAACC,MAAD,EAAS,CAACC,GAAD,EAAMC,IAAN,CAAT,KAAyB;AAC3DF,IAAAA,MAAM,CAACC,GAAD,CAAN,GAAc,CAAC,GAAGN,kBAAkB,CAACF,OAAvB,EAAgCG,QAAhC,EAA0CM,IAA1C,CAAd;AACA,WAAOF,MAAP;AACD,GAHM,EAGJ,EAHI,CAAP;AAID","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mapToTypeMap;\n\nvar _typeToConstructor = _interopRequireDefault(require(\"./typeToConstructor\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @description takes an input map of the form `{ [string]: string | Constructor }` and returns a map of `{ [string]: Constructor }`\n */\nfunction mapToTypeMap(registry, input) {\n  return Object.entries(input).reduce((output, [key, type]) => {\n    output[key] = (0, _typeToConstructor.default)(registry, type);\n    return output;\n  }, {});\n}"]},"metadata":{},"sourceType":"script"}