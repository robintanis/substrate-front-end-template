{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sanitize = _interopRequireDefault(require(\"../create/sanitize\"));\n\nvar _Text = _interopRequireDefault(require(\"./Text\")); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Type\n * @description\n * This is a extended version of String, specifically to handle types. Here we rely fully\n * on what string provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\n\n\nclass Type extends _Text.default {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride((0, _sanitize.default)(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}\n\nexports.default = Type;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/primitive/Type.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_sanitize","_Text","Type","constructor","registry","setOverride","toString","toRawType"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,SAAS,GAAGP,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAtC;;AAEA,IAAIO,KAAK,GAAGR,sBAAsB,CAACC,OAAO,CAAC,QAAD,CAAR,CAAlC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMQ,IAAN,SAAmBD,KAAK,CAACF,OAAzB,CAAiC;AAC/BI,EAAAA,WAAW,CAACC,QAAD,EAAWN,KAAK,GAAG,EAAnB,EAAuB;AAChC,UAAMM,QAAN,EAAgBN,KAAhB;AACA,SAAKO,WAAL,CAAiB,CAAC,GAAGL,SAAS,CAACD,OAAd,EAAuB,KAAKO,QAAL,EAAvB,CAAjB;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,SAAS,GAAG;AACV,WAAO,MAAP;AACD;;AAZ8B;;AAgBjCV,OAAO,CAACE,OAAR,GAAkBG,IAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sanitize = _interopRequireDefault(require(\"../create/sanitize\"));\n\nvar _Text = _interopRequireDefault(require(\"./Text\"));\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Type\n * @description\n * This is a extended version of String, specifically to handle types. Here we rely fully\n * on what string provides us, however we also adjust the types received from the runtime,\n * i.e. we remove the `T::` prefixes found in some types for consistency across implementation.\n */\nclass Type extends _Text.default {\n  constructor(registry, value = '') {\n    super(registry, value);\n    this.setOverride((0, _sanitize.default)(this.toString()));\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Type';\n  }\n\n}\n\nexports.default = Type;"]},"metadata":{},"sourceType":"script"}