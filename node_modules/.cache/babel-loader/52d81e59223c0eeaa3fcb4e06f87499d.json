{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addressEq;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _decode = _interopRequireDefault(require(\"./decode\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name addressEq\n * @summary Compares two addresses, either in ss58, Uint8Array or hex format.\n * @description\n * For the input values, return true is the underlying public keys do match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\n\n\nfunction addressEq(a, b) {\n  return (0, _util.u8aEq)((0, _decode.default)(a), (0, _decode.default)(b));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/address/eq.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","addressEq","_util","_decode","a","b","u8aEq"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,SAAT,CAAmBG,CAAnB,EAAsBC,CAAtB,EAAyB;AACvB,SAAO,CAAC,GAAGH,KAAK,CAACI,KAAV,EAAiB,CAAC,GAAGH,OAAO,CAACH,OAAZ,EAAqBI,CAArB,CAAjB,EAA0C,CAAC,GAAGD,OAAO,CAACH,OAAZ,EAAqBK,CAArB,CAA1C,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addressEq;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _decode = _interopRequireDefault(require(\"./decode\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name addressEq\n * @summary Compares two addresses, either in ss58, Uint8Array or hex format.\n * @description\n * For the input values, return true is the underlying public keys do match.\n * @example\n * <BR>\n *\n * ```javascript\n * import { u8aEq } from '@polkadot/util';\n *\n * u8aEq(new Uint8Array([0x68, 0x65]), new Uint8Array([0x68, 0x65])); // true\n * ```\n */\nfunction addressEq(a, b) {\n  return (0, _util.u8aEq)((0, _decode.default)(a), (0, _decode.default)(b));\n}"]},"metadata":{},"sourceType":"script"}