{"ast":null,"code":"var _jsxFileName = \"/home/robin/substrate-front-end-template/src/BlockNumber.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const {\n    finalized\n  } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n  const bestNumber = finalized ? api.derive.chain.bestNumberFinalized : api.derive.chain.bestNumber;\n  useEffect(() => {\n    let unsubscribeAll = null;\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    }).then(unsub => {\n      unsubscribeAll = unsub;\n    }).catch(console.error);\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    textAlign: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Statistic, {\n    label: (finalized ? 'Finalized' : 'Current') + ' Block',\n    value: blockNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), \" \", blockNumberTimer)));\n}\n\nexport default function BlockNumber(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.derive && api.derive.chain && api.derive.chain.bestNumber && api.derive.chain.bestNumberFinalized ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/src/BlockNumber.js"],"names":["React","useEffect","useState","Statistic","Grid","Card","Icon","useSubstrate","Main","props","api","finalized","blockNumber","setBlockNumber","blockNumberTimer","setBlockNumberTimer","bestNumber","derive","chain","bestNumberFinalized","unsubscribeAll","number","toNumber","then","unsub","catch","console","error","timer","time","id","setInterval","clearInterval","BlockNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Statistic, Grid, Card, Icon } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const { finalized } = props;\n  const [blockNumber, setBlockNumber] = useState(0);\n  const [blockNumberTimer, setBlockNumberTimer] = useState(0);\n\n  const bestNumber = finalized\n    ? api.derive.chain.bestNumberFinalized\n    : api.derive.chain.bestNumber;\n\n  useEffect(() => {\n    let unsubscribeAll = null;\n\n    bestNumber(number => {\n      setBlockNumber(number.toNumber());\n      setBlockNumberTimer(0);\n    })\n      .then(unsub => {\n        unsubscribeAll = unsub;\n      })\n      .catch(console.error);\n\n    return () => unsubscribeAll && unsubscribeAll();\n  }, [bestNumber]);\n\n  const timer = () => {\n    setBlockNumberTimer(time => time + 1);\n  };\n\n  useEffect(() => {\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n  }, []);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content textAlign='center'>\n          <Statistic\n            label={(finalized ? 'Finalized' : 'Current') + ' Block'}\n            value={blockNumber}\n          />\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='time' /> {blockNumberTimer}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function BlockNumber (props) {\n  const { api } = useSubstrate();\n  return api.derive &&\n    api.derive.chain &&\n    api.derive.chain.bestNumber &&\n    api.derive.chain.bestNumberFinalized ? (\n      <Main {...props} />\n    ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}