{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetaRegistryItem = exports.MetaTypeInfo = exports.TypeDefInfo = void 0; // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Type which says: if `K` is in the InterfaceTypes, then return InterfaceTypes[K], else fallback to T\n\nlet TypeDefInfo;\nexports.TypeDefInfo = TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 3] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 4] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 5] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 6] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 7] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 8] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 9] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 10] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 11] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 12] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 13] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 14] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 15] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 16] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 17] = \"Null\";\n})(TypeDefInfo || (exports.TypeDefInfo = TypeDefInfo = {}));\n\nlet MetaTypeInfo;\nexports.MetaTypeInfo = MetaTypeInfo;\n\n(function (MetaTypeInfo) {\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinPlain\"] = 0] = \"BuiltinPlain\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinTuple\"] = 1] = \"BuiltinTuple\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinVec\"] = 2] = \"BuiltinVec\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinVecFixed\"] = 3] = \"BuiltinVecFixed\";\n  MetaTypeInfo[MetaTypeInfo[\"Enum\"] = 4] = \"Enum\";\n  MetaTypeInfo[MetaTypeInfo[\"ClikeEnum\"] = 5] = \"ClikeEnum\";\n  MetaTypeInfo[MetaTypeInfo[\"Struct\"] = 6] = \"Struct\";\n  MetaTypeInfo[MetaTypeInfo[\"TupleStruct\"] = 7] = \"TupleStruct\";\n  MetaTypeInfo[MetaTypeInfo[\"Null\"] = 8] = \"Null\";\n})(MetaTypeInfo || (exports.MetaTypeInfo = MetaTypeInfo = {}));\n\nlet MetaRegistryItem;\nexports.MetaRegistryItem = MetaRegistryItem;\n\n(function (MetaRegistryItem) {\n  MetaRegistryItem[MetaRegistryItem[\"String\"] = 0] = \"String\";\n  MetaRegistryItem[MetaRegistryItem[\"Type\"] = 1] = \"Type\";\n  MetaRegistryItem[MetaRegistryItem[\"TypeDef\"] = 2] = \"TypeDef\";\n})(MetaRegistryItem || (exports.MetaRegistryItem = MetaRegistryItem = {}));","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/create/types.js"],"names":["Object","defineProperty","exports","value","MetaRegistryItem","MetaTypeInfo","TypeDefInfo"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MetaRegistryItem = exports.MetaTypeInfo = exports.TypeDefInfo = void 0;\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// Type which says: if `K` is in the InterfaceTypes, then return InterfaceTypes[K], else fallback to T\nlet TypeDefInfo;\nexports.TypeDefInfo = TypeDefInfo;\n\n(function (TypeDefInfo) {\n  TypeDefInfo[TypeDefInfo[\"BTreeMap\"] = 0] = \"BTreeMap\";\n  TypeDefInfo[TypeDefInfo[\"BTreeSet\"] = 1] = \"BTreeSet\";\n  TypeDefInfo[TypeDefInfo[\"Compact\"] = 2] = \"Compact\";\n  TypeDefInfo[TypeDefInfo[\"Enum\"] = 3] = \"Enum\";\n  TypeDefInfo[TypeDefInfo[\"Linkage\"] = 4] = \"Linkage\";\n  TypeDefInfo[TypeDefInfo[\"Option\"] = 5] = \"Option\";\n  TypeDefInfo[TypeDefInfo[\"Plain\"] = 6] = \"Plain\";\n  TypeDefInfo[TypeDefInfo[\"Result\"] = 7] = \"Result\";\n  TypeDefInfo[TypeDefInfo[\"Set\"] = 8] = \"Set\";\n  TypeDefInfo[TypeDefInfo[\"Struct\"] = 9] = \"Struct\";\n  TypeDefInfo[TypeDefInfo[\"Tuple\"] = 10] = \"Tuple\";\n  TypeDefInfo[TypeDefInfo[\"Vec\"] = 11] = \"Vec\";\n  TypeDefInfo[TypeDefInfo[\"VecFixed\"] = 12] = \"VecFixed\";\n  TypeDefInfo[TypeDefInfo[\"HashMap\"] = 13] = \"HashMap\";\n  TypeDefInfo[TypeDefInfo[\"Int\"] = 14] = \"Int\";\n  TypeDefInfo[TypeDefInfo[\"UInt\"] = 15] = \"UInt\";\n  TypeDefInfo[TypeDefInfo[\"DoNotConstruct\"] = 16] = \"DoNotConstruct\";\n  TypeDefInfo[TypeDefInfo[\"Null\"] = 17] = \"Null\";\n})(TypeDefInfo || (exports.TypeDefInfo = TypeDefInfo = {}));\n\nlet MetaTypeInfo;\nexports.MetaTypeInfo = MetaTypeInfo;\n\n(function (MetaTypeInfo) {\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinPlain\"] = 0] = \"BuiltinPlain\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinTuple\"] = 1] = \"BuiltinTuple\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinVec\"] = 2] = \"BuiltinVec\";\n  MetaTypeInfo[MetaTypeInfo[\"BuiltinVecFixed\"] = 3] = \"BuiltinVecFixed\";\n  MetaTypeInfo[MetaTypeInfo[\"Enum\"] = 4] = \"Enum\";\n  MetaTypeInfo[MetaTypeInfo[\"ClikeEnum\"] = 5] = \"ClikeEnum\";\n  MetaTypeInfo[MetaTypeInfo[\"Struct\"] = 6] = \"Struct\";\n  MetaTypeInfo[MetaTypeInfo[\"TupleStruct\"] = 7] = \"TupleStruct\";\n  MetaTypeInfo[MetaTypeInfo[\"Null\"] = 8] = \"Null\";\n})(MetaTypeInfo || (exports.MetaTypeInfo = MetaTypeInfo = {}));\n\nlet MetaRegistryItem;\nexports.MetaRegistryItem = MetaRegistryItem;\n\n(function (MetaRegistryItem) {\n  MetaRegistryItem[MetaRegistryItem[\"String\"] = 0] = \"String\";\n  MetaRegistryItem[MetaRegistryItem[\"Type\"] = 1] = \"Type\";\n  MetaRegistryItem[MetaRegistryItem[\"TypeDef\"] = 2] = \"TypeDef\";\n})(MetaRegistryItem || (exports.MetaRegistryItem = MetaRegistryItem = {}));"]},"metadata":{},"sourceType":"script"}