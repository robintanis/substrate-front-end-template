{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._eraSlashes = _eraSlashes;\nexports.eraSlashes = eraSlashes;\nexports._erasSlashes = _erasSlashes;\nexports.erasSlashes = erasSlashes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst CACHE_KEY = 'eraSlashes';\n\nfunction mapSlashes(era, noms, vals) {\n  const nominators = {};\n  const validators = {};\n  noms.forEach(([key, optBalance]) => {\n    nominators[key.args[1].toString()] = optBalance.unwrap();\n  });\n  vals.forEach(([key, optRes]) => {\n    validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\n\nfunction _eraSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : _util.deriveCache.get(cacheKey);\n    return cached ? (0, _rxjs.of)(cached) : (0, _rxjs.combineLatest)([api.query.staking.nominatorSlashInEra.entries(era), api.query.staking.validatorSlashInEra.entries(era)]).pipe((0, _operators.map)(([noms, vals]) => {\n      const value = mapSlashes(era, noms, vals);\n      !withActive && _util.deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\n\nfunction eraSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, era => api.derive.staking._eraSlashes(era, true));\n}\n\nfunction _erasSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (eras, withActive) => eras.length ? (0, _rxjs.combineLatest)(eras.map(era => api.derive.staking._eraSlashes(era, withActive))) : (0, _rxjs.of)([]));\n}\n\nfunction erasSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._erasSlashes(eras, withActive))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/erasSlashes.js"],"names":["Object","defineProperty","exports","value","_eraSlashes","eraSlashes","_erasSlashes","erasSlashes","_rxjs","require","_operators","_util","CACHE_KEY","mapSlashes","era","noms","vals","nominators","validators","forEach","key","optBalance","args","toString","unwrap","optRes","unwrapOrDefault","instanceId","api","memo","withActive","cacheKey","cached","undefined","deriveCache","get","of","combineLatest","query","staking","nominatorSlashInEra","entries","validatorSlashInEra","pipe","map","set","derive","eras","length","erasHistoric","switchMap"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._eraSlashes = _eraSlashes;\nexports.eraSlashes = eraSlashes;\nexports._erasSlashes = _erasSlashes;\nexports.erasSlashes = erasSlashes;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst CACHE_KEY = 'eraSlashes';\n\nfunction mapSlashes(era, noms, vals) {\n  const nominators = {};\n  const validators = {};\n  noms.forEach(([key, optBalance]) => {\n    nominators[key.args[1].toString()] = optBalance.unwrap();\n  });\n  vals.forEach(([key, optRes]) => {\n    validators[key.args[1].toString()] = optRes.unwrapOrDefault()[1];\n  });\n  return {\n    era,\n    nominators,\n    validators\n  };\n}\n\nfunction _eraSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : _util.deriveCache.get(cacheKey);\n    return cached ? (0, _rxjs.of)(cached) : (0, _rxjs.combineLatest)([api.query.staking.nominatorSlashInEra.entries(era), api.query.staking.validatorSlashInEra.entries(era)]).pipe((0, _operators.map)(([noms, vals]) => {\n      const value = mapSlashes(era, noms, vals);\n      !withActive && _util.deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\n\nfunction eraSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, era => api.derive.staking._eraSlashes(era, true));\n}\n\nfunction _erasSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (eras, withActive) => eras.length ? (0, _rxjs.combineLatest)(eras.map(era => api.derive.staking._eraSlashes(era, withActive))) : (0, _rxjs.of)([]));\n}\n\nfunction erasSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._erasSlashes(eras, withActive))));\n}"]},"metadata":{},"sourceType":"script"}