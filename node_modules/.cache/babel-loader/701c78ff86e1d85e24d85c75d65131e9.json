{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = base64Decode;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _validate = _interopRequireDefault(require(\"./validate\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\n\n\nfunction base64Decode(value) {\n  (0, _validate.default)(value);\n  return (0, _util.bufferToU8a)(Buffer.from(value, 'base64'));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/base64/decode.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","base64Decode","_util","_validate","bufferToU8a","Buffer","from"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,SAAS,GAAGT,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,YAAT,CAAsBF,KAAtB,EAA6B;AAC3B,GAAC,GAAGI,SAAS,CAACH,OAAd,EAAuBD,KAAvB;AACA,SAAO,CAAC,GAAGG,KAAK,CAACE,WAAV,EAAuBC,MAAM,CAACC,IAAP,CAAYP,KAAZ,EAAmB,QAAnB,CAAvB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = base64Decode;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _validate = _interopRequireDefault(require(\"./validate\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name base64Decode\n * @summary Decodes a base64 value.\n * @description\n * From the provided input, decode the base64 and return the result as an `Uint8Array`.\n */\nfunction base64Decode(value) {\n  (0, _validate.default)(value);\n  return (0, _util.bufferToU8a)(Buffer.from(value, 'base64'));\n}"]},"metadata":{},"sourceType":"script"}