{"ast":null,"code":"// Copyright 2019-2020 @polkadot/wasm-crypto authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nconst pkg = require('./package.json');\n\nconst asm = require('./wasm_asm_stub');\n\nconst bytes = require('./wasm_wasm');\n\nconst imports = require('./wasm');\n\nmodule.exports = async function createExportPromise() {\n  try {\n    const {\n      instance\n    } = await WebAssembly.instantiate(bytes, {\n      __wbindgen_placeholder__: imports\n    });\n    return instance.exports;\n  } catch (error) {\n    // if we have a valid supplied asm.js, return that\n    if (asm && asm.ext_blake2b) {\n      return asm;\n    }\n\n    console.error(`ERROR: Unable to initialize ${pkg.name} ${pkg.version}`);\n    console.error(error);\n    return null;\n  }\n};","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/wasm-crypto/wasm_promise.js"],"names":["pkg","require","asm","bytes","imports","module","exports","createExportPromise","instance","WebAssembly","instantiate","__wbindgen_placeholder__","error","ext_blake2b","console","name","version"],"mappings":"AAAA;AACA;AACA;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,iBAAD,CAAnB;;AACA,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAD,CAArB;;AACA,MAAMG,OAAO,GAAGH,OAAO,CAAC,QAAD,CAAvB;;AAEAI,MAAM,CAACC,OAAP,GAAiB,eAAeC,mBAAf,GAAsC;AACrD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAe,MAAMC,WAAW,CAACC,WAAZ,CAAwBP,KAAxB,EAA+B;AAAEQ,MAAAA,wBAAwB,EAAEP;AAA5B,KAA/B,CAA3B;AAEA,WAAOI,QAAQ,CAACF,OAAhB;AACD,GAJD,CAIE,OAAOM,KAAP,EAAc;AACd;AACA,QAAIV,GAAG,IAAIA,GAAG,CAACW,WAAf,EAA4B;AAC1B,aAAOX,GAAP;AACD;;AAEDY,IAAAA,OAAO,CAACF,KAAR,CAAe,+BAA8BZ,GAAG,CAACe,IAAK,IAAGf,GAAG,CAACgB,OAAQ,EAArE;AACAF,IAAAA,OAAO,CAACF,KAAR,CAAcA,KAAd;AAEA,WAAO,IAAP;AACD;AACF,CAhBD","sourcesContent":["// Copyright 2019-2020 @polkadot/wasm-crypto authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nconst pkg = require('./package.json');\nconst asm = require('./wasm_asm_stub');\nconst bytes = require('./wasm_wasm');\nconst imports = require('./wasm');\n\nmodule.exports = async function createExportPromise () {\n  try {\n    const { instance } = await WebAssembly.instantiate(bytes, { __wbindgen_placeholder__: imports });\n\n    return instance.exports;\n  } catch (error) {\n    // if we have a valid supplied asm.js, return that\n    if (asm && asm.ext_blake2b) {\n      return asm;\n    }\n\n    console.error(`ERROR: Unable to initialize ${pkg.name} ${pkg.version}`);\n    console.error(error);\n\n    return null;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}