{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expandExtensionTypes = expandExtensionTypes;\nexports.findUnknownExtensions = findUnknownExtensions;\nexports.defaultExtensions = exports.allExtensions = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _polkadot = _interopRequireDefault(require(\"./polkadot\"));\n\nvar _substrate = _interopRequireDefault(require(\"./substrate\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // A mapping of the known signed extensions to the extra fields that they contain. Unlike in the actual extensions,\n// we define the extra fields not as a Tuple, but rather as a struct so they can be named. These will be expanded\n// into the various fields when added to the payload (we only support V4 onwards with these, V3 and earlier are\n// deemded fixed and non-changeable)\n\n\nconst allExtensions = _objectSpread(_objectSpread({}, _substrate.default), _polkadot.default); // the v4 signed extensions (the order is important here, as applied by default)\n\n\nexports.allExtensions = allExtensions;\nconst defaultExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexports.defaultExtensions = defaultExtensions;\n\nfunction findUnknownExtensions(extensions) {\n  const names = Object.keys(allExtensions);\n  return extensions.filter(key => !names.includes(key));\n}\n\nfunction expandExtensionTypes(extensions, type) {\n  return extensions.map(key => allExtensions[key]).filter(info => !!info).reduce((result, info) => _objectSpread(_objectSpread({}, result), info[type]), {});\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/extrinsic/signedExtensions/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","expandExtensionTypes","findUnknownExtensions","defaultExtensions","allExtensions","_defineProperty2","_polkadot","_substrate","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","extensions","names","includes","type","map","info","reduce","result"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.expandExtensionTypes = expandExtensionTypes;\nexports.findUnknownExtensions = findUnknownExtensions;\nexports.defaultExtensions = exports.allExtensions = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _polkadot = _interopRequireDefault(require(\"./polkadot\"));\n\nvar _substrate = _interopRequireDefault(require(\"./substrate\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// A mapping of the known signed extensions to the extra fields that they contain. Unlike in the actual extensions,\n// we define the extra fields not as a Tuple, but rather as a struct so they can be named. These will be expanded\n// into the various fields when added to the payload (we only support V4 onwards with these, V3 and earlier are\n// deemded fixed and non-changeable)\nconst allExtensions = _objectSpread(_objectSpread({}, _substrate.default), _polkadot.default); // the v4 signed extensions (the order is important here, as applied by default)\n\n\nexports.allExtensions = allExtensions;\nconst defaultExtensions = ['CheckVersion', 'CheckGenesis', 'CheckEra', 'CheckNonce', 'CheckWeight', 'ChargeTransactionPayment', 'CheckBlockGasLimit'];\nexports.defaultExtensions = defaultExtensions;\n\nfunction findUnknownExtensions(extensions) {\n  const names = Object.keys(allExtensions);\n  return extensions.filter(key => !names.includes(key));\n}\n\nfunction expandExtensionTypes(extensions, type) {\n  return extensions.map(key => allExtensions[key]).filter(info => !!info).reduce((result, info) => _objectSpread(_objectSpread({}, result), info[type]), {});\n}"]},"metadata":{},"sourceType":"script"}