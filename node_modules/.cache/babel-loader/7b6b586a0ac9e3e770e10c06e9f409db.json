{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._stakerSlashes = _stakerSlashes;\nexports.stakerSlashes = stakerSlashes;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction _stakerSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (accountId, eras, withActive) => {\n    const stakerId = api.registry.createType('AccountId', accountId).toString();\n    return api.derive.staking._erasSlashes(eras, withActive).pipe((0, _operators.map)(slashes => slashes.map(({\n      era,\n      nominators,\n      validators\n    }) => ({\n      era,\n      total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')\n    }))));\n  });\n}\n\nfunction stakerSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._stakerSlashes(accountId, eras, withActive))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/stakerSlashes.js"],"names":["Object","defineProperty","exports","value","_stakerSlashes","stakerSlashes","_operators","require","_util","instanceId","api","memo","accountId","eras","withActive","stakerId","registry","createType","toString","derive","staking","_erasSlashes","pipe","map","slashes","era","nominators","validators","total","erasHistoric","switchMap"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;AACAF,OAAO,CAACG,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASH,cAAT,CAAwBK,UAAxB,EAAoCC,GAApC,EAAyC;AACvC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,CAACG,SAAD,EAAYC,IAAZ,EAAkBC,UAAlB,KAAiC;AAClE,UAAMC,QAAQ,GAAGL,GAAG,CAACM,QAAJ,CAAaC,UAAb,CAAwB,WAAxB,EAAqCL,SAArC,EAAgDM,QAAhD,EAAjB;AACA,WAAOR,GAAG,CAACS,MAAJ,CAAWC,OAAX,CAAmBC,YAAnB,CAAgCR,IAAhC,EAAsCC,UAAtC,EAAkDQ,IAAlD,CAAuD,CAAC,GAAGhB,UAAU,CAACiB,GAAf,EAAoBC,OAAO,IAAIA,OAAO,CAACD,GAAR,CAAY,CAAC;AACxGE,MAAAA,GADwG;AAExGC,MAAAA,UAFwG;AAGxGC,MAAAA;AAHwG,KAAD,MAIlG;AACLF,MAAAA,GADK;AAELG,MAAAA,KAAK,EAAEF,UAAU,CAACX,QAAD,CAAV,IAAwBY,UAAU,CAACZ,QAAD,CAAlC,IAAgDL,GAAG,CAACM,QAAJ,CAAaC,UAAb,CAAwB,SAAxB;AAFlD,KAJkG,CAAZ,CAA/B,CAAvD,CAAP;AAQD,GAVM,CAAP;AAWD;;AAED,SAASZ,aAAT,CAAuBI,UAAvB,EAAmCC,GAAnC,EAAwC;AACtC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,CAACG,SAAD,EAAYE,UAAU,GAAG,KAAzB,KAAmCJ,GAAG,CAACS,MAAJ,CAAWC,OAAX,CAAmBS,YAAnB,CAAgCf,UAAhC,EAA4CQ,IAA5C,CAAiD,CAAC,GAAGhB,UAAU,CAACwB,SAAf,EAA0BjB,IAAI,IAAIH,GAAG,CAACS,MAAJ,CAAWC,OAAX,CAAmBhB,cAAnB,CAAkCQ,SAAlC,EAA6CC,IAA7C,EAAmDC,UAAnD,CAAlC,CAAjD,CAA/D,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._stakerSlashes = _stakerSlashes;\nexports.stakerSlashes = stakerSlashes;\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction _stakerSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (accountId, eras, withActive) => {\n    const stakerId = api.registry.createType('AccountId', accountId).toString();\n    return api.derive.staking._erasSlashes(eras, withActive).pipe((0, _operators.map)(slashes => slashes.map(({\n      era,\n      nominators,\n      validators\n    }) => ({\n      era,\n      total: nominators[stakerId] || validators[stakerId] || api.registry.createType('Balance')\n    }))));\n  });\n}\n\nfunction stakerSlashes(instanceId, api) {\n  return (0, _util.memo)(instanceId, (accountId, withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._stakerSlashes(accountId, eras, withActive))));\n}"]},"metadata":{},"sourceType":"script"}