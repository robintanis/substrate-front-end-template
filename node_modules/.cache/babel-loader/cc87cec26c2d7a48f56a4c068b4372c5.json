{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scryptToU8a;\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction scryptToU8a(salt, {\n  N,\n  p,\n  r\n}) {\n  return (0, _util.u8aConcat)(salt, (0, _util.bnToU8a)(N, {\n    bitLength: 32,\n    isLe: true\n  }), (0, _util.bnToU8a)(p, {\n    bitLength: 32,\n    isLe: true\n  }), (0, _util.bnToU8a)(r, {\n    bitLength: 32,\n    isLe: true\n  }));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/scrypt/toU8a.js"],"names":["Object","defineProperty","exports","value","default","scryptToU8a","_util","require","salt","N","p","r","u8aConcat","bnToU8a","bitLength","isLe"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASF,WAAT,CAAqBG,IAArB,EAA2B;AACzBC,EAAAA,CADyB;AAEzBC,EAAAA,CAFyB;AAGzBC,EAAAA;AAHyB,CAA3B,EAIG;AACD,SAAO,CAAC,GAAGL,KAAK,CAACM,SAAV,EAAqBJ,IAArB,EAA2B,CAAC,GAAGF,KAAK,CAACO,OAAV,EAAmBJ,CAAnB,EAAsB;AACtDK,IAAAA,SAAS,EAAE,EAD2C;AAEtDC,IAAAA,IAAI,EAAE;AAFgD,GAAtB,CAA3B,EAGH,CAAC,GAAGT,KAAK,CAACO,OAAV,EAAmBH,CAAnB,EAAsB;AACxBI,IAAAA,SAAS,EAAE,EADa;AAExBC,IAAAA,IAAI,EAAE;AAFkB,GAAtB,CAHG,EAMH,CAAC,GAAGT,KAAK,CAACO,OAAV,EAAmBF,CAAnB,EAAsB;AACxBG,IAAAA,SAAS,EAAE,EADa;AAExBC,IAAAA,IAAI,EAAE;AAFkB,GAAtB,CANG,CAAP;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = scryptToU8a;\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction scryptToU8a(salt, {\n  N,\n  p,\n  r\n}) {\n  return (0, _util.u8aConcat)(salt, (0, _util.bnToU8a)(N, {\n    bitLength: 32,\n    isLe: true\n  }), (0, _util.bnToU8a)(p, {\n    bitLength: 32,\n    isLe: true\n  }), (0, _util.bnToU8a)(r, {\n    bitLength: 32,\n    isLe: true\n  }));\n}"]},"metadata":{},"sourceType":"script"}