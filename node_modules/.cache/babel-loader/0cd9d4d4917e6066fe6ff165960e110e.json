{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.erasHistoric = erasHistoric;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction erasHistoric(instanceId, api) {\n  return (0, _util.memo)(instanceId, withActive => {\n    var _api$query$staking;\n\n    return ((_api$query$staking = api.query.staking) === null || _api$query$staking === void 0 ? void 0 : _api$query$staking.activeEra) ? api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe((0, _operators.map)(([activeEraOpt, historyDepth]) => {\n      const result = [];\n      const max = historyDepth.toNumber();\n      const activeEra = activeEraOpt.unwrapOrDefault().index;\n      let lastEra = activeEra;\n\n      while (lastEra.gten(0) && result.length < max) {\n        if (lastEra !== activeEra || withActive === true) {\n          result.push(api.registry.createType('EraIndex', lastEra));\n        }\n\n        lastEra = lastEra.subn(1);\n      } // go from oldest to newest\n\n\n      return result.reverse();\n    })) : (0, _rxjs.of)([]);\n  });\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/erasHistoric.js"],"names":["Object","defineProperty","exports","value","erasHistoric","_rxjs","require","_operators","_util","instanceId","api","memo","withActive","_api$query$staking","query","staking","activeEra","queryMulti","historyDepth","pipe","map","activeEraOpt","result","max","toNumber","unwrapOrDefault","index","lastEra","gten","length","push","registry","createType","subn","reverse","of"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASF,YAAT,CAAsBK,UAAtB,EAAkCC,GAAlC,EAAuC;AACrC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4BG,UAAU,IAAI;AAC/C,QAAIC,kBAAJ;;AAEA,WAAO,CAAC,CAACA,kBAAkB,GAAGH,GAAG,CAACI,KAAJ,CAAUC,OAAhC,MAA6C,IAA7C,IAAqDF,kBAAkB,KAAK,KAAK,CAAjF,GAAqF,KAAK,CAA1F,GAA8FA,kBAAkB,CAACG,SAAlH,IAA+HN,GAAG,CAACO,UAAJ,CAAe,CAACP,GAAG,CAACI,KAAJ,CAAUC,OAAV,CAAkBC,SAAnB,EAA8BN,GAAG,CAACI,KAAJ,CAAUC,OAAV,CAAkBG,YAAhD,CAAf,EAA8EC,IAA9E,CAAmF,CAAC,GAAGZ,UAAU,CAACa,GAAf,EAAoB,CAAC,CAACC,YAAD,EAAeH,YAAf,CAAD,KAAkC;AAC7Q,YAAMI,MAAM,GAAG,EAAf;AACA,YAAMC,GAAG,GAAGL,YAAY,CAACM,QAAb,EAAZ;AACA,YAAMR,SAAS,GAAGK,YAAY,CAACI,eAAb,GAA+BC,KAAjD;AACA,UAAIC,OAAO,GAAGX,SAAd;;AAEA,aAAOW,OAAO,CAACC,IAAR,CAAa,CAAb,KAAmBN,MAAM,CAACO,MAAP,GAAgBN,GAA1C,EAA+C;AAC7C,YAAII,OAAO,KAAKX,SAAZ,IAAyBJ,UAAU,KAAK,IAA5C,EAAkD;AAChDU,UAAAA,MAAM,CAACQ,IAAP,CAAYpB,GAAG,CAACqB,QAAJ,CAAaC,UAAb,CAAwB,UAAxB,EAAoCL,OAApC,CAAZ;AACD;;AAEDA,QAAAA,OAAO,GAAGA,OAAO,CAACM,IAAR,CAAa,CAAb,CAAV;AACD,OAZ4Q,CAY3Q;;;AAGF,aAAOX,MAAM,CAACY,OAAP,EAAP;AACD,KAhBwN,CAAnF,CAA/H,GAgBD,CAAC,GAAG7B,KAAK,CAAC8B,EAAV,EAAc,EAAd,CAhBN;AAiBD,GApBM,CAAP;AAqBD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.erasHistoric = erasHistoric;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction erasHistoric(instanceId, api) {\n  return (0, _util.memo)(instanceId, withActive => {\n    var _api$query$staking;\n\n    return ((_api$query$staking = api.query.staking) === null || _api$query$staking === void 0 ? void 0 : _api$query$staking.activeEra) ? api.queryMulti([api.query.staking.activeEra, api.query.staking.historyDepth]).pipe((0, _operators.map)(([activeEraOpt, historyDepth]) => {\n      const result = [];\n      const max = historyDepth.toNumber();\n      const activeEra = activeEraOpt.unwrapOrDefault().index;\n      let lastEra = activeEra;\n\n      while (lastEra.gten(0) && result.length < max) {\n        if (lastEra !== activeEra || withActive === true) {\n          result.push(api.registry.createType('EraIndex', lastEra));\n        }\n\n        lastEra = lastEra.subn(1);\n      } // go from oldest to newest\n\n\n      return result.reverse();\n    })) : (0, _rxjs.of)([]);\n  });\n}"]},"metadata":{},"sourceType":"script"}