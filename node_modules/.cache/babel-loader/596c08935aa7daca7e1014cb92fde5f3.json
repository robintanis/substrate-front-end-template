{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _MetadataVersioned = _interopRequireDefault(require(\"./MetadataVersioned\")); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// magic u32 preceding the version id\n\n\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = (0, _util.u8aConcat)(new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]));\nconst EMPTY_U8A = new Uint8Array();\n\nfunction sanitizeInput(_value = EMPTY_U8A) {\n  if ((0, _util.isString)(_value)) {\n    return sanitizeInput((0, _util.u8aToU8a)(_value));\n  }\n\n  return _value.length === 0 ? EMPTY_METADATA : _value;\n}\n\nfunction decodeMetadata(registry, _value) {\n  const value = sanitizeInput(_value);\n  const version = value[VERSION_IDX];\n\n  try {\n    return new _MetadataVersioned.default(registry, value);\n  } catch (error) {\n    // This is an f-ing hack as a follow-up to another ugly hack\n    // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n    // when we fail on V9, try to re-parse it as v10... yes... HACK\n    if (version === 9) {\n      value[VERSION_IDX] = 10;\n      return decodeMetadata(registry, value);\n    }\n\n    throw error;\n  }\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nclass Metadata extends _MetadataVersioned.default {\n  constructor(registry, value) {\n    super(registry, decodeMetadata(registry, value));\n  }\n\n}\n\nexports.default = Metadata;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/metadata/Metadata/Metadata.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_util","_MetadataVersioned","VERSION_IDX","EMPTY_METADATA","u8aConcat","Uint8Array","EMPTY_U8A","sanitizeInput","_value","isString","u8aToU8a","length","decodeMetadata","registry","version","error","Metadata","constructor"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGN,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIO,kBAAkB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA/C,C,CAEA;AACA;AACA;;;AACA,MAAMQ,WAAW,GAAG,CAApB,C,CAAuB;;AAEvB,MAAMC,cAAc,GAAG,CAAC,GAAGH,KAAK,CAACI,SAAV,EAAqB,IAAIC,UAAJ,CAAe,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,CAAzB,CAAf,CAArB,CAAvB;AACA,MAAMC,SAAS,GAAG,IAAID,UAAJ,EAAlB;;AAEA,SAASE,aAAT,CAAuBC,MAAM,GAAGF,SAAhC,EAA2C;AACzC,MAAI,CAAC,GAAGN,KAAK,CAACS,QAAV,EAAoBD,MAApB,CAAJ,EAAiC;AAC/B,WAAOD,aAAa,CAAC,CAAC,GAAGP,KAAK,CAACU,QAAV,EAAoBF,MAApB,CAAD,CAApB;AACD;;AAED,SAAOA,MAAM,CAACG,MAAP,KAAkB,CAAlB,GAAsBR,cAAtB,GAAuCK,MAA9C;AACD;;AAED,SAASI,cAAT,CAAwBC,QAAxB,EAAkCL,MAAlC,EAA0C;AACxC,QAAMV,KAAK,GAAGS,aAAa,CAACC,MAAD,CAA3B;AACA,QAAMM,OAAO,GAAGhB,KAAK,CAACI,WAAD,CAArB;;AAEA,MAAI;AACF,WAAO,IAAID,kBAAkB,CAACF,OAAvB,CAA+Bc,QAA/B,EAAyCf,KAAzC,CAAP;AACD,GAFD,CAEE,OAAOiB,KAAP,EAAc;AACd;AACA;AACA;AACA,QAAID,OAAO,KAAK,CAAhB,EAAmB;AACjBhB,MAAAA,KAAK,CAACI,WAAD,CAAL,GAAqB,EAArB;AACA,aAAOU,cAAc,CAACC,QAAD,EAAWf,KAAX,CAArB;AACD;;AAED,UAAMiB,KAAN;AACD;AACF;AACD;AACA;AACA;AACA;AACA;;;AAGA,MAAMC,QAAN,SAAuBf,kBAAkB,CAACF,OAA1C,CAAkD;AAChDkB,EAAAA,WAAW,CAACJ,QAAD,EAAWf,KAAX,EAAkB;AAC3B,UAAMe,QAAN,EAAgBD,cAAc,CAACC,QAAD,EAAWf,KAAX,CAA9B;AACD;;AAH+C;;AAOlDD,OAAO,CAACE,OAAR,GAAkBiB,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _MetadataVersioned = _interopRequireDefault(require(\"./MetadataVersioned\"));\n\n// Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// magic u32 preceding the version id\nconst VERSION_IDX = 4; // magic + lowest supported version\n\nconst EMPTY_METADATA = (0, _util.u8aConcat)(new Uint8Array([0x6d, 0x65, 0x74, 0x61, 9]));\nconst EMPTY_U8A = new Uint8Array();\n\nfunction sanitizeInput(_value = EMPTY_U8A) {\n  if ((0, _util.isString)(_value)) {\n    return sanitizeInput((0, _util.u8aToU8a)(_value));\n  }\n\n  return _value.length === 0 ? EMPTY_METADATA : _value;\n}\n\nfunction decodeMetadata(registry, _value) {\n  const value = sanitizeInput(_value);\n  const version = value[VERSION_IDX];\n\n  try {\n    return new _MetadataVersioned.default(registry, value);\n  } catch (error) {\n    // This is an f-ing hack as a follow-up to another ugly hack\n    // https://github.com/polkadot-js/api/commit/a9211690be6b68ad6c6dad7852f1665cadcfa5b2\n    // when we fail on V9, try to re-parse it as v10... yes... HACK\n    if (version === 9) {\n      value[VERSION_IDX] = 10;\n      return decodeMetadata(registry, value);\n    }\n\n    throw error;\n  }\n}\n/**\n * @name Metadata\n * @description\n * The versioned runtime metadata as a decoded structure\n */\n\n\nclass Metadata extends _MetadataVersioned.default {\n  constructor(registry, value) {\n    super(registry, decodeMetadata(registry, value));\n  }\n\n}\n\nexports.default = Metadata;"]},"metadata":{},"sourceType":"script"}