{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = numberToHex;\n\nvar _fixLength = _interopRequireDefault(require(\"../hex/fixLength\"));\n\nvar _null = _interopRequireDefault(require(\"../is/null\"));\n\nvar _undefined = _interopRequireDefault(require(\"../is/undefined\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\n\n\nfunction numberToHex(value, bitLength = -1) {\n  if ((0, _undefined.default)(value) || (0, _null.default)(value) || isNaN(value)) {\n    return '0x';\n  }\n\n  return (0, _fixLength.default)(value.toString(16), bitLength, true);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/number/toHex.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","numberToHex","_fixLength","_null","_undefined","bitLength","isNaN","toString"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,UAAU,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAvC;;AAEA,IAAIQ,KAAK,GAAGT,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAlC;;AAEA,IAAIS,UAAU,GAAGV,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAvC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,WAAT,CAAqBF,KAArB,EAA4BM,SAAS,GAAG,CAAC,CAAzC,EAA4C;AAC1C,MAAI,CAAC,GAAGD,UAAU,CAACJ,OAAf,EAAwBD,KAAxB,KAAkC,CAAC,GAAGI,KAAK,CAACH,OAAV,EAAmBD,KAAnB,CAAlC,IAA+DO,KAAK,CAACP,KAAD,CAAxE,EAAiF;AAC/E,WAAO,IAAP;AACD;;AAED,SAAO,CAAC,GAAGG,UAAU,CAACF,OAAf,EAAwBD,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAxB,EAA4CF,SAA5C,EAAuD,IAAvD,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = numberToHex;\n\nvar _fixLength = _interopRequireDefault(require(\"../hex/fixLength\"));\n\nvar _null = _interopRequireDefault(require(\"../is/null\"));\n\nvar _undefined = _interopRequireDefault(require(\"../is/undefined\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name numberToHex\n * @summary Creates a hex value from a number.\n * @description\n * `null`/`undefined`/`NaN` inputs returns an empty `0x` result. `number` input values return the actual bytes value converted to a `hex`. With `bitLength` set, it converts the number to the equivalent size.\n * @example\n * <BR>\n *\n * ```javascript\n * import { numberToHex } from '@polkadot/util';\n *\n * numberToHex(0x1234); // => '0x1234'\n * numberToHex(0x1234, 32); // => 0x00001234\n * ```\n */\nfunction numberToHex(value, bitLength = -1) {\n  if ((0, _undefined.default)(value) || (0, _null.default)(value) || isNaN(value)) {\n    return '0x';\n  }\n\n  return (0, _fixLength.default)(value.toString(16), bitLength, true);\n}"]},"metadata":{},"sourceType":"script"}