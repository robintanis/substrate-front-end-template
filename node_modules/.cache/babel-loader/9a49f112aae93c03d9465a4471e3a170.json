{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\"); // Copyright 2017-2020 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nvar _map = (0, _classPrivateFieldLooseKey2.default)(\"map\");\n\nclass Pairs {\n  constructor() {\n    Object.defineProperty(this, _map, {\n      writable: true,\n      value: {}\n    });\n  }\n\n  add(pair) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values((0, _classPrivateFieldLooseBase2.default)(this, _map)[_map]);\n  }\n\n  get(address) {\n    const pair = (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n\n    (0, _util.assert)(pair, () => {\n      const formatted = (0, _util.isU8a)(address) || (0, _util.isHex)(address) ? (0, _util.u8aToHex)((0, _util.u8aToU8a)(address)) : address;\n      return `Unable to retrieve keypair '${formatted}'`;\n    });\n    return pair;\n  }\n\n  remove(address) {\n    delete (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n  }\n\n}\n\nexports.default = Pairs;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/keyring/pairs.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","_utilCrypto","_map","Pairs","constructor","writable","add","pair","decodeAddress","address","toString","all","values","get","assert","formatted","isU8a","isHex","u8aToHex","u8aToU8a","remove"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,4BAA4B,GAAGP,sBAAsB,CAACC,OAAO,CAAC,mDAAD,CAAR,CAAzD;;AAEA,IAAIO,2BAA2B,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kDAAD,CAAR,CAAxD;;AAEA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIS,WAAW,GAAGT,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;AACA;;;AACA,IAAIU,IAAI,GAAG,CAAC,GAAGH,2BAA2B,CAACF,OAAhC,EAAyC,KAAzC,CAAX;;AAEA,MAAMM,KAAN,CAAY;AACVC,EAAAA,WAAW,GAAG;AACZX,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BQ,IAA5B,EAAkC;AAChCG,MAAAA,QAAQ,EAAE,IADsB;AAEhCT,MAAAA,KAAK,EAAE;AAFyB,KAAlC;AAID;;AAEDU,EAAAA,GAAG,CAACC,IAAD,EAAO;AACR,KAAC,GAAGT,4BAA4B,CAACD,OAAjC,EAA0C,IAA1C,EAAgDK,IAAhD,EAAsDA,IAAtD,EAA4D,CAAC,GAAGD,WAAW,CAACO,aAAhB,EAA+BD,IAAI,CAACE,OAApC,EAA6CC,QAA7C,EAA5D,IAAuHH,IAAvH;AACA,WAAOA,IAAP;AACD;;AAEDI,EAAAA,GAAG,GAAG;AACJ,WAAOlB,MAAM,CAACmB,MAAP,CAAc,CAAC,GAAGd,4BAA4B,CAACD,OAAjC,EAA0C,IAA1C,EAAgDK,IAAhD,EAAsDA,IAAtD,CAAd,CAAP;AACD;;AAEDW,EAAAA,GAAG,CAACJ,OAAD,EAAU;AACX,UAAMF,IAAI,GAAG,CAAC,GAAGT,4BAA4B,CAACD,OAAjC,EAA0C,IAA1C,EAAgDK,IAAhD,EAAsDA,IAAtD,EAA4D,CAAC,GAAGD,WAAW,CAACO,aAAhB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAA5D,CAAb;;AAEA,KAAC,GAAGV,KAAK,CAACc,MAAV,EAAkBP,IAAlB,EAAwB,MAAM;AAC5B,YAAMQ,SAAS,GAAG,CAAC,GAAGf,KAAK,CAACgB,KAAV,EAAiBP,OAAjB,KAA6B,CAAC,GAAGT,KAAK,CAACiB,KAAV,EAAiBR,OAAjB,CAA7B,GAAyD,CAAC,GAAGT,KAAK,CAACkB,QAAV,EAAoB,CAAC,GAAGlB,KAAK,CAACmB,QAAV,EAAoBV,OAApB,CAApB,CAAzD,GAA6GA,OAA/H;AACA,aAAQ,+BAA8BM,SAAU,GAAhD;AACD,KAHD;AAIA,WAAOR,IAAP;AACD;;AAEDa,EAAAA,MAAM,CAACX,OAAD,EAAU;AACd,WAAO,CAAC,GAAGX,4BAA4B,CAACD,OAAjC,EAA0C,IAA1C,EAAgDK,IAAhD,EAAsDA,IAAtD,EAA4D,CAAC,GAAGD,WAAW,CAACO,aAAhB,EAA+BC,OAA/B,EAAwCC,QAAxC,EAA5D,CAAP;AACD;;AA7BS;;AAiCZf,OAAO,CAACE,OAAR,GAAkBM,KAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _utilCrypto = require(\"@polkadot/util-crypto\");\n\n// Copyright 2017-2020 @polkadot/keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nvar _map = (0, _classPrivateFieldLooseKey2.default)(\"map\");\n\nclass Pairs {\n  constructor() {\n    Object.defineProperty(this, _map, {\n      writable: true,\n      value: {}\n    });\n  }\n\n  add(pair) {\n    (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(pair.address).toString()] = pair;\n    return pair;\n  }\n\n  all() {\n    return Object.values((0, _classPrivateFieldLooseBase2.default)(this, _map)[_map]);\n  }\n\n  get(address) {\n    const pair = (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n\n    (0, _util.assert)(pair, () => {\n      const formatted = (0, _util.isU8a)(address) || (0, _util.isHex)(address) ? (0, _util.u8aToHex)((0, _util.u8aToU8a)(address)) : address;\n      return `Unable to retrieve keypair '${formatted}'`;\n    });\n    return pair;\n  }\n\n  remove(address) {\n    delete (0, _classPrivateFieldLooseBase2.default)(this, _map)[_map][(0, _utilCrypto.decodeAddress)(address).toString()];\n  }\n\n}\n\nexports.default = Pairs;"]},"metadata":{},"sourceType":"script"}