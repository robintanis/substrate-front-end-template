{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyHdkdEd25519;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _deriveHard = _interopRequireDefault(require(\"../nacl/deriveHard\"));\n\nvar _fromSeed = _interopRequireDefault(require(\"../nacl/keypair/fromSeed\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction keyHdkdEd25519(keypair, {\n  chainCode,\n  isHard\n}) {\n  (0, _util.assert)(isHard, 'A soft key was found in the path (and is unsupported)');\n  return (0, _fromSeed.default)((0, _deriveHard.default)(keypair.secretKey.subarray(0, 32), chainCode));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/key/hdkdEd25519.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","keyHdkdEd25519","_util","_deriveHard","_fromSeed","keypair","chainCode","isHard","assert","secretKey","subarray"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,WAAW,GAAGT,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAAxC;;AAEA,IAAIS,SAAS,GAAGV,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAtC,C,CAEA;AACA;;;AACA,SAASM,cAAT,CAAwBI,OAAxB,EAAiC;AAC/BC,EAAAA,SAD+B;AAE/BC,EAAAA;AAF+B,CAAjC,EAGG;AACD,GAAC,GAAGL,KAAK,CAACM,MAAV,EAAkBD,MAAlB,EAA0B,uDAA1B;AACA,SAAO,CAAC,GAAGH,SAAS,CAACJ,OAAd,EAAuB,CAAC,GAAGG,WAAW,CAACH,OAAhB,EAAyBK,OAAO,CAACI,SAAR,CAAkBC,QAAlB,CAA2B,CAA3B,EAA8B,EAA9B,CAAzB,EAA4DJ,SAA5D,CAAvB,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyHdkdEd25519;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _deriveHard = _interopRequireDefault(require(\"../nacl/deriveHard\"));\n\nvar _fromSeed = _interopRequireDefault(require(\"../nacl/keypair/fromSeed\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction keyHdkdEd25519(keypair, {\n  chainCode,\n  isHard\n}) {\n  (0, _util.assert)(isHard, 'A soft key was found in the path (and is unsupported)');\n  return (0, _fromSeed.default)((0, _deriveHard.default)(keypair.secretKey.subarray(0, 32), chainCode));\n}"]},"metadata":{},"sourceType":"script"}