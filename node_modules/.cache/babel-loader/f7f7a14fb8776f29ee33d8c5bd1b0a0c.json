{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cryptoIsReady = cryptoIsReady;\nexports.cryptoWaitReady = cryptoWaitReady;\n\nvar _wasmCrypto = _interopRequireDefault(require(\"@polkadot/wasm-crypto\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction cryptoIsReady() {\n  return _wasmCrypto.default.isReady();\n}\n\nfunction cryptoWaitReady() {\n  return _wasmCrypto.default.waitReady().then(() => true).catch(error => {\n    console.error('Unable to initialize @polkadot/util-crypto', error);\n    return false;\n  });\n} // start init process immediately\n\n\ncryptoWaitReady().catch(() => {// shouldn't happen, logged above\n});","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/init.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","cryptoIsReady","cryptoWaitReady","_wasmCrypto","default","isReady","waitReady","then","catch","error","console"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACG,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,WAAW,GAAGR,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAAxC,C,CAEA;AACA;;;AACA,SAASK,aAAT,GAAyB;AACvB,SAAOE,WAAW,CAACC,OAAZ,CAAoBC,OAApB,EAAP;AACD;;AAED,SAASH,eAAT,GAA2B;AACzB,SAAOC,WAAW,CAACC,OAAZ,CAAoBE,SAApB,GAAgCC,IAAhC,CAAqC,MAAM,IAA3C,EAAiDC,KAAjD,CAAuDC,KAAK,IAAI;AACrEC,IAAAA,OAAO,CAACD,KAAR,CAAc,4CAAd,EAA4DA,KAA5D;AACA,WAAO,KAAP;AACD,GAHM,CAAP;AAID,C,CAAC;;;AAGFP,eAAe,GAAGM,KAAlB,CAAwB,MAAM,CAAC;AAC9B,CADD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cryptoIsReady = cryptoIsReady;\nexports.cryptoWaitReady = cryptoWaitReady;\n\nvar _wasmCrypto = _interopRequireDefault(require(\"@polkadot/wasm-crypto\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction cryptoIsReady() {\n  return _wasmCrypto.default.isReady();\n}\n\nfunction cryptoWaitReady() {\n  return _wasmCrypto.default.waitReady().then(() => true).catch(error => {\n    console.error('Unable to initialize @polkadot/util-crypto', error);\n    return false;\n  });\n} // start init process immediately\n\n\ncryptoWaitReady().catch(() => {// shouldn't happen, logged above\n});"]},"metadata":{},"sourceType":"script"}