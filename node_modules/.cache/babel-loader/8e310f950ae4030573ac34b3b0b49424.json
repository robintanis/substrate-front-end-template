{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyExtractPath;\n\nvar _DeriveJunction = _interopRequireDefault(require(\"./DeriveJunction\"));\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n/**\n * @description Extract derivation junctions from the supplied path\n */\n\nfunction keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n    parts.forEach(value => {\n      path.push(_DeriveJunction.default.from(value.substr(1)));\n    });\n  }\n\n  (0, _util.assert)(constructed === derivePath, `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/key/extractPath.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","keyExtractPath","_DeriveJunction","_util","RE_JUNCTION","derivePath","parts","match","path","constructed","join","forEach","push","from","substr","assert"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,eAAe,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAA5C;;AAEA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,gBAAD,CAAnB,C,CAEA;AACA;;;AACA,MAAMS,WAAW,GAAG,iBAApB;AAEA;AACA;AACA;;AACA,SAASH,cAAT,CAAwBI,UAAxB,EAAoC;AAClC,QAAMC,KAAK,GAAGD,UAAU,CAACE,KAAX,CAAiBH,WAAjB,CAAd;AACA,QAAMI,IAAI,GAAG,EAAb;AACA,MAAIC,WAAW,GAAG,EAAlB;;AAEA,MAAIH,KAAJ,EAAW;AACTG,IAAAA,WAAW,GAAGH,KAAK,CAACI,IAAN,CAAW,EAAX,CAAd;AACAJ,IAAAA,KAAK,CAACK,OAAN,CAAcZ,KAAK,IAAI;AACrBS,MAAAA,IAAI,CAACI,IAAL,CAAUV,eAAe,CAACF,OAAhB,CAAwBa,IAAxB,CAA6Bd,KAAK,CAACe,MAAN,CAAa,CAAb,CAA7B,CAAV;AACD,KAFD;AAGD;;AAED,GAAC,GAAGX,KAAK,CAACY,MAAV,EAAkBN,WAAW,KAAKJ,UAAlC,EAA+C,wBAAuBI,WAAY,wBAAlF;AACA,SAAO;AACLH,IAAAA,KADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = keyExtractPath;\n\nvar _DeriveJunction = _interopRequireDefault(require(\"./DeriveJunction\"));\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst RE_JUNCTION = /\\/(\\/?)([^/]+)/g;\n\n/**\n * @description Extract derivation junctions from the supplied path\n */\nfunction keyExtractPath(derivePath) {\n  const parts = derivePath.match(RE_JUNCTION);\n  const path = [];\n  let constructed = '';\n\n  if (parts) {\n    constructed = parts.join('');\n    parts.forEach(value => {\n      path.push(_DeriveJunction.default.from(value.substr(1)));\n    });\n  }\n\n  (0, _util.assert)(constructed === derivePath, `Re-constructed path \"${constructed}\" does not match input`);\n  return {\n    parts,\n    path\n  };\n}"]},"metadata":{},"sourceType":"script"}