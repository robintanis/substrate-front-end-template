{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = base64Validate;\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates the the supplied value is valid base64\n */\n\n\nfunction base64Validate(value) {\n  (0, _util.assert)(value, 'Expected non-null, non-empty base64 input');\n  (0, _util.assert)(/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(value), 'Invalid base64 encoding');\n  return true;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/base64/validate.js"],"names":["Object","defineProperty","exports","value","default","base64Validate","_util","require","assert","test"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,cAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,cAAT,CAAwBF,KAAxB,EAA+B;AAC7B,GAAC,GAAGG,KAAK,CAACE,MAAV,EAAkBL,KAAlB,EAAyB,2CAAzB;AACA,GAAC,GAAGG,KAAK,CAACE,MAAV,EAAkB,mFAAmFC,IAAnF,CAAwFN,KAAxF,CAAlB,EAAkH,yBAAlH;AACA,SAAO,IAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = base64Validate;\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name base64Validate\n * @summary Validates a base64 value.\n * @description\n * Validates the the supplied value is valid base64\n */\nfunction base64Validate(value) {\n  (0, _util.assert)(value, 'Expected non-null, non-empty base64 input');\n  (0, _util.assert)(/^(?:[A-Za-z0-9+/]{2}[A-Za-z0-9+/]{2})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(value), 'Invalid base64 encoding');\n  return true;\n}"]},"metadata":{},"sourceType":"script"}