{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Copyright 2020 @polkadot/x-textencoder authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\n\nvar _default = typeof TextDecoder === 'undefined' ? class {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    return value.reduce((str, code) => {\n      return str + String.fromCharCode(code);\n    }, '');\n  }\n\n} : TextDecoder;\n\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/x-textdecoder/browser.js"],"names":["Object","defineProperty","exports","value","default","_default","TextDecoder","constructor","_","decode","reduce","str","code","String","fromCharCode"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB,C,CAEA;AACA;AACA;;AACA,IAAIC,QAAQ,GAAG,OAAOC,WAAP,KAAuB,WAAvB,GAAqC,MAAM;AACxD;AACAC,EAAAA,WAAW,CAACC,CAAD,EAAI,CAAC;AACf;;AAEDC,EAAAA,MAAM,CAACN,KAAD,EAAQ;AACZ,WAAOA,KAAK,CAACO,MAAN,CAAa,CAACC,GAAD,EAAMC,IAAN,KAAe;AACjC,aAAOD,GAAG,GAAGE,MAAM,CAACC,YAAP,CAAoBF,IAApB,CAAb;AACD,KAFM,EAEJ,EAFI,CAAP;AAGD;;AATuD,CAA3C,GAWXN,WAXJ;;AAaAJ,OAAO,CAACE,OAAR,GAAkBC,QAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n// Copyright 2020 @polkadot/x-textencoder authors & contributors\n// This software may be modified and distributed under the terms\n// of the Apache-2.0 license. See the LICENSE file for details.\nvar _default = typeof TextDecoder === 'undefined' ? class {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars,no-useless-constructor\n  constructor(_) {// nothing\n  }\n\n  decode(value) {\n    return value.reduce((str, code) => {\n      return str + String.fromCharCode(code);\n    }, '');\n  }\n\n} : TextDecoder;\n\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}