{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSubmittable;\n\nvar _createClass = _interopRequireDefault(require(\"./createClass\")); // Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction createSubmittable(apiType, api, decorateMethod) {\n  const Submittable = (0, _createClass.default)({\n    api,\n    apiType,\n    decorateMethod\n  });\n  return extrinsic => new Submittable(api.registry, extrinsic);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api/submittable/createSubmittable.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","createSubmittable","_createClass","apiType","api","decorateMethod","Submittable","extrinsic","registry"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,iBAAlB;;AAEA,IAAIC,YAAY,GAAGR,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAzC,C,CAEA;AACA;;;AACA,SAASM,iBAAT,CAA2BE,OAA3B,EAAoCC,GAApC,EAAyCC,cAAzC,EAAyD;AACvD,QAAMC,WAAW,GAAG,CAAC,GAAGJ,YAAY,CAACF,OAAjB,EAA0B;AAC5CI,IAAAA,GAD4C;AAE5CD,IAAAA,OAF4C;AAG5CE,IAAAA;AAH4C,GAA1B,CAApB;AAKA,SAAOE,SAAS,IAAI,IAAID,WAAJ,CAAgBF,GAAG,CAACI,QAApB,EAA8BD,SAA9B,CAApB;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createSubmittable;\n\nvar _createClass = _interopRequireDefault(require(\"./createClass\"));\n\n// Copyright 2017-2020 @polkadot/api authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction createSubmittable(apiType, api, decorateMethod) {\n  const Submittable = (0, _createClass.default)({\n    api,\n    apiType,\n    decorateMethod\n  });\n  return extrinsic => new Submittable(api.registry, extrinsic);\n}"]},"metadata":{},"sourceType":"script"}