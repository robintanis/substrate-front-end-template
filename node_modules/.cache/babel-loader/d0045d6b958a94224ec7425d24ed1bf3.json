{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._eraPrefs = _eraPrefs;\nexports.eraPrefs = eraPrefs;\nexports._erasPrefs = _erasPrefs;\nexports.erasPrefs = erasPrefs;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst CACHE_KEY = 'eraPrefs';\n\nfunction mapPrefs(era, all) {\n  const validators = {};\n  all.forEach(([key, prefs]) => {\n    validators[key.args[1].toString()] = prefs;\n  });\n  return {\n    era,\n    validators\n  };\n}\n\nfunction _eraPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : _util.deriveCache.get(cacheKey);\n    return cached ? (0, _rxjs.of)(cached) : api.query.staking.erasValidatorPrefs.entries(era).pipe((0, _operators.map)(prefs => {\n      const value = mapPrefs(era, prefs);\n      !withActive && _util.deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\n\nfunction eraPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, era => api.derive.staking._eraPrefs(era, true));\n}\n\nfunction _erasPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (eras, withActive) => eras.length ? (0, _rxjs.combineLatest)(eras.map(era => api.derive.staking._eraPrefs(era, withActive))) : (0, _rxjs.of)([]));\n}\n\nfunction erasPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._erasPrefs(eras, withActive))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/erasPrefs.js"],"names":["Object","defineProperty","exports","value","_eraPrefs","eraPrefs","_erasPrefs","erasPrefs","_rxjs","require","_operators","_util","CACHE_KEY","mapPrefs","era","all","validators","forEach","key","prefs","args","toString","instanceId","api","memo","withActive","cacheKey","cached","undefined","deriveCache","get","of","query","staking","erasValidatorPrefs","entries","pipe","map","set","derive","eras","length","combineLatest","erasHistoric","switchMap"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports._eraPrefs = _eraPrefs;\nexports.eraPrefs = eraPrefs;\nexports._erasPrefs = _erasPrefs;\nexports.erasPrefs = erasPrefs;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst CACHE_KEY = 'eraPrefs';\n\nfunction mapPrefs(era, all) {\n  const validators = {};\n  all.forEach(([key, prefs]) => {\n    validators[key.args[1].toString()] = prefs;\n  });\n  return {\n    era,\n    validators\n  };\n}\n\nfunction _eraPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (era, withActive) => {\n    const cacheKey = `${CACHE_KEY}-${era.toString()}`;\n    const cached = withActive ? undefined : _util.deriveCache.get(cacheKey);\n    return cached ? (0, _rxjs.of)(cached) : api.query.staking.erasValidatorPrefs.entries(era).pipe((0, _operators.map)(prefs => {\n      const value = mapPrefs(era, prefs);\n      !withActive && _util.deriveCache.set(cacheKey, value);\n      return value;\n    }));\n  });\n}\n\nfunction eraPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, era => api.derive.staking._eraPrefs(era, true));\n}\n\nfunction _erasPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (eras, withActive) => eras.length ? (0, _rxjs.combineLatest)(eras.map(era => api.derive.staking._eraPrefs(era, withActive))) : (0, _rxjs.of)([]));\n}\n\nfunction erasPrefs(instanceId, api) {\n  return (0, _util.memo)(instanceId, (withActive = false) => api.derive.staking.erasHistoric(withActive).pipe((0, _operators.switchMap)(eras => api.derive.staking._erasPrefs(eras, withActive))));\n}"]},"metadata":{},"sourceType":"script"}