{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Metadata = _interopRequireDefault(require(\"../Metadata\"));\n\nvar _fromMetadata = _interopRequireDefault(require(\"./consts/fromMetadata\"));\n\nvar _fromMetadata2 = _interopRequireDefault(require(\"./extrinsics/fromMetadata\"));\n\nvar _fromMetadata3 = _interopRequireDefault(require(\"./storage/fromMetadata\")); // Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * This class represents a decorated wrapper over the [[Metadata]]. The\n * [[Metadata]] type is a Codec type returned by the node, and `Decorated`\n * composes it and populates the `.query`, `.tx` and `.consts` sections.\n */\n\n\nclass Decorated {\n  constructor(registry, value) {\n    this.consts = void 0;\n    this.metadata = void 0;\n    this.registry = void 0;\n    this.query = void 0;\n    this.tx = void 0;\n    (0, _util.assert)(value instanceof _Metadata.default, 'You need to pass a valid Metadata instance to Decorated');\n    this.registry = registry;\n    this.metadata = value; // decoration\n\n    this.tx = (0, _fromMetadata2.default)(registry, this.metadata);\n    this.query = (0, _fromMetadata3.default)(registry, this.metadata);\n    this.consts = (0, _fromMetadata.default)(registry, this.metadata);\n  }\n\n}\n\nexports.default = Decorated;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/metadata/Decorated/Decorated.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_util","_Metadata","_fromMetadata","_fromMetadata2","_fromMetadata3","Decorated","constructor","registry","consts","metadata","query","tx","assert"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGN,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIO,SAAS,GAAGR,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAtC;;AAEA,IAAIQ,aAAa,GAAGT,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA1C;;AAEA,IAAIS,cAAc,GAAGV,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAA3C;;AAEA,IAAIU,cAAc,GAAGX,sBAAsB,CAACC,OAAO,CAAC,wBAAD,CAAR,CAA3C,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMW,SAAN,CAAgB;AACdC,EAAAA,WAAW,CAACC,QAAD,EAAWT,KAAX,EAAkB;AAC3B,SAAKU,MAAL,GAAc,KAAK,CAAnB;AACA,SAAKC,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKF,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKG,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKC,EAAL,GAAU,KAAK,CAAf;AACA,KAAC,GAAGX,KAAK,CAACY,MAAV,EAAkBd,KAAK,YAAYG,SAAS,CAACF,OAA7C,EAAsD,yDAAtD;AACA,SAAKQ,QAAL,GAAgBA,QAAhB;AACA,SAAKE,QAAL,GAAgBX,KAAhB,CAR2B,CAQJ;;AAEvB,SAAKa,EAAL,GAAU,CAAC,GAAGR,cAAc,CAACJ,OAAnB,EAA4BQ,QAA5B,EAAsC,KAAKE,QAA3C,CAAV;AACA,SAAKC,KAAL,GAAa,CAAC,GAAGN,cAAc,CAACL,OAAnB,EAA4BQ,QAA5B,EAAsC,KAAKE,QAA3C,CAAb;AACA,SAAKD,MAAL,GAAc,CAAC,GAAGN,aAAa,CAACH,OAAlB,EAA2BQ,QAA3B,EAAqC,KAAKE,QAA1C,CAAd;AACD;;AAda;;AAkBhBZ,OAAO,CAACE,OAAR,GAAkBM,SAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Metadata = _interopRequireDefault(require(\"../Metadata\"));\n\nvar _fromMetadata = _interopRequireDefault(require(\"./consts/fromMetadata\"));\n\nvar _fromMetadata2 = _interopRequireDefault(require(\"./extrinsics/fromMetadata\"));\n\nvar _fromMetadata3 = _interopRequireDefault(require(\"./storage/fromMetadata\"));\n\n// Copyright 2017-2020 @polkadot/metadata authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * This class represents a decorated wrapper over the [[Metadata]]. The\n * [[Metadata]] type is a Codec type returned by the node, and `Decorated`\n * composes it and populates the `.query`, `.tx` and `.consts` sections.\n */\nclass Decorated {\n  constructor(registry, value) {\n    this.consts = void 0;\n    this.metadata = void 0;\n    this.registry = void 0;\n    this.query = void 0;\n    this.tx = void 0;\n    (0, _util.assert)(value instanceof _Metadata.default, 'You need to pass a valid Metadata instance to Decorated');\n    this.registry = registry;\n    this.metadata = value; // decoration\n\n    this.tx = (0, _fromMetadata2.default)(registry, this.metadata);\n    this.query = (0, _fromMetadata3.default)(registry, this.metadata);\n    this.consts = (0, _fromMetadata.default)(registry, this.metadata);\n  }\n\n}\n\nexports.default = Decorated;"]},"metadata":{},"sourceType":"script"}