{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\n\n\nclass Null {\n  constructor(registry) {\n    this.registry = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    return true;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || (0, _util.isNull)(other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}\n\nexports.default = Null;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/primitive/Null.js"],"names":["Object","defineProperty","exports","value","default","_util","require","Null","constructor","registry","encodedLength","hash","Error","isEmpty","eq","other","isNull","toHex","toHuman","toJSON","toRawType","toString","toU8a","isBare","Uint8Array"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,IAAN,CAAW;AACTC,EAAAA,WAAW,CAACC,QAAD,EAAW;AACpB,SAAKA,QAAL,GAAgB,KAAK,CAArB;AACA,SAAKA,QAAL,GAAgBA,QAAhB;AACD;AACD;AACF;AACA;;;AAGE,MAAIC,aAAJ,GAAoB;AAClB,WAAO,CAAP;AACD;AACD;AACF;AACA;;;AAGE,MAAIC,IAAJ,GAAW;AACT,UAAM,IAAIC,KAAJ,CAAU,kCAAV,CAAN;AACD;AACD;AACF;AACA;;;AAGE,MAAIC,OAAJ,GAAc;AACZ,WAAO,IAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,EAAE,CAACC,KAAD,EAAQ;AACR,WAAOA,KAAK,YAAYR,IAAjB,IAAyB,CAAC,GAAGF,KAAK,CAACW,MAAV,EAAkBD,KAAlB,CAAhC;AACD;AACD;AACF;AACA;;;AAGEE,EAAAA,KAAK,GAAG;AACN,WAAO,IAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,OAAO,GAAG;AACR,WAAO,KAAKC,MAAL,EAAP;AACD;AACD;AACF;AACA;;;AAGEA,EAAAA,MAAM,GAAG;AACP,WAAO,IAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,SAAS,GAAG;AACV,WAAO,MAAP;AACD;AACD;AACF;AACA;;;AAGEC,EAAAA,QAAQ,GAAG;AACT,WAAO,EAAP;AACD;AACD;AACF;AACA;AACA;AACE;;;AAGAC,EAAAA,KAAK,CAACC,MAAD,EAAS;AACZ,WAAO,IAAIC,UAAJ,EAAP;AACD;;AAtFQ;;AA0FXtB,OAAO,CAACE,OAAR,GAAkBG,IAAlB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name Null\n * @description\n * Implements a type that does not contain anything (apart from `null`)\n */\nclass Null {\n  constructor(registry) {\n    this.registry = void 0;\n    this.registry = registry;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return 0;\n  }\n  /**\n   * @description returns a hash of the contents\n   */\n\n\n  get hash() {\n    throw new Error('.hash is not implemented on Null');\n  }\n  /**\n   * @description Checks if the value is an empty value (always true)\n   */\n\n\n  get isEmpty() {\n    return true;\n  }\n  /**\n   * @description Compares the value of the input to see if there is a match\n   */\n\n\n  eq(other) {\n    return other instanceof Null || (0, _util.isNull)(other);\n  }\n  /**\n   * @description Returns a hex string representation of the value\n   */\n\n\n  toHex() {\n    return '0x';\n  }\n  /**\n   * @description Converts the Object to to a human-friendly JSON, with additional fields, expansion and formatting of information\n   */\n\n\n  toHuman() {\n    return this.toJSON();\n  }\n  /**\n   * @description Converts the Object to JSON, typically used for RPC transfers\n   */\n\n\n  toJSON() {\n    return null;\n  }\n  /**\n   * @description Returns the base runtime type name for this instance\n   */\n\n\n  toRawType() {\n    return 'Null';\n  }\n  /**\n   * @description Returns the string representation of the value\n   */\n\n\n  toString() {\n    return '';\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  toU8a(isBare) {\n    return new Uint8Array();\n  }\n\n}\n\nexports.default = Null;"]},"metadata":{},"sourceType":"script"}