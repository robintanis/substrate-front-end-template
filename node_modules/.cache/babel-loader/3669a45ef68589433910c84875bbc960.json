{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\"); // Copyright 2017-2020 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction formatErrorData(data) {\n  if ((0, _util.isUndefined)(data)) {\n    return '';\n  }\n\n  const formatted = `: ${(0, _util.isString)(data) ? data.replace(/Error\\(\"/g, '').replace(/\\(\"/g, '(').replace(/\"\\)/g, ')').replace(/\\(/g, ', ').replace(/\\)/g, '') : JSON.stringify(data)}`; // We need some sort of cut-off here since these can be very large and\n  // very nested, pick a number and trim the result display to it\n\n  return formatted.length <= 256 ? formatted : `${formatted.substr(0, 255)}…`;\n}\n/** @internal */\n\n\nvar _id = (0, _classPrivateFieldLooseKey2.default)(\"id\");\n\nclass RpcCoder {\n  constructor() {\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: 0\n    });\n  }\n\n  decodeResponse(response) {\n    (0, _util.assert)(response, 'Empty response object received');\n    (0, _util.assert)(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');\n    const isSubscription = !(0, _util.isUndefined)(response.params) && !(0, _util.isUndefined)(response.method);\n    (0, _util.assert)((0, _util.isNumber)(response.id) || isSubscription && ((0, _util.isNumber)(response.params.subscription) || (0, _util.isString)(response.params.subscription)), 'Invalid id field in decoded object');\n\n    this._checkError(response.error);\n\n    (0, _util.assert)(!(0, _util.isUndefined)(response.result) || isSubscription, 'No result found in JsonRpc response');\n\n    if (isSubscription) {\n      this._checkError(response.params.error);\n\n      return response.params.result;\n    }\n\n    return response.result;\n  }\n\n  encodeJson(method, params) {\n    return JSON.stringify(this.encodeObject(method, params));\n  }\n\n  encodeObject(method, params) {\n    return {\n      id: ++(0, _classPrivateFieldLooseBase2.default)(this, _id)[_id],\n      jsonrpc: '2.0',\n      method,\n      params\n    };\n  }\n\n  getId() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _id)[_id];\n  }\n\n  _checkError(error) {\n    if (error) {\n      const {\n        code,\n        data,\n        message\n      } = error;\n      throw new Error(`${code}: ${message}${formatErrorData(data)}`);\n    }\n  }\n\n}\n\nexports.default = RpcCoder;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/rpc-provider/coder/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_classPrivateFieldLooseBase2","_classPrivateFieldLooseKey2","_util","formatErrorData","data","isUndefined","formatted","isString","replace","JSON","stringify","length","substr","_id","RpcCoder","constructor","writable","decodeResponse","response","assert","jsonrpc","isSubscription","params","method","isNumber","id","subscription","_checkError","error","result","encodeJson","encodeObject","getId","code","message","Error"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classPrivateFieldLooseBase2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseBase\"));\n\nvar _classPrivateFieldLooseKey2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classPrivateFieldLooseKey\"));\n\nvar _util = require(\"@polkadot/util\");\n\n// Copyright 2017-2020 @polkadot/rpc-provider authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction formatErrorData(data) {\n  if ((0, _util.isUndefined)(data)) {\n    return '';\n  }\n\n  const formatted = `: ${(0, _util.isString)(data) ? data.replace(/Error\\(\"/g, '').replace(/\\(\"/g, '(').replace(/\"\\)/g, ')').replace(/\\(/g, ', ').replace(/\\)/g, '') : JSON.stringify(data)}`; // We need some sort of cut-off here since these can be very large and\n  // very nested, pick a number and trim the result display to it\n\n  return formatted.length <= 256 ? formatted : `${formatted.substr(0, 255)}…`;\n}\n/** @internal */\n\n\nvar _id = (0, _classPrivateFieldLooseKey2.default)(\"id\");\n\nclass RpcCoder {\n  constructor() {\n    Object.defineProperty(this, _id, {\n      writable: true,\n      value: 0\n    });\n  }\n\n  decodeResponse(response) {\n    (0, _util.assert)(response, 'Empty response object received');\n    (0, _util.assert)(response.jsonrpc === '2.0', 'Invalid jsonrpc field in decoded object');\n    const isSubscription = !(0, _util.isUndefined)(response.params) && !(0, _util.isUndefined)(response.method);\n    (0, _util.assert)((0, _util.isNumber)(response.id) || isSubscription && ((0, _util.isNumber)(response.params.subscription) || (0, _util.isString)(response.params.subscription)), 'Invalid id field in decoded object');\n\n    this._checkError(response.error);\n\n    (0, _util.assert)(!(0, _util.isUndefined)(response.result) || isSubscription, 'No result found in JsonRpc response');\n\n    if (isSubscription) {\n      this._checkError(response.params.error);\n\n      return response.params.result;\n    }\n\n    return response.result;\n  }\n\n  encodeJson(method, params) {\n    return JSON.stringify(this.encodeObject(method, params));\n  }\n\n  encodeObject(method, params) {\n    return {\n      id: ++(0, _classPrivateFieldLooseBase2.default)(this, _id)[_id],\n      jsonrpc: '2.0',\n      method,\n      params\n    };\n  }\n\n  getId() {\n    return (0, _classPrivateFieldLooseBase2.default)(this, _id)[_id];\n  }\n\n  _checkError(error) {\n    if (error) {\n      const {\n        code,\n        data,\n        message\n      } = error;\n      throw new Error(`${code}: ${message}${formatErrorData(data)}`);\n    }\n  }\n\n}\n\nexports.default = RpcCoder;"]},"metadata":{},"sourceType":"script"}