{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0; // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\nvar _default = {\n  rpc: {\n    call: {\n      description: 'Executes a call to a contract',\n      params: [{\n        name: 'callRequest',\n        type: 'ContractCallRequest'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ContractExecResult'\n    },\n    getStorage: {\n      description: 'Returns the value under a specified storage key in a contract',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'key',\n        type: 'H256'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Bytes>'\n    },\n    rentProjection: {\n      description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<BlockNumber>'\n    }\n  },\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      emptyPairCount: 'u32',\n      totalPairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>'\n    },\n    CodeHash: 'Hash',\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccess: {\n      flags: 'u32',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResult: {\n      _enum: {\n        Success: 'ContractExecResultSuccess',\n        Error: 'Null'\n      }\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    Gas: 'u64',\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    InstructionWeights: {\n      growMem: 'Weight',\n      regular: 'Weight'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      _reserved: 'PrefabWasmModuleReserved',\n      code: 'Bytes'\n    },\n    PrefabWasmModuleReserved: 'Option<Null>',\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    Schedule: {\n      version: 'u32',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights',\n      enablePrintln: 'bool',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      maxTableSize: 'u32',\n      maxSubjectLen: 'u32',\n      maxCodeSize: 'u32'\n    },\n    SeedOf: 'Hash',\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/interfaces/contracts/definitions.js"],"names":["Object","defineProperty","exports","value","default","_default","rpc","call","description","params","name","type","isHistoric","isOptional","getStorage","rentProjection","types","AliveContractInfo","trieId","storageSize","emptyPairCount","totalPairCount","codeHash","rentAllowance","deductBlock","lastWrite","CodeHash","ContractCallRequest","origin","dest","gasLimit","inputData","ContractExecResultSuccessTo255","status","data","ContractExecResultTo255","_enum","Success","Error","ContractExecResultSuccess","flags","gasConsumed","ContractExecResult","ContractInfo","Alive","Tombstone","ContractStorageKey","Gas","HostFnWeights","caller","address","gasLeft","balance","valueTransferred","minimumBalance","tombstoneDeposit","blockNumber","now","weightToFee","gas","input","inputPerByte","return","returnPerByte","terminate","restoreTo","restoreToPerDelta","random","depositEvent","depositEventPerTopic","depositEventPerByte","setRentAllowance","setStorage","setStoragePerByte","clearStorage","getStoragePerByte","transfer","callTransferSurcharge","callPerInputByte","callPerOutputByte","instantiate","instantiatePerInputByte","instantiatePerOutputByte","hashSha2256","hashSha2256PerByte","hashKeccak256","hashKeccak256PerByte","hashBlake2256","hashBlake2256PerByte","hashBlake2128","hashBlake2128PerByte","InstructionWeights","growMem","regular","PrefabWasmModule","scheduleVersion","initial","maximum","_reserved","code","PrefabWasmModuleReserved","ScheduleTo212","version","putCodePerByteCost","growMemCost","regularOpCost","returnDataPerByteCost","eventDataPerByteCost","eventPerTopicCost","eventBaseCost","sandboxDataReadCost","sandboxDataWriteCost","maxEventTopics","maxStackHeight","maxMemoryPages","enablePrintln","maxSubjectLen","ScheduleTo258","transferCost","Schedule","instructionWeights","hostFnWeights","maxTableSize","maxCodeSize","SeedOf","TombstoneContractInfo","TrieId"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nvar _default = {\n  rpc: {\n    call: {\n      description: 'Executes a call to a contract',\n      params: [{\n        name: 'callRequest',\n        type: 'ContractCallRequest'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'ContractExecResult'\n    },\n    getStorage: {\n      description: 'Returns the value under a specified storage key in a contract',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'key',\n        type: 'H256'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<Bytes>'\n    },\n    rentProjection: {\n      description: 'Returns the projected time a given contract will be able to sustain paying its rent',\n      params: [{\n        name: 'address',\n        type: 'AccountId'\n      }, {\n        name: 'at',\n        type: 'BlockHash',\n        isHistoric: true,\n        isOptional: true\n      }],\n      type: 'Option<BlockNumber>'\n    }\n  },\n  types: {\n    AliveContractInfo: {\n      trieId: 'TrieId',\n      storageSize: 'u32',\n      emptyPairCount: 'u32',\n      totalPairCount: 'u32',\n      codeHash: 'CodeHash',\n      rentAllowance: 'Balance',\n      deductBlock: 'BlockNumber',\n      lastWrite: 'Option<BlockNumber>'\n    },\n    CodeHash: 'Hash',\n    ContractCallRequest: {\n      origin: 'AccountId',\n      dest: 'AccountId',\n      value: 'Balance',\n      gasLimit: 'u64',\n      inputData: 'Bytes'\n    },\n    ContractExecResultSuccessTo255: {\n      status: 'u8',\n      data: 'Raw'\n    },\n    ContractExecResultTo255: {\n      _enum: {\n        Success: 'ContractExecResultSuccessTo255',\n        Error: 'Null'\n      }\n    },\n    ContractExecResultSuccess: {\n      flags: 'u32',\n      data: 'Bytes',\n      gasConsumed: 'u64'\n    },\n    ContractExecResult: {\n      _enum: {\n        Success: 'ContractExecResultSuccess',\n        Error: 'Null'\n      }\n    },\n    ContractInfo: {\n      _enum: {\n        Alive: 'AliveContractInfo',\n        Tombstone: 'TombstoneContractInfo'\n      }\n    },\n    ContractStorageKey: '[u8; 32]',\n    Gas: 'u64',\n    HostFnWeights: {\n      caller: 'Weight',\n      address: 'Weight',\n      gasLeft: 'Weight',\n      balance: 'Weight',\n      valueTransferred: 'Weight',\n      minimumBalance: 'Weight',\n      tombstoneDeposit: 'Weight',\n      rentAllowance: 'Weight',\n      blockNumber: 'Weight',\n      now: 'Weight',\n      weightToFee: 'Weight',\n      gas: 'Weight',\n      input: 'Weight',\n      inputPerByte: 'Weight',\n      return: 'Weight',\n      returnPerByte: 'Weight',\n      terminate: 'Weight',\n      restoreTo: 'Weight',\n      restoreToPerDelta: 'Weight',\n      random: 'Weight',\n      depositEvent: 'Weight',\n      depositEventPerTopic: 'Weight',\n      depositEventPerByte: 'Weight',\n      setRentAllowance: 'Weight',\n      setStorage: 'Weight',\n      setStoragePerByte: 'Weight',\n      clearStorage: 'Weight',\n      getStorage: 'Weight',\n      getStoragePerByte: 'Weight',\n      transfer: 'Weight',\n      call: 'Weight',\n      callTransferSurcharge: 'Weight',\n      callPerInputByte: 'Weight',\n      callPerOutputByte: 'Weight',\n      instantiate: 'Weight',\n      instantiatePerInputByte: 'Weight',\n      instantiatePerOutputByte: 'Weight',\n      hashSha2256: 'Weight',\n      hashSha2256PerByte: 'Weight',\n      hashKeccak256: 'Weight',\n      hashKeccak256PerByte: 'Weight',\n      hashBlake2256: 'Weight',\n      hashBlake2256PerByte: 'Weight',\n      hashBlake2128: 'Weight',\n      hashBlake2128PerByte: 'Weight'\n    },\n    InstructionWeights: {\n      growMem: 'Weight',\n      regular: 'Weight'\n    },\n    PrefabWasmModule: {\n      scheduleVersion: 'Compact<u32>',\n      initial: 'Compact<u32>',\n      maximum: 'Compact<u32>',\n      _reserved: 'PrefabWasmModuleReserved',\n      code: 'Bytes'\n    },\n    PrefabWasmModuleReserved: 'Option<Null>',\n    ScheduleTo212: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    ScheduleTo258: {\n      version: 'u32',\n      putCodePerByteCost: 'Gas',\n      growMemCost: 'Gas',\n      regularOpCost: 'Gas',\n      returnDataPerByteCost: 'Gas',\n      eventDataPerByteCost: 'Gas',\n      eventPerTopicCost: 'Gas',\n      eventBaseCost: 'Gas',\n      sandboxDataReadCost: 'Gas',\n      sandboxDataWriteCost: 'Gas',\n      transferCost: 'Gas',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      enablePrintln: 'bool',\n      maxSubjectLen: 'u32'\n    },\n    Schedule: {\n      version: 'u32',\n      instructionWeights: 'InstructionWeights',\n      hostFnWeights: 'HostFnWeights',\n      enablePrintln: 'bool',\n      maxEventTopics: 'u32',\n      maxStackHeight: 'u32',\n      maxMemoryPages: 'u32',\n      maxTableSize: 'u32',\n      maxSubjectLen: 'u32',\n      maxCodeSize: 'u32'\n    },\n    SeedOf: 'Hash',\n    TombstoneContractInfo: 'Hash',\n    TrieId: 'Bytes'\n  }\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}