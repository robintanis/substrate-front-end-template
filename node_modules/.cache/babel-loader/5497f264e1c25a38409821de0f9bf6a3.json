{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compareArray;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"./util\"); // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE These are used internally and when comparing objects, expects that\n// when the second is an Codec[] that the first has to be as well\n\n\nfunction compareArray(a, b) {\n  if (Array.isArray(b)) {\n    return a.length === b.length && (0, _util.isUndefined)(a.find((value, index) => (0, _util2.hasEq)(value) ? !value.eq(b[index]) : value !== b[index]));\n  }\n\n  return false;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/codec/utils/compareArray.js"],"names":["Object","defineProperty","exports","value","default","compareArray","_util","require","_util2","a","b","Array","isArray","length","isUndefined","find","index","hasEq","eq"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAApB,C,CAEA;AACA;AACA;AACA;;;AACA,SAASF,YAAT,CAAsBI,CAAtB,EAAyBC,CAAzB,EAA4B;AAC1B,MAAIC,KAAK,CAACC,OAAN,CAAcF,CAAd,CAAJ,EAAsB;AACpB,WAAOD,CAAC,CAACI,MAAF,KAAaH,CAAC,CAACG,MAAf,IAAyB,CAAC,GAAGP,KAAK,CAACQ,WAAV,EAAuBL,CAAC,CAACM,IAAF,CAAO,CAACZ,KAAD,EAAQa,KAAR,KAAkB,CAAC,GAAGR,MAAM,CAACS,KAAX,EAAkBd,KAAlB,IAA2B,CAACA,KAAK,CAACe,EAAN,CAASR,CAAC,CAACM,KAAD,CAAV,CAA5B,GAAiDb,KAAK,KAAKO,CAAC,CAACM,KAAD,CAArF,CAAvB,CAAhC;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compareArray;\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"./util\");\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// NOTE These are used internally and when comparing objects, expects that\n// when the second is an Codec[] that the first has to be as well\nfunction compareArray(a, b) {\n  if (Array.isArray(b)) {\n    return a.length === b.length && (0, _util.isUndefined)(a.find((value, index) => (0, _util2.hasEq)(value) ? !value.eq(b[index]) : value !== b[index]));\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"script"}