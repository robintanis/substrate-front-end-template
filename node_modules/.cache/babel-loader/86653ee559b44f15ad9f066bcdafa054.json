{"ast":null,"code":"var _jsxFileName = \"/home/robin/substrate-front-end-template/src/NodeInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main(props) {\n  const {\n    api\n  } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([api.rpc.system.chain(), api.rpc.system.name(), api.rpc.system.version()]);\n        setNodeInfo({\n          chain,\n          nodeName,\n          nodeVersion\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n\n    getInfo();\n  }, [api.rpc.system]);\n  return /*#__PURE__*/React.createElement(Grid.Column, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card.Content, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, nodeInfo.nodeName), /*#__PURE__*/React.createElement(Card.Meta, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, nodeInfo.chain)), /*#__PURE__*/React.createElement(Card.Description, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Built using the\", ' ', /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://github.com/substrate-developer-hub/substrate-front-end-template\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"Substrate Front End Template\"))), /*#__PURE__*/React.createElement(Card.Content, {\n    extra: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"setting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }), \"v\", nodeInfo.nodeVersion)));\n}\n\nexport default function NodeInfo(props) {\n  const {\n    api\n  } = useSubstrate();\n  return api.rpc && api.rpc.system && api.rpc.system.chain && api.rpc.system.name && api.rpc.system.version ? /*#__PURE__*/React.createElement(Main, Object.assign({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })) : null;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/src/NodeInfo.js"],"names":["React","useEffect","useState","Card","Icon","Grid","useSubstrate","Main","props","api","nodeInfo","setNodeInfo","getInfo","chain","nodeName","nodeVersion","Promise","all","rpc","system","name","version","e","console","error","NodeInfo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,QAAiC,mBAAjC;AAEA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,SAASC,IAAT,CAAeC,KAAf,EAAsB;AACpB,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,OAAO,GAAG,YAAY;AAC1B,UAAI;AACF,cAAM,CAACC,KAAD,EAAQC,QAAR,EAAkBC,WAAlB,IAAiC,MAAMC,OAAO,CAACC,GAAR,CAAY,CACvDR,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeN,KAAf,EADuD,EAEvDJ,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeC,IAAf,EAFuD,EAGvDX,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeE,OAAf,EAHuD,CAAZ,CAA7C;AAKAV,QAAAA,WAAW,CAAC;AAAEE,UAAAA,KAAF;AAASC,UAAAA,QAAT;AAAmBC,UAAAA;AAAnB,SAAD,CAAX;AACD,OAPD,CAOE,OAAOO,CAAP,EAAU;AACVC,QAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,KAXD;;AAYAV,IAAAA,OAAO;AACR,GAdQ,EAcN,CAACH,GAAG,CAACS,GAAJ,CAAQC,MAAT,CAdM,CAAT;AAgBA,sBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcT,QAAQ,CAACI,QAAvB,CADF,eAEE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOJ,QAAQ,CAACG,KAAhB,CADF,CAFF,eAKE,oBAAC,IAAD,CAAM,WAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,GADlB,eAEE;AAAG,IAAA,IAAI,EAAC,yEAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFF,CALF,CADF,eAaE,oBAAC,IAAD,CAAM,OAAN;AAAc,IAAA,KAAK,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,OAC2BH,QAAQ,CAACK,WADpC,CAbF,CADF,CADF;AAqBD;;AAED,eAAe,SAASU,QAAT,CAAmBjB,KAAnB,EAA0B;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAAUH,YAAY,EAA5B;AACA,SAAOG,GAAG,CAACS,GAAJ,IACLT,GAAG,CAACS,GAAJ,CAAQC,MADH,IAELV,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeN,KAFV,IAGLJ,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeC,IAHV,IAILX,GAAG,CAACS,GAAJ,CAAQC,MAAR,CAAeE,OAJV,gBAKH,oBAAC,IAAD,oBAAUb,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALG,GAMD,IANN;AAOD","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Icon, Grid } from 'semantic-ui-react';\n\nimport { useSubstrate } from './substrate-lib';\n\nfunction Main (props) {\n  const { api } = useSubstrate();\n  const [nodeInfo, setNodeInfo] = useState({});\n\n  useEffect(() => {\n    const getInfo = async () => {\n      try {\n        const [chain, nodeName, nodeVersion] = await Promise.all([\n          api.rpc.system.chain(),\n          api.rpc.system.name(),\n          api.rpc.system.version()\n        ]);\n        setNodeInfo({ chain, nodeName, nodeVersion });\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    getInfo();\n  }, [api.rpc.system]);\n\n  return (\n    <Grid.Column>\n      <Card>\n        <Card.Content>\n          <Card.Header>{nodeInfo.nodeName}</Card.Header>\n          <Card.Meta>\n            <span>{nodeInfo.chain}</span>\n          </Card.Meta>\n          <Card.Description>\n            Built using the{' '}\n            <a href='https://github.com/substrate-developer-hub/substrate-front-end-template'>\n              Substrate Front End Template\n            </a>\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Icon name='setting' />v{nodeInfo.nodeVersion}\n        </Card.Content>\n      </Card>\n    </Grid.Column>\n  );\n}\n\nexport default function NodeInfo (props) {\n  const { api } = useSubstrate();\n  return api.rpc &&\n    api.rpc.system &&\n    api.rpc.system.chain &&\n    api.rpc.system.name &&\n    api.rpc.system.version ? (\n      <Main {...props} />\n    ) : null;\n}\n"]},"metadata":{},"sourceType":"module"}