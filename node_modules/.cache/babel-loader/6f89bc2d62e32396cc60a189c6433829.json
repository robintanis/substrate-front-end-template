{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compactToU8a;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _assert = _interopRequireDefault(require(\"../assert\"));\n\nvar _bn2 = require(\"../bn\");\n\nvar _u8a = require(\"../u8a\"); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst MAX_U8 = new _bn.default(2).pow(new _bn.default(8 - 2)).subn(1);\nconst MAX_U16 = new _bn.default(2).pow(new _bn.default(16 - 2)).subn(1);\nconst MAX_U32 = new _bn.default(2).pow(new _bn.default(32 - 2)).subn(1);\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nfunction compactToU8a(_value) {\n  const value = (0, _bn2.bnToBn)(_value);\n\n  if (value.lte(MAX_U8)) {\n    return new Uint8Array([value.toNumber() << 2]);\n  } else if (value.lte(MAX_U16)) {\n    return (0, _bn2.bnToU8a)(value.shln(2).addn(0b01), 16, true);\n  } else if (value.lte(MAX_U32)) {\n    return (0, _bn2.bnToU8a)(value.shln(2).addn(0b10), 32, true);\n  }\n\n  const u8a = (0, _bn2.bnToU8a)(value);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  (0, _assert.default)(length >= 4, 'Previous tests match anyting less than 2^30; qed');\n  return (0, _u8a.u8aConcat)(new Uint8Array([// substract 4 as minimum (also catered for in decoding)\n  (length - 4 << 2) + 0b11]), u8a.subarray(0, length));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/compact/toU8a.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","compactToU8a","_bn","_assert","_bn2","_u8a","MAX_U8","pow","subn","MAX_U16","MAX_U32","_value","bnToBn","lte","Uint8Array","toNumber","bnToU8a","shln","addn","u8a","length","u8aConcat","subarray"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,GAAG,GAAGR,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAhC;;AAEA,IAAIQ,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAApC;;AAEA,IAAIS,IAAI,GAAGT,OAAO,CAAC,OAAD,CAAlB;;AAEA,IAAIU,IAAI,GAAGV,OAAO,CAAC,QAAD,CAAlB,C,CAEA;AACA;;;AACA,MAAMW,MAAM,GAAG,IAAIJ,GAAG,CAACF,OAAR,CAAgB,CAAhB,EAAmBO,GAAnB,CAAuB,IAAIL,GAAG,CAACF,OAAR,CAAgB,IAAI,CAApB,CAAvB,EAA+CQ,IAA/C,CAAoD,CAApD,CAAf;AACA,MAAMC,OAAO,GAAG,IAAIP,GAAG,CAACF,OAAR,CAAgB,CAAhB,EAAmBO,GAAnB,CAAuB,IAAIL,GAAG,CAACF,OAAR,CAAgB,KAAK,CAArB,CAAvB,EAAgDQ,IAAhD,CAAqD,CAArD,CAAhB;AACA,MAAME,OAAO,GAAG,IAAIR,GAAG,CAACF,OAAR,CAAgB,CAAhB,EAAmBO,GAAnB,CAAuB,IAAIL,GAAG,CAACF,OAAR,CAAgB,KAAK,CAArB,CAAvB,EAAgDQ,IAAhD,CAAqD,CAArD,CAAhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASP,YAAT,CAAsBU,MAAtB,EAA8B;AAC5B,QAAMZ,KAAK,GAAG,CAAC,GAAGK,IAAI,CAACQ,MAAT,EAAiBD,MAAjB,CAAd;;AAEA,MAAIZ,KAAK,CAACc,GAAN,CAAUP,MAAV,CAAJ,EAAuB;AACrB,WAAO,IAAIQ,UAAJ,CAAe,CAACf,KAAK,CAACgB,QAAN,MAAoB,CAArB,CAAf,CAAP;AACD,GAFD,MAEO,IAAIhB,KAAK,CAACc,GAAN,CAAUJ,OAAV,CAAJ,EAAwB;AAC7B,WAAO,CAAC,GAAGL,IAAI,CAACY,OAAT,EAAkBjB,KAAK,CAACkB,IAAN,CAAW,CAAX,EAAcC,IAAd,CAAmB,IAAnB,CAAlB,EAA4C,EAA5C,EAAgD,IAAhD,CAAP;AACD,GAFM,MAEA,IAAInB,KAAK,CAACc,GAAN,CAAUH,OAAV,CAAJ,EAAwB;AAC7B,WAAO,CAAC,GAAGN,IAAI,CAACY,OAAT,EAAkBjB,KAAK,CAACkB,IAAN,CAAW,CAAX,EAAcC,IAAd,CAAmB,IAAnB,CAAlB,EAA4C,EAA5C,EAAgD,IAAhD,CAAP;AACD;;AAED,QAAMC,GAAG,GAAG,CAAC,GAAGf,IAAI,CAACY,OAAT,EAAkBjB,KAAlB,CAAZ;AACA,MAAIqB,MAAM,GAAGD,GAAG,CAACC,MAAjB,CAZ4B,CAYH;;AAEzB,SAAOD,GAAG,CAACC,MAAM,GAAG,CAAV,CAAH,KAAoB,CAA3B,EAA8B;AAC5BA,IAAAA,MAAM;AACP;;AAED,GAAC,GAAGjB,OAAO,CAACH,OAAZ,EAAqBoB,MAAM,IAAI,CAA/B,EAAkC,kDAAlC;AACA,SAAO,CAAC,GAAGf,IAAI,CAACgB,SAAT,EAAoB,IAAIP,UAAJ,CAAe,CAAC;AAC3C,GAACM,MAAM,GAAG,CAAT,IAAc,CAAf,IAAoB,IADsB,CAAf,CAApB,EACqBD,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBF,MAAhB,CADrB,CAAP;AAED","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = compactToU8a;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _assert = _interopRequireDefault(require(\"../assert\"));\n\nvar _bn2 = require(\"../bn\");\n\nvar _u8a = require(\"../u8a\");\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst MAX_U8 = new _bn.default(2).pow(new _bn.default(8 - 2)).subn(1);\nconst MAX_U16 = new _bn.default(2).pow(new _bn.default(16 - 2)).subn(1);\nconst MAX_U32 = new _bn.default(2).pow(new _bn.default(32 - 2)).subn(1);\n/**\n * @name compactToU8a\n * @description Encodes a number into a compact representation\n * @example\n * <BR>\n *\n * ```javascript\n * import { compactToU8a } from '@polkadot/util';\n *\n * console.log(compactToU8a(511, 32)); // Uint8Array([0b11111101, 0b00000111])\n * ```\n */\n\nfunction compactToU8a(_value) {\n  const value = (0, _bn2.bnToBn)(_value);\n\n  if (value.lte(MAX_U8)) {\n    return new Uint8Array([value.toNumber() << 2]);\n  } else if (value.lte(MAX_U16)) {\n    return (0, _bn2.bnToU8a)(value.shln(2).addn(0b01), 16, true);\n  } else if (value.lte(MAX_U32)) {\n    return (0, _bn2.bnToU8a)(value.shln(2).addn(0b10), 32, true);\n  }\n\n  const u8a = (0, _bn2.bnToU8a)(value);\n  let length = u8a.length; // adjust to the minimum number of bytes\n\n  while (u8a[length - 1] === 0) {\n    length--;\n  }\n\n  (0, _assert.default)(length >= 4, 'Previous tests match anyting less than 2^30; qed');\n  return (0, _u8a.u8aConcat)(new Uint8Array([// substract 4 as minimum (also catered for in decoding)\n  (length - 4 << 2) + 0b11]), u8a.subarray(0, length));\n}"]},"metadata":{},"sourceType":"script"}