{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWasm;\n\nvar _eq = _interopRequireDefault(require(\"../u8a/eq\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst WASM_MAGIC = new Uint8Array([0, 97, 115, 109]); // \\0asm\n\n/**\n * @name isWasm\n * @summary Tests if the input has a WASM header\n * @description\n * Checks to see if the input Uint8Array contains a valid WASM header\n */\n\nfunction isWasm(value) {\n  return !!value && (0, _eq.default)(value.subarray(0, 4), WASM_MAGIC);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/is/wasm.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","isWasm","_eq","WASM_MAGIC","Uint8Array","subarray"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,MAAlB;;AAEA,IAAIC,GAAG,GAAGR,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAAhC,C,CAEA;AACA;;;AACA,MAAMQ,UAAU,GAAG,IAAIC,UAAJ,CAAe,CAAC,CAAD,EAAI,EAAJ,EAAQ,GAAR,EAAa,GAAb,CAAf,CAAnB,C,CAAsD;;AAEtD;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASH,MAAT,CAAgBF,KAAhB,EAAuB;AACrB,SAAO,CAAC,CAACA,KAAF,IAAW,CAAC,GAAGG,GAAG,CAACF,OAAR,EAAiBD,KAAK,CAACM,QAAN,CAAe,CAAf,EAAkB,CAAlB,CAAjB,EAAuCF,UAAvC,CAAlB;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isWasm;\n\nvar _eq = _interopRequireDefault(require(\"../u8a/eq\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst WASM_MAGIC = new Uint8Array([0, 97, 115, 109]); // \\0asm\n\n/**\n * @name isWasm\n * @summary Tests if the input has a WASM header\n * @description\n * Checks to see if the input Uint8Array contains a valid WASM header\n */\n\nfunction isWasm(value) {\n  return !!value && (0, _eq.default)(value.subarray(0, 4), WASM_MAGIC);\n}"]},"metadata":{},"sourceType":"script"}