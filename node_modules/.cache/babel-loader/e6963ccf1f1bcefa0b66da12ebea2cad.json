{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkChecksum;\n\nvar _sshash = _interopRequireDefault(require(\"./sshash\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction checkChecksum(decoded) {\n  const isPublicKey = [35, 36].includes(decoded.length); // non-publicKeys has 1 byte checksums, else default to 2\n\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = (0, _sshash.default)(decoded.subarray(0, length)); // see if the hash actually matches\n\n  const isValid = isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0];\n  return [isValid, length];\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/address/checkChecksum.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","checkChecksum","_sshash","decoded","isPublicKey","includes","length","hash","subarray","isValid"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC,C,CAEA;AACA;;;AACA,SAASM,aAAT,CAAuBE,OAAvB,EAAgC;AAC9B,QAAMC,WAAW,GAAG,CAAC,EAAD,EAAK,EAAL,EAASC,QAAT,CAAkBF,OAAO,CAACG,MAA1B,CAApB,CAD8B,CACyB;;AAEvD,QAAMA,MAAM,GAAGH,OAAO,CAACG,MAAR,IAAkBF,WAAW,GAAG,CAAH,GAAO,CAApC,CAAf,CAH8B,CAGyB;;AAEvD,QAAMG,IAAI,GAAG,CAAC,GAAGL,OAAO,CAACF,OAAZ,EAAqBG,OAAO,CAACK,QAAR,CAAiB,CAAjB,EAAoBF,MAApB,CAArB,CAAb,CAL8B,CAKkC;;AAEhE,QAAMG,OAAO,GAAGL,WAAW,GAAGD,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,KAAgCC,IAAI,CAAC,CAAD,CAApC,IAA2CJ,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,KAAgCC,IAAI,CAAC,CAAD,CAAlF,GAAwFJ,OAAO,CAACA,OAAO,CAACG,MAAR,GAAiB,CAAlB,CAAP,KAAgCC,IAAI,CAAC,CAAD,CAAvJ;AACA,SAAO,CAACE,OAAD,EAAUH,MAAV,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = checkChecksum;\n\nvar _sshash = _interopRequireDefault(require(\"./sshash\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction checkChecksum(decoded) {\n  const isPublicKey = [35, 36].includes(decoded.length); // non-publicKeys has 1 byte checksums, else default to 2\n\n  const length = decoded.length - (isPublicKey ? 2 : 1); // calculate the hash and do the checksum byte checks\n\n  const hash = (0, _sshash.default)(decoded.subarray(0, length)); // see if the hash actually matches\n\n  const isValid = isPublicKey ? decoded[decoded.length - 2] === hash[0] && decoded[decoded.length - 1] === hash[1] : decoded[decoded.length - 1] === hash[0];\n  return [isValid, length];\n}"]},"metadata":{},"sourceType":"script"}