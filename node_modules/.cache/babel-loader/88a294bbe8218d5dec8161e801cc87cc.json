{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _observable = _interopRequireDefault(require(\"../observable\")); // Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nlet hasCalledInitOptions = false;\n\nconst sortByName = (a, b) => {\n  const valueA = a.option.name;\n  const valueB = b.option.name;\n  return valueA.localeCompare(valueB);\n};\n\nconst sortByCreated = (a, b) => {\n  const valueA = a.json.meta.whenCreated || 0;\n  const valueB = b.json.meta.whenCreated || 0;\n\n  if (valueA < valueB) {\n    return 1;\n  }\n\n  if (valueA > valueB) {\n    return -1;\n  }\n\n  return 0;\n};\n\nclass KeyringOption {\n  constructor() {\n    this.optionsSubject = new _rxjs.BehaviorSubject(this.emptyOptions());\n  }\n\n  createOptionHeader(name) {\n    return {\n      key: `header-${name.toLowerCase()}`,\n      name,\n      value: null\n    };\n  }\n\n  init(keyring) {\n    (0, _util.assert)(!hasCalledInitOptions, 'Unable to initialise options more than once');\n\n    _observable.default.subscribe(() => {\n      const opts = this.emptyOptions();\n      this.addAccounts(keyring, opts);\n      this.addAddresses(keyring, opts);\n      this.addContracts(keyring, opts);\n      opts.address = this.linkItems({\n        Addresses: opts.address,\n        Recent: opts.recent\n      });\n      opts.account = this.linkItems({\n        Accounts: opts.account,\n        Development: opts.testing\n      });\n      opts.contract = this.linkItems({\n        Contracts: opts.contract\n      });\n      opts.all = [].concat(opts.account, opts.address);\n      opts.allPlus = [].concat(opts.account, opts.address, opts.contract);\n      this.optionsSubject.next(opts);\n    });\n\n    hasCalledInitOptions = true;\n  }\n\n  linkItems(items) {\n    return Object.keys(items).reduce((result, header) => {\n      const options = items[header];\n      return result.concat(options.length ? [this.createOptionHeader(header)] : [], options);\n    }, []);\n  }\n\n  addAccounts(keyring, options) {\n    const available = keyring.accounts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      json: {\n        meta: {\n          isTesting = false\n        }\n      },\n      option\n    }) => {\n      if (!isTesting) {\n        options.account.push(option);\n      } else {\n        options.testing.push(option);\n      }\n    });\n  }\n\n  addAddresses(keyring, options) {\n    const available = keyring.addresses.subject.getValue();\n    Object.values(available).filter(({\n      json\n    }) => !!json.meta.isRecent).sort(sortByCreated).forEach(({\n      option\n    }) => {\n      options.recent.push(option);\n    });\n    Object.values(available).filter(({\n      json\n    }) => !json.meta.isRecent).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.address.push(option);\n    });\n  }\n\n  addContracts(keyring, options) {\n    const available = keyring.contracts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.contract.push(option);\n    });\n  }\n\n  emptyOptions() {\n    return {\n      account: [],\n      address: [],\n      all: [],\n      allPlus: [],\n      contract: [],\n      recent: [],\n      testing: []\n    };\n  }\n\n}\n\nconst keyringOptionInstance = new KeyringOption();\nvar _default = keyringOptionInstance;\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/ui-keyring/options/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_rxjs","_util","_observable","hasCalledInitOptions","sortByName","a","b","valueA","option","name","valueB","localeCompare","sortByCreated","json","meta","whenCreated","KeyringOption","constructor","optionsSubject","BehaviorSubject","emptyOptions","createOptionHeader","key","toLowerCase","init","keyring","assert","subscribe","opts","addAccounts","addAddresses","addContracts","address","linkItems","Addresses","Recent","recent","account","Accounts","Development","testing","contract","Contracts","all","concat","allPlus","next","items","keys","reduce","result","header","options","length","available","accounts","subject","getValue","values","sort","forEach","isTesting","push","addresses","filter","isRecent","contracts","keyringOptionInstance","_default"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGN,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIO,KAAK,GAAGP,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIQ,WAAW,GAAGT,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAAxC,C,CAEA;AACA;;;AACA,IAAIS,oBAAoB,GAAG,KAA3B;;AAEA,MAAMC,UAAU,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3B,QAAMC,MAAM,GAAGF,CAAC,CAACG,MAAF,CAASC,IAAxB;AACA,QAAMC,MAAM,GAAGJ,CAAC,CAACE,MAAF,CAASC,IAAxB;AACA,SAAOF,MAAM,CAACI,aAAP,CAAqBD,MAArB,CAAP;AACD,CAJD;;AAMA,MAAME,aAAa,GAAG,CAACP,CAAD,EAAIC,CAAJ,KAAU;AAC9B,QAAMC,MAAM,GAAGF,CAAC,CAACQ,IAAF,CAAOC,IAAP,CAAYC,WAAZ,IAA2B,CAA1C;AACA,QAAML,MAAM,GAAGJ,CAAC,CAACO,IAAF,CAAOC,IAAP,CAAYC,WAAZ,IAA2B,CAA1C;;AAEA,MAAIR,MAAM,GAAGG,MAAb,EAAqB;AACnB,WAAO,CAAP;AACD;;AAED,MAAIH,MAAM,GAAGG,MAAb,EAAqB;AACnB,WAAO,CAAC,CAAR;AACD;;AAED,SAAO,CAAP;AACD,CAbD;;AAeA,MAAMM,aAAN,CAAoB;AAClBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,cAAL,GAAsB,IAAIlB,KAAK,CAACmB,eAAV,CAA0B,KAAKC,YAAL,EAA1B,CAAtB;AACD;;AAEDC,EAAAA,kBAAkB,CAACZ,IAAD,EAAO;AACvB,WAAO;AACLa,MAAAA,GAAG,EAAG,UAASb,IAAI,CAACc,WAAL,EAAmB,EAD7B;AAELd,MAAAA,IAFK;AAGLX,MAAAA,KAAK,EAAE;AAHF,KAAP;AAKD;;AAED0B,EAAAA,IAAI,CAACC,OAAD,EAAU;AACZ,KAAC,GAAGxB,KAAK,CAACyB,MAAV,EAAkB,CAACvB,oBAAnB,EAAyC,6CAAzC;;AAEAD,IAAAA,WAAW,CAACH,OAAZ,CAAoB4B,SAApB,CAA8B,MAAM;AAClC,YAAMC,IAAI,GAAG,KAAKR,YAAL,EAAb;AACA,WAAKS,WAAL,CAAiBJ,OAAjB,EAA0BG,IAA1B;AACA,WAAKE,YAAL,CAAkBL,OAAlB,EAA2BG,IAA3B;AACA,WAAKG,YAAL,CAAkBN,OAAlB,EAA2BG,IAA3B;AACAA,MAAAA,IAAI,CAACI,OAAL,GAAe,KAAKC,SAAL,CAAe;AAC5BC,QAAAA,SAAS,EAAEN,IAAI,CAACI,OADY;AAE5BG,QAAAA,MAAM,EAAEP,IAAI,CAACQ;AAFe,OAAf,CAAf;AAIAR,MAAAA,IAAI,CAACS,OAAL,GAAe,KAAKJ,SAAL,CAAe;AAC5BK,QAAAA,QAAQ,EAAEV,IAAI,CAACS,OADa;AAE5BE,QAAAA,WAAW,EAAEX,IAAI,CAACY;AAFU,OAAf,CAAf;AAIAZ,MAAAA,IAAI,CAACa,QAAL,GAAgB,KAAKR,SAAL,CAAe;AAC7BS,QAAAA,SAAS,EAAEd,IAAI,CAACa;AADa,OAAf,CAAhB;AAGAb,MAAAA,IAAI,CAACe,GAAL,GAAW,GAAGC,MAAH,CAAUhB,IAAI,CAACS,OAAf,EAAwBT,IAAI,CAACI,OAA7B,CAAX;AACAJ,MAAAA,IAAI,CAACiB,OAAL,GAAe,GAAGD,MAAH,CAAUhB,IAAI,CAACS,OAAf,EAAwBT,IAAI,CAACI,OAA7B,EAAsCJ,IAAI,CAACa,QAA3C,CAAf;AACA,WAAKvB,cAAL,CAAoB4B,IAApB,CAAyBlB,IAAzB;AACD,KAnBD;;AAqBAzB,IAAAA,oBAAoB,GAAG,IAAvB;AACD;;AAED8B,EAAAA,SAAS,CAACc,KAAD,EAAQ;AACf,WAAOpD,MAAM,CAACqD,IAAP,CAAYD,KAAZ,EAAmBE,MAAnB,CAA0B,CAACC,MAAD,EAASC,MAAT,KAAoB;AACnD,YAAMC,OAAO,GAAGL,KAAK,CAACI,MAAD,CAArB;AACA,aAAOD,MAAM,CAACN,MAAP,CAAcQ,OAAO,CAACC,MAAR,GAAiB,CAAC,KAAKhC,kBAAL,CAAwB8B,MAAxB,CAAD,CAAjB,GAAqD,EAAnE,EAAuEC,OAAvE,CAAP;AACD,KAHM,EAGJ,EAHI,CAAP;AAID;;AAEDvB,EAAAA,WAAW,CAACJ,OAAD,EAAU2B,OAAV,EAAmB;AAC5B,UAAME,SAAS,GAAG7B,OAAO,CAAC8B,QAAR,CAAiBC,OAAjB,CAAyBC,QAAzB,EAAlB;AACA9D,IAAAA,MAAM,CAAC+D,MAAP,CAAcJ,SAAd,EAAyBK,IAAzB,CAA8BvD,UAA9B,EAA0CwD,OAA1C,CAAkD,CAAC;AACjD/C,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE;AACJ+C,UAAAA,SAAS,GAAG;AADR;AADF,OAD2C;AAMjDrD,MAAAA;AANiD,KAAD,KAO5C;AACJ,UAAI,CAACqD,SAAL,EAAgB;AACdT,QAAAA,OAAO,CAACf,OAAR,CAAgByB,IAAhB,CAAqBtD,MAArB;AACD,OAFD,MAEO;AACL4C,QAAAA,OAAO,CAACZ,OAAR,CAAgBsB,IAAhB,CAAqBtD,MAArB;AACD;AACF,KAbD;AAcD;;AAEDsB,EAAAA,YAAY,CAACL,OAAD,EAAU2B,OAAV,EAAmB;AAC7B,UAAME,SAAS,GAAG7B,OAAO,CAACsC,SAAR,CAAkBP,OAAlB,CAA0BC,QAA1B,EAAlB;AACA9D,IAAAA,MAAM,CAAC+D,MAAP,CAAcJ,SAAd,EAAyBU,MAAzB,CAAgC,CAAC;AAC/BnD,MAAAA;AAD+B,KAAD,KAE1B,CAAC,CAACA,IAAI,CAACC,IAAL,CAAUmD,QAFlB,EAE4BN,IAF5B,CAEiC/C,aAFjC,EAEgDgD,OAFhD,CAEwD,CAAC;AACvDpD,MAAAA;AADuD,KAAD,KAElD;AACJ4C,MAAAA,OAAO,CAAChB,MAAR,CAAe0B,IAAf,CAAoBtD,MAApB;AACD,KAND;AAOAb,IAAAA,MAAM,CAAC+D,MAAP,CAAcJ,SAAd,EAAyBU,MAAzB,CAAgC,CAAC;AAC/BnD,MAAAA;AAD+B,KAAD,KAE1B,CAACA,IAAI,CAACC,IAAL,CAAUmD,QAFjB,EAE2BN,IAF3B,CAEgCvD,UAFhC,EAE4CwD,OAF5C,CAEoD,CAAC;AACnDpD,MAAAA;AADmD,KAAD,KAE9C;AACJ4C,MAAAA,OAAO,CAACpB,OAAR,CAAgB8B,IAAhB,CAAqBtD,MAArB;AACD,KAND;AAOD;;AAEDuB,EAAAA,YAAY,CAACN,OAAD,EAAU2B,OAAV,EAAmB;AAC7B,UAAME,SAAS,GAAG7B,OAAO,CAACyC,SAAR,CAAkBV,OAAlB,CAA0BC,QAA1B,EAAlB;AACA9D,IAAAA,MAAM,CAAC+D,MAAP,CAAcJ,SAAd,EAAyBK,IAAzB,CAA8BvD,UAA9B,EAA0CwD,OAA1C,CAAkD,CAAC;AACjDpD,MAAAA;AADiD,KAAD,KAE5C;AACJ4C,MAAAA,OAAO,CAACX,QAAR,CAAiBqB,IAAjB,CAAsBtD,MAAtB;AACD,KAJD;AAKD;;AAEDY,EAAAA,YAAY,GAAG;AACb,WAAO;AACLiB,MAAAA,OAAO,EAAE,EADJ;AAELL,MAAAA,OAAO,EAAE,EAFJ;AAGLW,MAAAA,GAAG,EAAE,EAHA;AAILE,MAAAA,OAAO,EAAE,EAJJ;AAKLJ,MAAAA,QAAQ,EAAE,EALL;AAMLL,MAAAA,MAAM,EAAE,EANH;AAOLI,MAAAA,OAAO,EAAE;AAPJ,KAAP;AASD;;AAtGiB;;AA0GpB,MAAM2B,qBAAqB,GAAG,IAAInD,aAAJ,EAA9B;AACA,IAAIoD,QAAQ,GAAGD,qBAAf;AACAtE,OAAO,CAACE,OAAR,GAAkBqE,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _observable = _interopRequireDefault(require(\"../observable\"));\n\n// Copyright 2017-2020 @polkadot/ui-keyring authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nlet hasCalledInitOptions = false;\n\nconst sortByName = (a, b) => {\n  const valueA = a.option.name;\n  const valueB = b.option.name;\n  return valueA.localeCompare(valueB);\n};\n\nconst sortByCreated = (a, b) => {\n  const valueA = a.json.meta.whenCreated || 0;\n  const valueB = b.json.meta.whenCreated || 0;\n\n  if (valueA < valueB) {\n    return 1;\n  }\n\n  if (valueA > valueB) {\n    return -1;\n  }\n\n  return 0;\n};\n\nclass KeyringOption {\n  constructor() {\n    this.optionsSubject = new _rxjs.BehaviorSubject(this.emptyOptions());\n  }\n\n  createOptionHeader(name) {\n    return {\n      key: `header-${name.toLowerCase()}`,\n      name,\n      value: null\n    };\n  }\n\n  init(keyring) {\n    (0, _util.assert)(!hasCalledInitOptions, 'Unable to initialise options more than once');\n\n    _observable.default.subscribe(() => {\n      const opts = this.emptyOptions();\n      this.addAccounts(keyring, opts);\n      this.addAddresses(keyring, opts);\n      this.addContracts(keyring, opts);\n      opts.address = this.linkItems({\n        Addresses: opts.address,\n        Recent: opts.recent\n      });\n      opts.account = this.linkItems({\n        Accounts: opts.account,\n        Development: opts.testing\n      });\n      opts.contract = this.linkItems({\n        Contracts: opts.contract\n      });\n      opts.all = [].concat(opts.account, opts.address);\n      opts.allPlus = [].concat(opts.account, opts.address, opts.contract);\n      this.optionsSubject.next(opts);\n    });\n\n    hasCalledInitOptions = true;\n  }\n\n  linkItems(items) {\n    return Object.keys(items).reduce((result, header) => {\n      const options = items[header];\n      return result.concat(options.length ? [this.createOptionHeader(header)] : [], options);\n    }, []);\n  }\n\n  addAccounts(keyring, options) {\n    const available = keyring.accounts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      json: {\n        meta: {\n          isTesting = false\n        }\n      },\n      option\n    }) => {\n      if (!isTesting) {\n        options.account.push(option);\n      } else {\n        options.testing.push(option);\n      }\n    });\n  }\n\n  addAddresses(keyring, options) {\n    const available = keyring.addresses.subject.getValue();\n    Object.values(available).filter(({\n      json\n    }) => !!json.meta.isRecent).sort(sortByCreated).forEach(({\n      option\n    }) => {\n      options.recent.push(option);\n    });\n    Object.values(available).filter(({\n      json\n    }) => !json.meta.isRecent).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.address.push(option);\n    });\n  }\n\n  addContracts(keyring, options) {\n    const available = keyring.contracts.subject.getValue();\n    Object.values(available).sort(sortByName).forEach(({\n      option\n    }) => {\n      options.contract.push(option);\n    });\n  }\n\n  emptyOptions() {\n    return {\n      account: [],\n      address: [],\n      all: [],\n      allPlus: [],\n      contract: [],\n      recent: [],\n      testing: []\n    };\n  }\n\n}\n\nconst keyringOptionInstance = new KeyringOption();\nvar _default = keyringOptionInstance;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}