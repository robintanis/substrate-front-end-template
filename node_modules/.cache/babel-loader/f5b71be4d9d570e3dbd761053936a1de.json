{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pbkdf2Encode;\n\nvar _pbkdf = require(\"pbkdf2\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _asU8a = _interopRequireDefault(require(\"../random/asU8a\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction pbkdf2Encode(passphrase, salt = (0, _asU8a.default)(), rounds = 2048) {\n  const u8a = (0, _util.u8aToU8a)(passphrase);\n  const password = (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.pbkdf2)(u8a, salt, rounds) : (0, _util.bufferToU8a)((0, _pbkdf.pbkdf2Sync)((0, _util.u8aToBuffer)(u8a), (0, _util.u8aToBuffer)(salt), rounds, 64));\n  return {\n    password,\n    rounds,\n    salt\n  };\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/pbkdf2/encode.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","pbkdf2Encode","_pbkdf","_util","_wasmCrypto","_asU8a","passphrase","salt","rounds","u8a","u8aToU8a","password","isReady","pbkdf2","bufferToU8a","pbkdf2Sync","u8aToBuffer"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,YAAlB;;AAEA,IAAIC,MAAM,GAAGP,OAAO,CAAC,QAAD,CAApB;;AAEA,IAAIQ,KAAK,GAAGR,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIS,WAAW,GAAGT,OAAO,CAAC,uBAAD,CAAzB;;AAEA,IAAIU,MAAM,GAAGX,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAnC,C,CAEA;AACA;;;AACA,SAASM,YAAT,CAAsBK,UAAtB,EAAkCC,IAAI,GAAG,CAAC,GAAGF,MAAM,CAACL,OAAX,GAAzC,EAAgEQ,MAAM,GAAG,IAAzE,EAA+E;AAC7E,QAAMC,GAAG,GAAG,CAAC,GAAGN,KAAK,CAACO,QAAV,EAAoBJ,UAApB,CAAZ;AACA,QAAMK,QAAQ,GAAG,CAAC,GAAGP,WAAW,CAACQ,OAAhB,MAA6B,CAAC,GAAGR,WAAW,CAACS,MAAhB,EAAwBJ,GAAxB,EAA6BF,IAA7B,EAAmCC,MAAnC,CAA7B,GAA0E,CAAC,GAAGL,KAAK,CAACW,WAAV,EAAuB,CAAC,GAAGZ,MAAM,CAACa,UAAX,EAAuB,CAAC,GAAGZ,KAAK,CAACa,WAAV,EAAuBP,GAAvB,CAAvB,EAAoD,CAAC,GAAGN,KAAK,CAACa,WAAV,EAAuBT,IAAvB,CAApD,EAAkFC,MAAlF,EAA0F,EAA1F,CAAvB,CAA3F;AACA,SAAO;AACLG,IAAAA,QADK;AAELH,IAAAA,MAFK;AAGLD,IAAAA;AAHK,GAAP;AAKD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = pbkdf2Encode;\n\nvar _pbkdf = require(\"pbkdf2\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\nvar _asU8a = _interopRequireDefault(require(\"../random/asU8a\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction pbkdf2Encode(passphrase, salt = (0, _asU8a.default)(), rounds = 2048) {\n  const u8a = (0, _util.u8aToU8a)(passphrase);\n  const password = (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.pbkdf2)(u8a, salt, rounds) : (0, _util.bufferToU8a)((0, _pbkdf.pbkdf2Sync)((0, _util.u8aToBuffer)(u8a), (0, _util.u8aToBuffer)(salt), rounds, 64));\n  return {\n    password,\n    rounds,\n    salt\n  };\n}"]},"metadata":{},"sourceType":"script"}