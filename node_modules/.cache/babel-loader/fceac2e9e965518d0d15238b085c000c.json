{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexToId = indexToId;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _AccountIndex = require(\"@polkadot/types/generic/AccountIndex\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction queryEnumSet(api, _accountIndex) {\n  const accountIndex = _accountIndex instanceof api.registry.createClass('AccountIndex') ? _accountIndex : api.registry.createType('AccountIndex', _accountIndex);\n  return api.query.indices.enumSet(accountIndex.div(_AccountIndex.ENUMSET_SIZE)).pipe((0, _operators.startWith)([]), (0, _operators.map)(accounts => (accounts || [])[accountIndex.mod(_AccountIndex.ENUMSET_SIZE).toNumber()]));\n} // current\n\n\nfunction query(api, accountIndex) {\n  return api.query.indices.accounts(accountIndex).pipe((0, _operators.map)(optResult => optResult.unwrapOr([])[0]));\n}\n/**\n * @name indexToId\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\n * @returns Returns the corresponding AccountId.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\n * });\n * ```\n */\n\n\nfunction indexToId(instanceId, api) {\n  return (0, _util2.memo)(instanceId, accountIndex => api.query.indices ? (0, _util.isFunction)(api.query.indices.accounts) ? query(api, accountIndex) : queryEnumSet(api, accountIndex) : (0, _rxjs.of)(undefined));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/accounts/indexToId.js"],"names":["Object","defineProperty","exports","value","indexToId","_rxjs","require","_operators","_AccountIndex","_util","_util2","queryEnumSet","api","_accountIndex","accountIndex","registry","createClass","createType","query","indices","enumSet","div","ENUMSET_SIZE","pipe","startWith","map","accounts","mod","toNumber","optResult","unwrapOr","instanceId","memo","isFunction","of","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,SAAR,GAAoBA,SAApB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,aAAa,GAAGF,OAAO,CAAC,sCAAD,CAA3B;;AAEA,IAAIG,KAAK,GAAGH,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAII,MAAM,GAAGJ,OAAO,CAAC,SAAD,CAApB,C,CAEA;AACA;;;AACA,SAASK,YAAT,CAAsBC,GAAtB,EAA2BC,aAA3B,EAA0C;AACxC,QAAMC,YAAY,GAAGD,aAAa,YAAYD,GAAG,CAACG,QAAJ,CAAaC,WAAb,CAAyB,cAAzB,CAAzB,GAAoEH,aAApE,GAAoFD,GAAG,CAACG,QAAJ,CAAaE,UAAb,CAAwB,cAAxB,EAAwCJ,aAAxC,CAAzG;AACA,SAAOD,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAkBC,OAAlB,CAA0BN,YAAY,CAACO,GAAb,CAAiBb,aAAa,CAACc,YAA/B,CAA1B,EAAwEC,IAAxE,CAA6E,CAAC,GAAGhB,UAAU,CAACiB,SAAf,EAA0B,EAA1B,CAA7E,EAA4G,CAAC,GAAGjB,UAAU,CAACkB,GAAf,EAAoBC,QAAQ,IAAI,CAACA,QAAQ,IAAI,EAAb,EAAiBZ,YAAY,CAACa,GAAb,CAAiBnB,aAAa,CAACc,YAA/B,EAA6CM,QAA7C,EAAjB,CAAhC,CAA5G,CAAP;AACD,C,CAAC;;;AAGF,SAASV,KAAT,CAAeN,GAAf,EAAoBE,YAApB,EAAkC;AAChC,SAAOF,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAkBO,QAAlB,CAA2BZ,YAA3B,EAAyCS,IAAzC,CAA8C,CAAC,GAAGhB,UAAU,CAACkB,GAAf,EAAoBI,SAAS,IAAIA,SAAS,CAACC,QAAV,CAAmB,EAAnB,EAAuB,CAAvB,CAAjC,CAA9C,CAAP;AACD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAAS1B,SAAT,CAAmB2B,UAAnB,EAA+BnB,GAA/B,EAAoC;AAClC,SAAO,CAAC,GAAGF,MAAM,CAACsB,IAAX,EAAiBD,UAAjB,EAA6BjB,YAAY,IAAIF,GAAG,CAACM,KAAJ,CAAUC,OAAV,GAAoB,CAAC,GAAGV,KAAK,CAACwB,UAAV,EAAsBrB,GAAG,CAACM,KAAJ,CAAUC,OAAV,CAAkBO,QAAxC,IAAoDR,KAAK,CAACN,GAAD,EAAME,YAAN,CAAzD,GAA+EH,YAAY,CAACC,GAAD,EAAME,YAAN,CAA/G,GAAqI,CAAC,GAAGT,KAAK,CAAC6B,EAAV,EAAcC,SAAd,CAAlL,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.indexToId = indexToId;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _AccountIndex = require(\"@polkadot/types/generic/AccountIndex\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _util2 = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction queryEnumSet(api, _accountIndex) {\n  const accountIndex = _accountIndex instanceof api.registry.createClass('AccountIndex') ? _accountIndex : api.registry.createType('AccountIndex', _accountIndex);\n  return api.query.indices.enumSet(accountIndex.div(_AccountIndex.ENUMSET_SIZE)).pipe((0, _operators.startWith)([]), (0, _operators.map)(accounts => (accounts || [])[accountIndex.mod(_AccountIndex.ENUMSET_SIZE).toNumber()]));\n} // current\n\n\nfunction query(api, accountIndex) {\n  return api.query.indices.accounts(accountIndex).pipe((0, _operators.map)(optResult => optResult.unwrapOr([])[0]));\n}\n/**\n * @name indexToId\n * @param {( AccountIndex | string )} accountIndex - An accounts index in different formats.\n * @returns Returns the corresponding AccountId.\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.accounts.indexToId('F7Hs', (accountId) => {\n *   console.log(`The AccountId of F7Hs is ${accountId}`);\n * });\n * ```\n */\n\n\nfunction indexToId(instanceId, api) {\n  return (0, _util2.memo)(instanceId, accountIndex => api.query.indices ? (0, _util.isFunction)(api.query.indices.accounts) ? query(api, accountIndex) : queryEnumSet(api, accountIndex) : (0, _rxjs.of)(undefined));\n}"]},"metadata":{},"sourceType":"script"}