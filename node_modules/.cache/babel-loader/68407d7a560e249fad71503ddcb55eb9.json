{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatElapsed;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _toBn = _interopRequireDefault(require(\"../is/toBn\")); // Copyright 2017-2020 @polkadot/ui-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction getValue(value) {\n  if (value) {\n    if ((0, _toBn.default)(value)) {\n      return getValue(value.toBn());\n    } else if (value instanceof Date) {\n      return getValue(value.getTime());\n    } else if (value instanceof _bn.default) {\n      return getValue(value.toNumber());\n    }\n  }\n\n  return value || 0;\n}\n\nfunction formatElapsed(now, value) {\n  const tsNow = now && now.getTime() || 0;\n  const tsValue = getValue(value);\n  let display = '0.0s';\n\n  if (tsNow && tsValue) {\n    const elapsed = Math.max(Math.abs(tsNow - tsValue), 0) / 1000;\n\n    if (elapsed < 15) {\n      display = `${elapsed.toFixed(1)}s`;\n    } else if (elapsed < 60) {\n      display = `${elapsed | 0}s`;\n    } else if (elapsed < 3600) {\n      display = `${elapsed / 60 | 0}m`;\n    } else {\n      display = `${elapsed / 3600 | 0}h`;\n    }\n  }\n\n  return display;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/format/formatElapsed.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","formatElapsed","_bn","_toBn","getValue","toBn","Date","getTime","toNumber","now","tsNow","tsValue","display","elapsed","Math","max","abs","toFixed"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,GAAG,GAAGR,sBAAsB,CAACC,OAAO,CAAC,OAAD,CAAR,CAAhC;;AAEA,IAAIQ,KAAK,GAAGT,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAlC,C,CAEA;AACA;;;AACA,SAASS,QAAT,CAAkBL,KAAlB,EAAyB;AACvB,MAAIA,KAAJ,EAAW;AACT,QAAI,CAAC,GAAGI,KAAK,CAACH,OAAV,EAAmBD,KAAnB,CAAJ,EAA+B;AAC7B,aAAOK,QAAQ,CAACL,KAAK,CAACM,IAAN,EAAD,CAAf;AACD,KAFD,MAEO,IAAIN,KAAK,YAAYO,IAArB,EAA2B;AAChC,aAAOF,QAAQ,CAACL,KAAK,CAACQ,OAAN,EAAD,CAAf;AACD,KAFM,MAEA,IAAIR,KAAK,YAAYG,GAAG,CAACF,OAAzB,EAAkC;AACvC,aAAOI,QAAQ,CAACL,KAAK,CAACS,QAAN,EAAD,CAAf;AACD;AACF;;AAED,SAAOT,KAAK,IAAI,CAAhB;AACD;;AAED,SAASE,aAAT,CAAuBQ,GAAvB,EAA4BV,KAA5B,EAAmC;AACjC,QAAMW,KAAK,GAAGD,GAAG,IAAIA,GAAG,CAACF,OAAJ,EAAP,IAAwB,CAAtC;AACA,QAAMI,OAAO,GAAGP,QAAQ,CAACL,KAAD,CAAxB;AACA,MAAIa,OAAO,GAAG,MAAd;;AAEA,MAAIF,KAAK,IAAIC,OAAb,EAAsB;AACpB,UAAME,OAAO,GAAGC,IAAI,CAACC,GAAL,CAASD,IAAI,CAACE,GAAL,CAASN,KAAK,GAAGC,OAAjB,CAAT,EAAoC,CAApC,IAAyC,IAAzD;;AAEA,QAAIE,OAAO,GAAG,EAAd,EAAkB;AAChBD,MAAAA,OAAO,GAAI,GAAEC,OAAO,CAACI,OAAR,CAAgB,CAAhB,CAAmB,GAAhC;AACD,KAFD,MAEO,IAAIJ,OAAO,GAAG,EAAd,EAAkB;AACvBD,MAAAA,OAAO,GAAI,GAAEC,OAAO,GAAG,CAAE,GAAzB;AACD,KAFM,MAEA,IAAIA,OAAO,GAAG,IAAd,EAAoB;AACzBD,MAAAA,OAAO,GAAI,GAAEC,OAAO,GAAG,EAAV,GAAe,CAAE,GAA9B;AACD,KAFM,MAEA;AACLD,MAAAA,OAAO,GAAI,GAAEC,OAAO,GAAG,IAAV,GAAiB,CAAE,GAAhC;AACD;AACF;;AAED,SAAOD,OAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = formatElapsed;\n\nvar _bn = _interopRequireDefault(require(\"bn.js\"));\n\nvar _toBn = _interopRequireDefault(require(\"../is/toBn\"));\n\n// Copyright 2017-2020 @polkadot/ui-util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction getValue(value) {\n  if (value) {\n    if ((0, _toBn.default)(value)) {\n      return getValue(value.toBn());\n    } else if (value instanceof Date) {\n      return getValue(value.getTime());\n    } else if (value instanceof _bn.default) {\n      return getValue(value.toNumber());\n    }\n  }\n\n  return value || 0;\n}\n\nfunction formatElapsed(now, value) {\n  const tsNow = now && now.getTime() || 0;\n  const tsValue = getValue(value);\n  let display = '0.0s';\n\n  if (tsNow && tsValue) {\n    const elapsed = Math.max(Math.abs(tsNow - tsValue), 0) / 1000;\n\n    if (elapsed < 15) {\n      display = `${elapsed.toFixed(1)}s`;\n    } else if (elapsed < 60) {\n      display = `${elapsed | 0}s`;\n    } else if (elapsed < 3600) {\n      display = `${elapsed / 60 | 0}m`;\n    } else {\n      display = `${elapsed / 3600 | 0}h`;\n    }\n  }\n\n  return display;\n}"]},"metadata":{},"sourceType":"script"}