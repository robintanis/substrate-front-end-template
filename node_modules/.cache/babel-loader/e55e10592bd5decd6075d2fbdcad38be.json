{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.waitingInfo = waitingInfo;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction waitingInfo(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (0, _rxjs.combineLatest)([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe((0, _operators.switchMap)(([{\n    nextElected\n  }, stashes]) => {\n    const elected = nextElected.map(a => a.toString());\n    const waiting = stashes.filter(v => !elected.includes(v.toString()));\n    return api.derive.staking.queryMulti(waiting).pipe((0, _operators.map)(info => ({\n      info,\n      waiting\n    })));\n  })));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/staking/waitingInfo.js"],"names":["Object","defineProperty","exports","value","waitingInfo","_rxjs","require","_operators","_util","instanceId","api","memo","combineLatest","derive","staking","validators","stashes","pipe","switchMap","nextElected","elected","map","a","toString","waiting","filter","v","includes","queryMulti","info"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,WAAR,GAAsBA,WAAtB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASF,WAAT,CAAqBK,UAArB,EAAiCC,GAAjC,EAAsC;AACpC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,MAAM,CAAC,GAAGJ,KAAK,CAACO,aAAV,EAAyB,CAACF,GAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmBC,UAAnB,EAAD,EAAkCL,GAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmBE,OAAnB,EAAlC,CAAzB,EAA0FC,IAA1F,CAA+F,CAAC,GAAGV,UAAU,CAACW,SAAf,EAA0B,CAAC,CAAC;AAClKC,IAAAA;AADkK,GAAD,EAEhKH,OAFgK,CAAD,KAElJ;AACd,UAAMI,OAAO,GAAGD,WAAW,CAACE,GAAZ,CAAgBC,CAAC,IAAIA,CAAC,CAACC,QAAF,EAArB,CAAhB;AACA,UAAMC,OAAO,GAAGR,OAAO,CAACS,MAAR,CAAeC,CAAC,IAAI,CAACN,OAAO,CAACO,QAAR,CAAiBD,CAAC,CAACH,QAAF,EAAjB,CAArB,CAAhB;AACA,WAAOb,GAAG,CAACG,MAAJ,CAAWC,OAAX,CAAmBc,UAAnB,CAA8BJ,OAA9B,EAAuCP,IAAvC,CAA4C,CAAC,GAAGV,UAAU,CAACc,GAAf,EAAoBQ,IAAI,KAAK;AAC9EA,MAAAA,IAD8E;AAE9EL,MAAAA;AAF8E,KAAL,CAAxB,CAA5C,CAAP;AAID,GATuI,CAA/F,CAAlC,CAAP;AAUD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.waitingInfo = waitingInfo;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction waitingInfo(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (0, _rxjs.combineLatest)([api.derive.staking.validators(), api.derive.staking.stashes()]).pipe((0, _operators.switchMap)(([{\n    nextElected\n  }, stashes]) => {\n    const elected = nextElected.map(a => a.toString());\n    const waiting = stashes.filter(v => !elected.includes(v.toString()));\n    return api.derive.staking.queryMulti(waiting).pipe((0, _operators.map)(info => ({\n      info,\n      waiting\n    })));\n  })));\n}"]},"metadata":{},"sourceType":"script"}