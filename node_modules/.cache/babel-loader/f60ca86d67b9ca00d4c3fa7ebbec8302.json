{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nconst SLOT_RANGE_COUNT = 10;\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    validationFunction: 'ValidationCode',\n    initialHeadState: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Vec<u8>',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread({}, proposeTypes), {}, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuctionIndex: 'u32',\n    Bidder: {\n      _enum: {\n        New: 'NewBidder',\n        Existing: 'ParaId'\n      }\n    },\n    CandidateCommitments: {\n      fees: 'Balance',\n      upwardMessages: 'Vec<UpwardMessage>',\n      erasureRoot: 'Hash',\n      newValidationCode: 'Option<ValidationCode>',\n      processedDownwardMessages: 'u32'\n    },\n    CandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      head_data: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      globalValidation: 'GlobalValidationSchedule',\n      localValidation: 'LocalValidationData',\n      commitments: 'CandidateCommitments'\n    },\n    CollatorId: '[u8; 32]',\n    CollatorSignature: 'Signature',\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: {\n      _enum: {\n        TransferInto: '(AccountId, Balance, Remark)',\n        Opaque: 'Vec<u8>'\n      }\n    },\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    IncomingParachain: {\n      _enum: {\n        Unset: 'NewBidder',\n        Fixed: 'IncomingParachainFixed',\n        Deploy: 'IncomingParachainDeploy'\n      }\n    },\n    IncomingParachainFixed: {\n      codeHash: 'Hash',\n      codeSize: 'u32',\n      initialHeadData: 'HeadData'\n    },\n    IncomingParachainDeploy: {\n      code: 'ValidationCode',\n      initialHeadData: 'HeadData'\n    },\n    LeasePeriod: 'BlockNumber',\n    LeasePeriodOf: 'LeasePeriod',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    NewBidder: {\n      who: 'AccountId',\n      sub: 'SubId'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      scheduling: 'Scheduling'\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<BlockNumber>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    RelayChainBlockNumber: 'BlockNumber',\n    Remark: '[u8; 32]',\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    SlotRange: {\n      _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    SubId: 'u32',\n    UpwardMessage: {\n      origin: 'ParachainDispatchOrigin',\n      data: 'Vec<u8>'\n    },\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    WinningData: `[WinningDataEntry; ${SLOT_RANGE_COUNT}]`,\n    WinningDataEntry: 'Option<Bidder>'\n  })\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/interfaces/parachains/definitions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","SLOT_RANGE_COUNT","proposeTypes","ParachainProposal","proposer","validationFunction","initialHeadState","validators","name","balance","RegisteredParachainInfo","_default","rpc","types","AbridgedCandidateReceipt","parachainIndex","relayParent","headData","collator","signature","povBlockHash","commitments","AttestedCandidate","candidate","validityVotes","validatorIndices","AuctionIndex","Bidder","_enum","New","Existing","CandidateCommitments","fees","upwardMessages","erasureRoot","newValidationCode","processedDownwardMessages","CandidateReceipt","head_data","globalValidation","localValidation","CollatorId","CollatorSignature","DoubleVoteReport","identity","first","second","proof","signingContext","DownwardMessage","TransferInto","Opaque","GlobalValidationSchedule","maxCodeSize","maxHeadDataSize","blockNumber","HeadData","IncomingParachain","Unset","Fixed","Deploy","IncomingParachainFixed","codeHash","codeSize","initialHeadData","IncomingParachainDeploy","code","LeasePeriod","LeasePeriodOf","LocalValidationData","parentHead","codeUpgradeAllowed","NewBidder","who","sub","ParachainDispatchOrigin","ParaId","ParaInfo","scheduling","ParaPastCodeMeta","upgradeTimes","lastPruned","ParaScheduling","RelayChainBlockNumber","Remark","Retriable","Never","WithRetries","Scheduling","SigningContext","sessionIndex","parentHash","SlotRange","Statement","Candidate","Valid","Invalid","SubId","UpwardMessage","origin","data","ValidationFunctionParams","relayChainHeight","ValidationCode","ValidatorSignature","ValidityAttestation","Implicit","Explicit","WinningData","WinningDataEntry"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst SLOT_RANGE_COUNT = 10;\nconst proposeTypes = {\n  ParachainProposal: {\n    proposer: 'AccountId',\n    validationFunction: 'ValidationCode',\n    initialHeadState: 'HeadData',\n    validators: 'Vec<ValidatorId>',\n    name: 'Vec<u8>',\n    balance: 'Balance'\n  },\n  RegisteredParachainInfo: {\n    validators: 'Vec<ValidatorId>',\n    proposer: 'AccountId'\n  }\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread({}, proposeTypes), {}, {\n    AbridgedCandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      headData: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      commitments: 'CandidateCommitments'\n    },\n    AttestedCandidate: {\n      candidate: 'AbridgedCandidateReceipt',\n      validityVotes: 'Vec<ValidityAttestation>',\n      validatorIndices: 'BitVec'\n    },\n    AuctionIndex: 'u32',\n    Bidder: {\n      _enum: {\n        New: 'NewBidder',\n        Existing: 'ParaId'\n      }\n    },\n    CandidateCommitments: {\n      fees: 'Balance',\n      upwardMessages: 'Vec<UpwardMessage>',\n      erasureRoot: 'Hash',\n      newValidationCode: 'Option<ValidationCode>',\n      processedDownwardMessages: 'u32'\n    },\n    CandidateReceipt: {\n      parachainIndex: 'ParaId',\n      relayParent: 'Hash',\n      head_data: 'HeadData',\n      collator: 'CollatorId',\n      signature: 'CollatorSignature',\n      povBlockHash: 'Hash',\n      globalValidation: 'GlobalValidationSchedule',\n      localValidation: 'LocalValidationData',\n      commitments: 'CandidateCommitments'\n    },\n    CollatorId: '[u8; 32]',\n    CollatorSignature: 'Signature',\n    DoubleVoteReport: {\n      identity: 'ValidatorId',\n      first: '(Statement, ValidatorSignature)',\n      second: '(Statement, ValidatorSignature)',\n      proof: 'MembershipProof',\n      signingContext: 'SigningContext'\n    },\n    DownwardMessage: {\n      _enum: {\n        TransferInto: '(AccountId, Balance, Remark)',\n        Opaque: 'Vec<u8>'\n      }\n    },\n    GlobalValidationSchedule: {\n      maxCodeSize: 'u32',\n      maxHeadDataSize: 'u32',\n      blockNumber: 'BlockNumber'\n    },\n    HeadData: 'Bytes',\n    IncomingParachain: {\n      _enum: {\n        Unset: 'NewBidder',\n        Fixed: 'IncomingParachainFixed',\n        Deploy: 'IncomingParachainDeploy'\n      }\n    },\n    IncomingParachainFixed: {\n      codeHash: 'Hash',\n      codeSize: 'u32',\n      initialHeadData: 'HeadData'\n    },\n    IncomingParachainDeploy: {\n      code: 'ValidationCode',\n      initialHeadData: 'HeadData'\n    },\n    LeasePeriod: 'BlockNumber',\n    LeasePeriodOf: 'LeasePeriod',\n    LocalValidationData: {\n      parentHead: 'HeadData',\n      balance: 'Balance',\n      codeUpgradeAllowed: 'Option<BlockNumber>'\n    },\n    NewBidder: {\n      who: 'AccountId',\n      sub: 'SubId'\n    },\n    ParachainDispatchOrigin: {\n      _enum: ['Signed', 'Parachain', 'Root']\n    },\n    ParaId: 'u32',\n    ParaInfo: {\n      scheduling: 'Scheduling'\n    },\n    ParaPastCodeMeta: {\n      upgradeTimes: 'Vec<BlockNumber>',\n      lastPruned: 'Option<BlockNumber>'\n    },\n    ParaScheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    RelayChainBlockNumber: 'BlockNumber',\n    Remark: '[u8; 32]',\n    Retriable: {\n      _enum: {\n        Never: 'Null',\n        WithRetries: 'u32'\n      }\n    },\n    Scheduling: {\n      _enum: ['Always', 'Dynamic']\n    },\n    SigningContext: {\n      sessionIndex: 'SessionIndex',\n      parentHash: 'Hash'\n    },\n    SlotRange: {\n      _enum: ['ZeroZero', 'ZeroOne', 'ZeroTwo', 'ZeroThree', 'OneOne', 'OneTwo', 'OneThree', 'TwoTwo', 'TwoThree', 'ThreeThree']\n    },\n    Statement: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Candidate: 'Hash',\n        Valid: 'Hash',\n        Invalid: 'Hash'\n      }\n    },\n    SubId: 'u32',\n    UpwardMessage: {\n      origin: 'ParachainDispatchOrigin',\n      data: 'Vec<u8>'\n    },\n    ValidationFunctionParams: {\n      maxCodeSize: 'u32',\n      relayChainHeight: 'RelayChainBlockNumber',\n      codeUpgradeAllowed: 'Option<RelayChainBlockNumber>'\n    },\n    ValidationCode: 'Bytes',\n    ValidatorSignature: 'Signature',\n    ValidityAttestation: {\n      _enum: {\n        Never: 'Null',\n        // starts at 1\n        Implicit: 'ValidatorSignature',\n        Explicit: 'ValidatorSignature'\n      }\n    },\n    WinningData: `[WinningDataEntry; ${SLOT_RANGE_COUNT}]`,\n    WinningDataEntry: 'Option<Bidder>'\n  })\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}