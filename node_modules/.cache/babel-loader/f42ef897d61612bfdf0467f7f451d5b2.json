{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.referendumsActive = referendumsActive;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction referendumsActive(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0, _operators.switchMap)(ids => ids.length ? api.derive.democracy.referendumsInfo(ids) : (0, _rxjs.of)([]))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/democracy/referendumsActive.js"],"names":["Object","defineProperty","exports","value","referendumsActive","_rxjs","require","_operators","_util","instanceId","api","memo","derive","democracy","referendumIds","pipe","switchMap","ids","length","referendumsInfo","of"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,iBAAR,GAA4BA,iBAA5B;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASF,iBAAT,CAA2BK,UAA3B,EAAuCC,GAAvC,EAA4C;AAC1C,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,MAAMC,GAAG,CAACE,MAAJ,CAAWC,SAAX,CAAqBC,aAArB,GAAqCC,IAArC,CAA0C,CAAC,GAAGR,UAAU,CAACS,SAAf,EAA0BC,GAAG,IAAIA,GAAG,CAACC,MAAJ,GAAaR,GAAG,CAACE,MAAJ,CAAWC,SAAX,CAAqBM,eAArB,CAAqCF,GAArC,CAAb,GAAyD,CAAC,GAAGZ,KAAK,CAACe,EAAV,EAAc,EAAd,CAA1F,CAA1C,CAAlC,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.referendumsActive = referendumsActive;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction referendumsActive(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => api.derive.democracy.referendumIds().pipe((0, _operators.switchMap)(ids => ids.length ? api.derive.democracy.referendumsInfo(ids) : (0, _rxjs.of)([]))));\n}"]},"metadata":{},"sourceType":"script"}