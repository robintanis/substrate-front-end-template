{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = check;\n\nvar _decode = _interopRequireDefault(require(\"../base58/decode\"));\n\nvar _checkChecksum = _interopRequireDefault(require(\"./checkChecksum\"));\n\nvar _defaults = _interopRequireDefault(require(\"./defaults\")); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\n\n\nfunction check(address, prefix) {\n  let decoded;\n\n  try {\n    decoded = (0, _decode.default)(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n\n  if (decoded[0] !== prefix) {\n    return [false, `Prefix mismatch, expected ${prefix}, found ${decoded[0]}`];\n  } else if (!_defaults.default.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n\n  const [isValid] = (0, _checkChecksum.default)(decoded);\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/address/check.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","check","_decode","_checkChecksum","_defaults","address","prefix","decoded","error","message","allowedEncodedLengths","includes","length","isValid"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAApC;;AAEA,IAAIQ,cAAc,GAAGT,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,IAAIS,SAAS,GAAGV,sBAAsB,CAACC,OAAO,CAAC,YAAD,CAAR,CAAtC,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASM,KAAT,CAAeI,OAAf,EAAwBC,MAAxB,EAAgC;AAC9B,MAAIC,OAAJ;;AAEA,MAAI;AACFA,IAAAA,OAAO,GAAG,CAAC,GAAGL,OAAO,CAACF,OAAZ,EAAqBK,OAArB,CAAV;AACD,GAFD,CAEE,OAAOG,KAAP,EAAc;AACd,WAAO,CAAC,KAAD,EAAQA,KAAK,CAACC,OAAd,CAAP;AACD;;AAED,MAAIF,OAAO,CAAC,CAAD,CAAP,KAAeD,MAAnB,EAA2B;AACzB,WAAO,CAAC,KAAD,EAAS,6BAA4BA,MAAO,WAAUC,OAAO,CAAC,CAAD,CAAI,EAAjE,CAAP;AACD,GAFD,MAEO,IAAI,CAACH,SAAS,CAACJ,OAAV,CAAkBU,qBAAlB,CAAwCC,QAAxC,CAAiDJ,OAAO,CAACK,MAAzD,CAAL,EAAuE;AAC5E,WAAO,CAAC,KAAD,EAAQ,gCAAR,CAAP;AACD;;AAED,QAAM,CAACC,OAAD,IAAY,CAAC,GAAGV,cAAc,CAACH,OAAnB,EAA4BO,OAA5B,CAAlB;AACA,SAAO,CAACM,OAAD,EAAUA,OAAO,GAAG,IAAH,GAAU,kCAA3B,CAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = check;\n\nvar _decode = _interopRequireDefault(require(\"../base58/decode\"));\n\nvar _checkChecksum = _interopRequireDefault(require(\"./checkChecksum\"));\n\nvar _defaults = _interopRequireDefault(require(\"./defaults\"));\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name checkAddress\n * @summary Validates an ss58 address.\n * @description\n * From the provided input, validate that the address is a valid input.\n */\nfunction check(address, prefix) {\n  let decoded;\n\n  try {\n    decoded = (0, _decode.default)(address);\n  } catch (error) {\n    return [false, error.message];\n  }\n\n  if (decoded[0] !== prefix) {\n    return [false, `Prefix mismatch, expected ${prefix}, found ${decoded[0]}`];\n  } else if (!_defaults.default.allowedEncodedLengths.includes(decoded.length)) {\n    return [false, 'Invalid decoded address length'];\n  }\n\n  const [isValid] = (0, _checkChecksum.default)(decoded);\n  return [isValid, isValid ? null : 'Invalid decoded address checksum'];\n}"]},"metadata":{},"sourceType":"script"}