{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.votingBalances = votingBalances;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction votingBalances(instanceId, api) {\n  return (0, _util.memo)(instanceId, addresses => !addresses || !addresses.length ? (0, _rxjs.of)([]) : (0, _rxjs.combineLatest)(addresses.map(accountId => api.derive.balances.account(accountId))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/balances/votingBalances.js"],"names":["Object","defineProperty","exports","value","votingBalances","_rxjs","require","_util","instanceId","api","memo","addresses","length","of","combineLatest","map","accountId","derive","balances","account"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,cAAR,GAAyBA,cAAzB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;;AACA,SAASF,cAAT,CAAwBI,UAAxB,EAAoCC,GAApC,EAAyC;AACvC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4BG,SAAS,IAAI,CAACA,SAAD,IAAc,CAACA,SAAS,CAACC,MAAzB,GAAkC,CAAC,GAAGP,KAAK,CAACQ,EAAV,EAAc,EAAd,CAAlC,GAAsD,CAAC,GAAGR,KAAK,CAACS,aAAV,EAAyBH,SAAS,CAACI,GAAV,CAAcC,SAAS,IAAIP,GAAG,CAACQ,MAAJ,CAAWC,QAAX,CAAoBC,OAApB,CAA4BH,SAA5B,CAA3B,CAAzB,CAA/F,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.votingBalances = votingBalances;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction votingBalances(instanceId, api) {\n  return (0, _util.memo)(instanceId, addresses => !addresses || !addresses.length ? (0, _rxjs.of)([]) : (0, _rxjs.combineLatest)(addresses.map(accountId => api.derive.balances.account(accountId))));\n}"]},"metadata":{},"sourceType":"script"}