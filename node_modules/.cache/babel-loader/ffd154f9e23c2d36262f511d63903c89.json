{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAuthor = extractAuthor; // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\nfunction extractAuthor(digest, sessionValidators = []) {\n  const [pitem] = digest.logs.filter(({\n    type\n  }) => type === 'PreRuntime'); // extract from the substrate 2.0 PreRuntime digest\n\n  if (pitem) {\n    const [engine, data] = pitem.asPreRuntime;\n    return engine.extractAuthor(data, sessionValidators);\n  } else {\n    const [citem] = digest.logs.filter(({\n      type\n    }) => type === 'Consensus'); // extract author from the consensus (substrate 1.0, digest)\n\n    if (citem) {\n      const [engine, data] = citem.asConsensus;\n      return engine.extractAuthor(data, sessionValidators);\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/type/util.js"],"names":["Object","defineProperty","exports","value","extractAuthor","digest","sessionValidators","pitem","logs","filter","type","engine","data","asPreRuntime","citem","asConsensus","undefined"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB,C,CAEA;AACA;;AACA,SAASA,aAAT,CAAuBC,MAAvB,EAA+BC,iBAAiB,GAAG,EAAnD,EAAuD;AACrD,QAAM,CAACC,KAAD,IAAUF,MAAM,CAACG,IAAP,CAAYC,MAAZ,CAAmB,CAAC;AAClCC,IAAAA;AADkC,GAAD,KAE7BA,IAAI,KAAK,YAFC,CAAhB,CADqD,CAGvB;;AAE9B,MAAIH,KAAJ,EAAW;AACT,UAAM,CAACI,MAAD,EAASC,IAAT,IAAiBL,KAAK,CAACM,YAA7B;AACA,WAAOF,MAAM,CAACP,aAAP,CAAqBQ,IAArB,EAA2BN,iBAA3B,CAAP;AACD,GAHD,MAGO;AACL,UAAM,CAACQ,KAAD,IAAUT,MAAM,CAACG,IAAP,CAAYC,MAAZ,CAAmB,CAAC;AAClCC,MAAAA;AADkC,KAAD,KAE7BA,IAAI,KAAK,WAFC,CAAhB,CADK,CAGwB;;AAE7B,QAAII,KAAJ,EAAW;AACT,YAAM,CAACH,MAAD,EAASC,IAAT,IAAiBE,KAAK,CAACC,WAA7B;AACA,aAAOJ,MAAM,CAACP,aAAP,CAAqBQ,IAArB,EAA2BN,iBAA3B,CAAP;AACD;AACF;;AAED,SAAOU,SAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.extractAuthor = extractAuthor;\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction extractAuthor(digest, sessionValidators = []) {\n  const [pitem] = digest.logs.filter(({\n    type\n  }) => type === 'PreRuntime'); // extract from the substrate 2.0 PreRuntime digest\n\n  if (pitem) {\n    const [engine, data] = pitem.asPreRuntime;\n    return engine.extractAuthor(data, sessionValidators);\n  } else {\n    const [citem] = digest.logs.filter(({\n      type\n    }) => type === 'Consensus'); // extract author from the consensus (substrate 1.0, digest)\n\n    if (citem) {\n      const [engine, data] = citem.asConsensus;\n      return engine.extractAuthor(data, sessionValidators);\n    }\n  }\n\n  return undefined;\n}"]},"metadata":{},"sourceType":"script"}