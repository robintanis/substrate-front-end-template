{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHex;\n\nvar _string = _interopRequireDefault(require(\"./string\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nconst HEX_REGEX = /^0x[a-fA-F0-9]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction isHex(value, bitLength = -1, ignoreLength = false) {\n  const isValidHex = value === '0x' || (0, _string.default)(value) && HEX_REGEX.test(value.toString());\n\n  if (isValidHex && bitLength !== -1) {\n    return value.length === 2 + Math.ceil(bitLength / 4);\n  }\n\n  return isValidHex && (ignoreLength || value.length % 2 === 0);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/is/hex.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","isHex","_string","HEX_REGEX","bitLength","ignoreLength","isValidHex","test","toString","length","Math","ceil"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC,C,CAEA;AACA;;;AACA,MAAMQ,SAAS,GAAG,kBAAlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASF,KAAT,CAAeF,KAAf,EAAsBK,SAAS,GAAG,CAAC,CAAnC,EAAsCC,YAAY,GAAG,KAArD,EAA4D;AAC1D,QAAMC,UAAU,GAAGP,KAAK,KAAK,IAAV,IAAkB,CAAC,GAAGG,OAAO,CAACF,OAAZ,EAAqBD,KAArB,KAA+BI,SAAS,CAACI,IAAV,CAAeR,KAAK,CAACS,QAAN,EAAf,CAApE;;AAEA,MAAIF,UAAU,IAAIF,SAAS,KAAK,CAAC,CAAjC,EAAoC;AAClC,WAAOL,KAAK,CAACU,MAAN,KAAiB,IAAIC,IAAI,CAACC,IAAL,CAAUP,SAAS,GAAG,CAAtB,CAA5B;AACD;;AAED,SAAOE,UAAU,KAAKD,YAAY,IAAIN,KAAK,CAACU,MAAN,GAAe,CAAf,KAAqB,CAA1C,CAAjB;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isHex;\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nconst HEX_REGEX = /^0x[a-fA-F0-9]+$/;\n/**\n * @name isHex\n * @summary Tests for a hex string.\n * @description\n * Checks to see if the input value is a `0x` prefixed hex string. Optionally (`bitLength` !== -1) checks to see if the bitLength is correct.\n * @example\n * <BR>\n *\n * ```javascript\n * import { isHex } from '@polkadot/util';\n *\n * isHex('0x1234'); // => true\n * isHex('0x1234', 8); // => false\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nfunction isHex(value, bitLength = -1, ignoreLength = false) {\n  const isValidHex = value === '0x' || (0, _string.default)(value) && HEX_REGEX.test(value.toString());\n\n  if (isValidHex && bitLength !== -1) {\n    return value.length === 2 + Math.ceil(bitLength / 4);\n  }\n\n  return isValidHex && (ignoreLength || value.length % 2 === 0);\n}"]},"metadata":{},"sourceType":"script"}