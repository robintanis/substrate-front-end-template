{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n} // Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\n\n\nconst layout = {\n  InkCryptoHasher: {\n    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n  },\n  InkDiscriminant: 'u32',\n  InkLayoutArray: {\n    offset: 'InkLayoutKey',\n    len: 'u32',\n    cellsPerElem: 'u64',\n    layout: 'InkStorageLayout'\n  },\n  InkLayoutCell: {\n    key: 'InkLayoutKey',\n    ty: 'MtLookupTypeId'\n  },\n  InkLayoutEnum: {\n    dispatchKey: 'InkLayoutKey',\n    variants: 'BTreeMap<InkDiscriminant, InkLayoutStruct>'\n  },\n  InkLayoutHash: {\n    offset: 'InkLayoutKey',\n    strategy: 'InkLayoutHashingStrategy',\n    layout: 'InkStorageLayout'\n  },\n  InkLayoutHashingStrategy: {\n    hasher: 'InkCryptoHasher',\n    postfix: 'Vec<u8>',\n    prefix: 'Vec<u8>'\n  },\n  InkLayoutKey: '[u8; 32]',\n  InkLayoutStruct: {\n    fields: 'Vec<InkLayoutStructField>'\n  },\n  InkLayoutStructField: {\n    layout: 'InkStorageLayout',\n    name: 'Text'\n  },\n  InkStorageLayout: {\n    _enum: {\n      Cell: 'InkLayoutCell',\n      Hash: 'InkLayoutHash',\n      Array: 'InkLayoutArray',\n      Struct: 'InkLayoutStruct',\n      Enum: 'InkLayoutEnum'\n    }\n  }\n};\nconst spec = {\n  InkConstructorSpec: {\n    name: 'Text',\n    selector: 'InkSelector',\n    args: 'Vec<InkMessageParamSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkContractSpec: {\n    constructors: 'Vec<InkConstructorSpec>',\n    messages: 'Vec<InkMessageSpec>',\n    events: 'Vec<InkEventSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkDisplayName: 'MtPath',\n  InkEventParamSpec: {\n    name: 'Text',\n    indexed: 'bool',\n    type: 'InkTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  InkEventSpec: {\n    name: 'Text',\n    args: 'Vec<InkEventParamSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkMessageParamSpec: {\n    name: 'Text',\n    type: 'InkTypeSpec'\n  },\n  InkMessageSpec: {\n    name: 'Text',\n    selector: 'InkSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<InkMessageParamSpec>',\n    returnType: 'Option<InkTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkSelector: '[u8; 4]',\n  InkTypeSpec: {\n    type: 'MtLookupTypeId',\n    displayName: 'InkDisplayName'\n  }\n};\nconst registry = {\n  MtField: {\n    name: 'Option<Text>',\n    type: 'MtLookupTypeId'\n  },\n  MtLookupTypeId: 'u32',\n  MtPath: 'Vec<Text>',\n  MtType: {\n    path: 'MtPath',\n    params: 'Vec<MtLookupTypeId>',\n    def: 'MtTypeDef'\n  },\n  MtTypeDef: {\n    _enum: {\n      Composite: 'MtTypeDefComposite',\n      Variant: 'MtTypeDefVariant',\n      Sequence: 'MtTypeDefSequence',\n      Array: 'MtTypeDefArray',\n      Tuple: 'MtTypeDefTuple',\n      Primitive: 'MtTypeDefPrimitive'\n    }\n  },\n  MtTypeDefArray: {\n    len: 'u16',\n    type: 'MtLookupTypeId'\n  },\n  MtTypeDefComposite: {\n    fields: 'Vec<MtField>'\n  },\n  MtTypeDefVariant: {\n    variants: 'Vec<MtVariant>'\n  },\n  MtTypeDefPrimitive: {\n    // this enum definition is mapped in api-contracts/inkTypes.ts\n    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'I8', 'I16', 'I32', 'I64', 'I128']\n  },\n  MtTypeDefSequence: {\n    type: 'MtLookupTypeId'\n  },\n  MtTypeDefTuple: 'Vec<MtLookupTypeId>',\n  MtVariant: {\n    name: 'Text',\n    fields: 'Vec<MtField>',\n    discriminant: 'Option<u64>'\n  }\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, layout), registry), spec), {}, {\n    InkProject: {\n      // added by ABI serialization\n      metadataVersion: 'Text',\n      source: 'InkProjectSource',\n      contract: 'InkProjectContract',\n      // expanded scale registry: RegistryReadOnly\n      types: 'Vec<MtType>',\n      // renamed from layout (ignored for now, incomplete)\n      // storage: 'InkStorageLayout',\n      spec: 'InkContractSpec'\n    },\n    InkProjectContract: {\n      name: 'Text',\n      version: 'Text',\n      authors: 'Vec<Text>',\n      description: 'Option<Text>',\n      documentation: 'Option<Text>',\n      repository: 'Option<Text>',\n      homepage: 'Option<Text>',\n      license: 'Option<Text>'\n    },\n    InkProjectSource: {\n      hash: '[u8; 32]',\n      language: 'Text',\n      compiler: 'Text'\n    }\n  })\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/interfaces/contractsAbi/definitions.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","layout","InkCryptoHasher","_enum","InkDiscriminant","InkLayoutArray","offset","len","cellsPerElem","InkLayoutCell","ty","InkLayoutEnum","dispatchKey","variants","InkLayoutHash","strategy","InkLayoutHashingStrategy","hasher","postfix","prefix","InkLayoutKey","InkLayoutStruct","fields","InkLayoutStructField","name","InkStorageLayout","Cell","Hash","Array","Struct","Enum","spec","InkConstructorSpec","selector","args","docs","InkContractSpec","constructors","messages","events","InkDisplayName","InkEventParamSpec","indexed","type","InkEventSpec","InkMessageParamSpec","InkMessageSpec","mutates","payable","returnType","InkSelector","InkTypeSpec","displayName","registry","MtField","MtLookupTypeId","MtPath","MtType","path","params","def","MtTypeDef","Composite","Variant","Sequence","Tuple","Primitive","MtTypeDefArray","MtTypeDefComposite","MtTypeDefVariant","MtTypeDefPrimitive","MtTypeDefSequence","MtTypeDefTuple","MtVariant","discriminant","_default","rpc","types","InkProject","metadataVersion","contract","InkProjectContract","version","authors","description","documentation","repository","homepage","license","InkProjectSource","hash","language","compiler"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// Copyright 2017-2020 @polkadot/types authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n// order important in structs... :)\n\n/* eslint-disable sort-keys */\nconst layout = {\n  InkCryptoHasher: {\n    _enum: ['Blake2x256', 'Sha2x256', 'Keccak256']\n  },\n  InkDiscriminant: 'u32',\n  InkLayoutArray: {\n    offset: 'InkLayoutKey',\n    len: 'u32',\n    cellsPerElem: 'u64',\n    layout: 'InkStorageLayout'\n  },\n  InkLayoutCell: {\n    key: 'InkLayoutKey',\n    ty: 'MtLookupTypeId'\n  },\n  InkLayoutEnum: {\n    dispatchKey: 'InkLayoutKey',\n    variants: 'BTreeMap<InkDiscriminant, InkLayoutStruct>'\n  },\n  InkLayoutHash: {\n    offset: 'InkLayoutKey',\n    strategy: 'InkLayoutHashingStrategy',\n    layout: 'InkStorageLayout'\n  },\n  InkLayoutHashingStrategy: {\n    hasher: 'InkCryptoHasher',\n    postfix: 'Vec<u8>',\n    prefix: 'Vec<u8>'\n  },\n  InkLayoutKey: '[u8; 32]',\n  InkLayoutStruct: {\n    fields: 'Vec<InkLayoutStructField>'\n  },\n  InkLayoutStructField: {\n    layout: 'InkStorageLayout',\n    name: 'Text'\n  },\n  InkStorageLayout: {\n    _enum: {\n      Cell: 'InkLayoutCell',\n      Hash: 'InkLayoutHash',\n      Array: 'InkLayoutArray',\n      Struct: 'InkLayoutStruct',\n      Enum: 'InkLayoutEnum'\n    }\n  }\n};\nconst spec = {\n  InkConstructorSpec: {\n    name: 'Text',\n    selector: 'InkSelector',\n    args: 'Vec<InkMessageParamSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkContractSpec: {\n    constructors: 'Vec<InkConstructorSpec>',\n    messages: 'Vec<InkMessageSpec>',\n    events: 'Vec<InkEventSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkDisplayName: 'MtPath',\n  InkEventParamSpec: {\n    name: 'Text',\n    indexed: 'bool',\n    type: 'InkTypeSpec',\n    docs: 'Vec<Text>'\n  },\n  InkEventSpec: {\n    name: 'Text',\n    args: 'Vec<InkEventParamSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkMessageParamSpec: {\n    name: 'Text',\n    type: 'InkTypeSpec'\n  },\n  InkMessageSpec: {\n    name: 'Text',\n    selector: 'InkSelector',\n    mutates: 'bool',\n    payable: 'bool',\n    args: 'Vec<InkMessageParamSpec>',\n    returnType: 'Option<InkTypeSpec>',\n    docs: 'Vec<Text>'\n  },\n  InkSelector: '[u8; 4]',\n  InkTypeSpec: {\n    type: 'MtLookupTypeId',\n    displayName: 'InkDisplayName'\n  }\n};\nconst registry = {\n  MtField: {\n    name: 'Option<Text>',\n    type: 'MtLookupTypeId'\n  },\n  MtLookupTypeId: 'u32',\n  MtPath: 'Vec<Text>',\n  MtType: {\n    path: 'MtPath',\n    params: 'Vec<MtLookupTypeId>',\n    def: 'MtTypeDef'\n  },\n  MtTypeDef: {\n    _enum: {\n      Composite: 'MtTypeDefComposite',\n      Variant: 'MtTypeDefVariant',\n      Sequence: 'MtTypeDefSequence',\n      Array: 'MtTypeDefArray',\n      Tuple: 'MtTypeDefTuple',\n      Primitive: 'MtTypeDefPrimitive'\n    }\n  },\n  MtTypeDefArray: {\n    len: 'u16',\n    type: 'MtLookupTypeId'\n  },\n  MtTypeDefComposite: {\n    fields: 'Vec<MtField>'\n  },\n  MtTypeDefVariant: {\n    variants: 'Vec<MtVariant>'\n  },\n  MtTypeDefPrimitive: {\n    // this enum definition is mapped in api-contracts/inkTypes.ts\n    _enum: ['Bool', 'Char', 'Str', 'U8', 'U16', 'U32', 'U64', 'U128', 'I8', 'I16', 'I32', 'I64', 'I128']\n  },\n  MtTypeDefSequence: {\n    type: 'MtLookupTypeId'\n  },\n  MtTypeDefTuple: 'Vec<MtLookupTypeId>',\n  MtVariant: {\n    name: 'Text',\n    fields: 'Vec<MtField>',\n    discriminant: 'Option<u64>'\n  }\n};\nvar _default = {\n  rpc: {},\n  types: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, layout), registry), spec), {}, {\n    InkProject: {\n      // added by ABI serialization\n      metadataVersion: 'Text',\n      source: 'InkProjectSource',\n      contract: 'InkProjectContract',\n      // expanded scale registry: RegistryReadOnly\n      types: 'Vec<MtType>',\n      // renamed from layout (ignored for now, incomplete)\n      // storage: 'InkStorageLayout',\n      spec: 'InkContractSpec'\n    },\n    InkProjectContract: {\n      name: 'Text',\n      version: 'Text',\n      authors: 'Vec<Text>',\n      description: 'Option<Text>',\n      documentation: 'Option<Text>',\n      repository: 'Option<Text>',\n      homepage: 'Option<Text>',\n      license: 'Option<Text>'\n    },\n    InkProjectSource: {\n      hash: '[u8; 32]',\n      language: 'Text',\n      compiler: 'Text'\n    }\n  })\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}