{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\nvar _constants = require(\"../constants\");\n\nvar _ExtrinsicPayload = _interopRequireDefault(require(\"./ExtrinsicPayload\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\n\n\nclass ExtrinsicSignatureV4 extends _Struct.default {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'MultiSignature'\n    }, registry.getSignedExtensionTypes()), ExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return _constants.EMPTY_U8A;\n    } else if (value instanceof ExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : _constants.EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.multiSignature.value;\n  }\n  /**\n   * @description The raw [[MultiSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.get('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n\n  _injectSignature(signer, signature, {\n    era,\n    nonce,\n    tip\n  }) {\n    this.set('era', era);\n    this.set('nonce', nonce);\n    this.set('signer', signer);\n    this.set('signature', signature);\n    this.set('tip', tip);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(this.registry.createType('Address', signer), this.registry.createType('MultiSignature', signature), new _ExtrinsicPayload.default(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, {\n    blockHash,\n    era,\n    genesisHash,\n    nonce,\n    runtimeVersion: {\n      specVersion,\n      transactionVersion\n    },\n    tip\n  }) {\n    return new _ExtrinsicPayload.default(this.registry, {\n      blockHash,\n      era: era || _constants.IMMORTAL_ERA,\n      genesisHash,\n      method: method.toHex(),\n      nonce,\n      specVersion,\n      tip: tip || 0,\n      transactionVersion: transactionVersion || 0\n    });\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    const signer = this.registry.createType('Address', account.addressRaw);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', payload.sign(account));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    const signer = this.registry.createType('Address', address);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', (0, _util.u8aConcat)(new Uint8Array([1]), new Uint8Array(64).fill(0x42)));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : _constants.EMPTY_U8A;\n  }\n\n}\n\nexports.default = ExtrinsicSignatureV4;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/types/extrinsic/v4/ExtrinsicSignature.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_defineProperty2","_util","_Struct","_constants","_ExtrinsicPayload","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","ExtrinsicSignatureV4","constructor","registry","isSigned","signer","signature","getSignedExtensionTypes","decodeExtrinsicSignature","EMPTY_U8A","encodedLength","isEmpty","era","get","nonce","multiSignature","tip","_injectSignature","set","addSignature","payload","createType","createPayload","method","blockHash","genesisHash","runtimeVersion","specVersion","transactionVersion","IMMORTAL_ERA","toHex","sign","account","options","addressRaw","signFake","address","u8aConcat","Uint8Array","fill","toU8a","isBare"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _util = require(\"@polkadot/util\");\n\nvar _Struct = _interopRequireDefault(require(\"../../codec/Struct\"));\n\nvar _constants = require(\"../constants\");\n\nvar _ExtrinsicPayload = _interopRequireDefault(require(\"./ExtrinsicPayload\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * @name GenericExtrinsicSignatureV4\n * @description\n * A container for the [[Signature]] associated with a specific [[Extrinsic]]\n */\nclass ExtrinsicSignatureV4 extends _Struct.default {\n  constructor(registry, value, {\n    isSigned\n  } = {}) {\n    super(registry, _objectSpread({\n      signer: 'Address',\n      // eslint-disable-next-line sort-keys\n      signature: 'MultiSignature'\n    }, registry.getSignedExtensionTypes()), ExtrinsicSignatureV4.decodeExtrinsicSignature(value, isSigned));\n  }\n  /** @internal */\n\n\n  static decodeExtrinsicSignature(value, isSigned = false) {\n    if (!value) {\n      return _constants.EMPTY_U8A;\n    } else if (value instanceof ExtrinsicSignatureV4) {\n      return value;\n    }\n\n    return isSigned ? value : _constants.EMPTY_U8A;\n  }\n  /**\n   * @description The length of the value when encoded as a Uint8Array\n   */\n\n\n  get encodedLength() {\n    return this.isSigned ? super.encodedLength : 0;\n  }\n  /**\n   * @description `true` if the signature is valid\n   */\n\n\n  get isSigned() {\n    return !this.signature.isEmpty;\n  }\n  /**\n   * @description The [[ExtrinsicEra]] (mortal or immortal) this signature applies to\n   */\n\n\n  get era() {\n    return this.get('era');\n  }\n  /**\n   * @description The [[Index]] for the signature\n   */\n\n\n  get nonce() {\n    return this.get('nonce');\n  }\n  /**\n   * @description The actual [[EcdsaSignature]], [[Ed25519Signature]] or [[Sr25519Signature]]\n   */\n\n\n  get signature() {\n    return this.multiSignature.value;\n  }\n  /**\n   * @description The raw [[MultiSignature]]\n   */\n\n\n  get multiSignature() {\n    return this.get('signature');\n  }\n  /**\n   * @description The [[Address]] that signed\n   */\n\n\n  get signer() {\n    return this.get('signer');\n  }\n  /**\n   * @description The [[Balance]] tip\n   */\n\n\n  get tip() {\n    return this.get('tip');\n  }\n\n  _injectSignature(signer, signature, {\n    era,\n    nonce,\n    tip\n  }) {\n    this.set('era', era);\n    this.set('nonce', nonce);\n    this.set('signer', signer);\n    this.set('signature', signature);\n    this.set('tip', tip);\n    return this;\n  }\n  /**\n   * @description Adds a raw signature\n   */\n\n\n  addSignature(signer, signature, payload) {\n    return this._injectSignature(this.registry.createType('Address', signer), this.registry.createType('MultiSignature', signature), new _ExtrinsicPayload.default(this.registry, payload));\n  }\n  /**\n   * @description Creates a payload from the supplied options\n   */\n\n\n  createPayload(method, {\n    blockHash,\n    era,\n    genesisHash,\n    nonce,\n    runtimeVersion: {\n      specVersion,\n      transactionVersion\n    },\n    tip\n  }) {\n    return new _ExtrinsicPayload.default(this.registry, {\n      blockHash,\n      era: era || _constants.IMMORTAL_ERA,\n      genesisHash,\n      method: method.toHex(),\n      nonce,\n      specVersion,\n      tip: tip || 0,\n      transactionVersion: transactionVersion || 0\n    });\n  }\n  /**\n   * @description Generate a payload and applies the signature from a keypair\n   */\n\n\n  sign(method, account, options) {\n    const signer = this.registry.createType('Address', account.addressRaw);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', payload.sign(account));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Generate a payload and applies a fake signature\n   */\n\n\n  signFake(method, address, options) {\n    const signer = this.registry.createType('Address', address);\n    const payload = this.createPayload(method, options);\n    const signature = this.registry.createType('MultiSignature', (0, _util.u8aConcat)(new Uint8Array([1]), new Uint8Array(64).fill(0x42)));\n    return this._injectSignature(signer, signature, payload);\n  }\n  /**\n   * @description Encodes the value as a Uint8Array as per the SCALE specifications\n   * @param isBare true when the value has none of the type-specific prefixes (internal)\n   */\n\n\n  toU8a(isBare) {\n    return this.isSigned ? super.toU8a(isBare) : _constants.EMPTY_U8A;\n  }\n\n}\n\nexports.default = ExtrinsicSignatureV4;"]},"metadata":{},"sourceType":"script"}