{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectPackage;\n\nvar _assert = _interopRequireDefault(require(\"./assert\"));\n\nvar _string = _interopRequireDefault(require(\"./is/string\")); // Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n\nfunction expandPath(path) {\n  return !path || path.length < 5 ? '<unknown>' : path;\n}\n/** @internal */\n\n\nfunction flattenVersions(_all) {\n  const all = _all.map(version => (0, _string.default)(version) ? {\n    version\n  } : version);\n\n  const verLength = all.reduce((max, {\n    version\n  }) => Math.max(max, version.length), 0);\n  return all.map(({\n    path,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${expandPath(path)}`).join('\\n');\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n */\n\n\nfunction detectPackage({\n  name,\n  version\n}, path) {\n  const _global = typeof window !== 'undefined' ? window : global;\n\n  if (!_global.__polkadotjs) {\n    _global.__polkadotjs = {};\n  }\n\n  (0, _assert.default)(name.startsWith('@polkadot'), `Invalid package descriptor ${name}`);\n  _global.__polkadotjs[name] = [...(_global.__polkadotjs[name] || []), {\n    path: path || '',\n    version\n  }];\n\n  if (_global.__polkadotjs[name].length !== 1) {\n    const versions = flattenVersions(_global.__polkadotjs[name]);\n    console.warn(`Multiple instances of ${name} detected, ensure that there is only one package in your dependency tree.\\n${versions}`);\n  }\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util/detectPackage.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","detectPackage","_assert","_string","expandPath","path","length","flattenVersions","_all","all","map","version","verLength","reduce","max","Math","padEnd","join","name","_global","window","global","__polkadotjs","startsWith","versions","console","warn"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,aAAlB;;AAEA,IAAIC,OAAO,GAAGR,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,IAAIQ,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,aAAD,CAAR,CAApC,C,CAEA;AACA;;;AACA,SAASS,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAO,CAACA,IAAD,IAASA,IAAI,CAACC,MAAL,GAAc,CAAvB,GAA2B,WAA3B,GAAyCD,IAAhD;AACD;AACD;;;AAGA,SAASE,eAAT,CAAyBC,IAAzB,EAA+B;AAC7B,QAAMC,GAAG,GAAGD,IAAI,CAACE,GAAL,CAASC,OAAO,IAAI,CAAC,GAAGR,OAAO,CAACH,OAAZ,EAAqBW,OAArB,IAAgC;AAC9DA,IAAAA;AAD8D,GAAhC,GAE5BA,OAFQ,CAAZ;;AAIA,QAAMC,SAAS,GAAGH,GAAG,CAACI,MAAJ,CAAW,CAACC,GAAD,EAAM;AACjCH,IAAAA;AADiC,GAAN,KAEvBI,IAAI,CAACD,GAAL,CAASA,GAAT,EAAcH,OAAO,CAACL,MAAtB,CAFY,EAEmB,CAFnB,CAAlB;AAGA,SAAOG,GAAG,CAACC,GAAJ,CAAQ,CAAC;AACdL,IAAAA,IADc;AAEdM,IAAAA;AAFc,GAAD,KAGR,KAAIA,OAAO,CAACK,MAAR,CAAeJ,SAAf,CAA0B,KAAIR,UAAU,CAACC,IAAD,CAAO,EAHnD,EAGsDY,IAHtD,CAG2D,IAH3D,CAAP;AAID;AACD;AACA;AACA;AACA;;;AAGA,SAAShB,aAAT,CAAuB;AACrBiB,EAAAA,IADqB;AAErBP,EAAAA;AAFqB,CAAvB,EAGGN,IAHH,EAGS;AACP,QAAMc,OAAO,GAAG,OAAOC,MAAP,KAAkB,WAAlB,GAAgCA,MAAhC,GAAyCC,MAAzD;;AAEA,MAAI,CAACF,OAAO,CAACG,YAAb,EAA2B;AACzBH,IAAAA,OAAO,CAACG,YAAR,GAAuB,EAAvB;AACD;;AAED,GAAC,GAAGpB,OAAO,CAACF,OAAZ,EAAqBkB,IAAI,CAACK,UAAL,CAAgB,WAAhB,CAArB,EAAoD,8BAA6BL,IAAK,EAAtF;AACAC,EAAAA,OAAO,CAACG,YAAR,CAAqBJ,IAArB,IAA6B,CAAC,IAAIC,OAAO,CAACG,YAAR,CAAqBJ,IAArB,KAA8B,EAAlC,CAAD,EAAwC;AACnEb,IAAAA,IAAI,EAAEA,IAAI,IAAI,EADqD;AAEnEM,IAAAA;AAFmE,GAAxC,CAA7B;;AAKA,MAAIQ,OAAO,CAACG,YAAR,CAAqBJ,IAArB,EAA2BZ,MAA3B,KAAsC,CAA1C,EAA6C;AAC3C,UAAMkB,QAAQ,GAAGjB,eAAe,CAACY,OAAO,CAACG,YAAR,CAAqBJ,IAArB,CAAD,CAAhC;AACAO,IAAAA,OAAO,CAACC,IAAR,CAAc,yBAAwBR,IAAK,8EAA6EM,QAAS,EAAjI;AACD;AACF","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = detectPackage;\n\nvar _assert = _interopRequireDefault(require(\"./assert\"));\n\nvar _string = _interopRequireDefault(require(\"./is/string\"));\n\n// Copyright 2017-2020 @polkadot/util authors & contributors\n// SPDX-License-Identifier: Apache-2.0\nfunction expandPath(path) {\n  return !path || path.length < 5 ? '<unknown>' : path;\n}\n/** @internal */\n\n\nfunction flattenVersions(_all) {\n  const all = _all.map(version => (0, _string.default)(version) ? {\n    version\n  } : version);\n\n  const verLength = all.reduce((max, {\n    version\n  }) => Math.max(max, version.length), 0);\n  return all.map(({\n    path,\n    version\n  }) => `\\t${version.padEnd(verLength)}\\t${expandPath(path)}`).join('\\n');\n}\n/**\n * @name detectPackage\n * @summary Checks that a specific package is only imported once\n */\n\n\nfunction detectPackage({\n  name,\n  version\n}, path) {\n  const _global = typeof window !== 'undefined' ? window : global;\n\n  if (!_global.__polkadotjs) {\n    _global.__polkadotjs = {};\n  }\n\n  (0, _assert.default)(name.startsWith('@polkadot'), `Invalid package descriptor ${name}`);\n  _global.__polkadotjs[name] = [...(_global.__polkadotjs[name] || []), {\n    path: path || '',\n    version\n  }];\n\n  if (_global.__polkadotjs[name].length !== 1) {\n    const versions = flattenVersions(_global.__polkadotjs[name]);\n    console.warn(`Multiple instances of ${name} detected, ensure that there is only one package in your dependency tree.\\n${versions}`);\n  }\n}"]},"metadata":{},"sourceType":"script"}