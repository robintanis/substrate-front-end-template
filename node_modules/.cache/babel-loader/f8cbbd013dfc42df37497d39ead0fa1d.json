{"ast":null,"code":"import configCommon from './common.json'; // Using `require` as `import` does not support dynamic loading (yet).\n\nconst configEnv = require(`./${process.env.NODE_ENV}.json`); // Accepting React env vars and aggregating them into `config` object.\n\n\nconst envVarNames = ['REACT_APP_PROVIDER_SOCKET', 'REACT_APP_DEVELOPMENT_KEYRING'];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\nconst config = { ...configCommon,\n  ...configEnv,\n  ...envVars\n};\nexport default config;","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/src/config/index.js"],"names":["configCommon","configEnv","require","process","env","NODE_ENV","envVarNames","envVars","reduce","mem","n","undefined","slice","config"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,eAAzB,C,CACA;;AACA,MAAMC,SAAS,GAAGC,OAAO,CAAE,KAAIC,OAAO,CAACC,GAAR,CAAYC,QAAS,OAA3B,CAAzB,C,CAEA;;;AACA,MAAMC,WAAW,GAAG,CAClB,2BADkB,EAElB,+BAFkB,CAApB;AAIA,MAAMC,OAAO,GAAGD,WAAW,CAACE,MAAZ,CAAmB,CAACC,GAAD,EAAMC,CAAN,KAAY;AAC7C;AACA,MAAIP,OAAO,CAACC,GAAR,CAAYM,CAAZ,MAAmBC,SAAvB,EAAkCF,GAAG,CAACC,CAAC,CAACE,KAAF,CAAQ,EAAR,CAAD,CAAH,GAAmBT,OAAO,CAACC,GAAR,CAAYM,CAAZ,CAAnB;AAClC,SAAOD,GAAP;AACD,CAJe,EAIb,EAJa,CAAhB;AAMA,MAAMI,MAAM,GAAG,EAAE,GAAGb,YAAL;AAAmB,KAAGC,SAAtB;AAAiC,KAAGM;AAApC,CAAf;AACA,eAAeM,MAAf","sourcesContent":["import configCommon from './common.json';\n// Using `require` as `import` does not support dynamic loading (yet).\nconst configEnv = require(`./${process.env.NODE_ENV}.json`);\n\n// Accepting React env vars and aggregating them into `config` object.\nconst envVarNames = [\n  'REACT_APP_PROVIDER_SOCKET',\n  'REACT_APP_DEVELOPMENT_KEYRING'\n];\nconst envVars = envVarNames.reduce((mem, n) => {\n  // Remove the `REACT_APP_` prefix\n  if (process.env[n] !== undefined) mem[n.slice(10)] = process.env[n];\n  return mem;\n}, {});\n\nconst config = { ...configCommon, ...configEnv, ...envVars };\nexport default config;\n"]},"metadata":{},"sourceType":"module"}