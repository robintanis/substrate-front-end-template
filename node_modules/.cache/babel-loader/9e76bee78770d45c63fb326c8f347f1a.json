{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bestNumberLag = bestNumberLag;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\"); // Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name bestNumberLag\n * @returns A number of blocks\n * @description Calculates the lag between finalized head and best head\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberLag((lag) => {\n *   console.log(`finalized is ${lag} blocks behind head`);\n * });\n * ```\n */\n\n\nfunction bestNumberLag(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (0, _rxjs.combineLatest)([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe((0, _operators.map)(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/api-derive/chain/bestNumberLag.js"],"names":["Object","defineProperty","exports","value","bestNumberLag","_rxjs","require","_operators","_util","instanceId","api","memo","combineLatest","derive","chain","bestNumber","bestNumberFinalized","pipe","map","registry","createType","sub"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;;AAEA,IAAIC,KAAK,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AAEA,IAAIC,UAAU,GAAGD,OAAO,CAAC,gBAAD,CAAxB;;AAEA,IAAIE,KAAK,GAAGF,OAAO,CAAC,SAAD,CAAnB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,aAAT,CAAuBK,UAAvB,EAAmCC,GAAnC,EAAwC;AACtC,SAAO,CAAC,GAAGF,KAAK,CAACG,IAAV,EAAgBF,UAAhB,EAA4B,MAAM,CAAC,GAAGJ,KAAK,CAACO,aAAV,EAAyB,CAACF,GAAG,CAACG,MAAJ,CAAWC,KAAX,CAAiBC,UAAjB,EAAD,EAAgCL,GAAG,CAACG,MAAJ,CAAWC,KAAX,CAAiBE,mBAAjB,EAAhC,CAAzB,EAAkGC,IAAlG,CAAuG,CAAC,GAAGV,UAAU,CAACW,GAAf,EAAoB,CAAC,CAACH,UAAD,EAAaC,mBAAb,CAAD,KAAuCN,GAAG,CAACS,QAAJ,CAAaC,UAAb,CAAwB,aAAxB,EAAuCL,UAAU,CAACM,GAAX,CAAeL,mBAAf,CAAvC,CAA3D,CAAvG,CAAlC,CAAP;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bestNumberLag = bestNumberLag;\n\nvar _rxjs = require(\"rxjs\");\n\nvar _operators = require(\"rxjs/operators\");\n\nvar _util = require(\"../util\");\n\n// Copyright 2017-2020 @polkadot/api-derive authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name bestNumberLag\n * @returns A number of blocks\n * @description Calculates the lag between finalized head and best head\n * @example\n * <BR>\n *\n * ```javascript\n * api.derive.chain.bestNumberLag((lag) => {\n *   console.log(`finalized is ${lag} blocks behind head`);\n * });\n * ```\n */\nfunction bestNumberLag(instanceId, api) {\n  return (0, _util.memo)(instanceId, () => (0, _rxjs.combineLatest)([api.derive.chain.bestNumber(), api.derive.chain.bestNumberFinalized()]).pipe((0, _operators.map)(([bestNumber, bestNumberFinalized]) => api.registry.createType('BlockNumber', bestNumber.sub(bestNumberFinalized)))));\n}"]},"metadata":{},"sourceType":"script"}