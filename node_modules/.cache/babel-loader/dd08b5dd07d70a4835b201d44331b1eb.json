{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBip39;\n\nvar _bip = require(\"bip39\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\"); // Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name toSeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToBip39, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToBip39(mnemonic)}`); => u8a\n * }\n * ```\n */\n\n\nfunction toBip39(mnemonic, password = '') {\n  return (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39ToSeed)(mnemonic, password) : (0, _util.bufferToU8a)((0, _bip.mnemonicToSeedSync)(mnemonic, password)).subarray(0, 32);\n}","map":{"version":3,"sources":["/home/robin/substrate-front-end-template/node_modules/@polkadot/util-crypto/mnemonic/toBip39.js"],"names":["Object","defineProperty","exports","value","default","toBip39","_bip","require","_util","_wasmCrypto","mnemonic","password","isReady","bip39ToSeed","bufferToU8a","mnemonicToSeedSync","subarray"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,OAAlB;;AAEA,IAAIC,IAAI,GAAGC,OAAO,CAAC,OAAD,CAAlB;;AAEA,IAAIC,KAAK,GAAGD,OAAO,CAAC,gBAAD,CAAnB;;AAEA,IAAIE,WAAW,GAAGF,OAAO,CAAC,uBAAD,CAAzB,C,CAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASF,OAAT,CAAiBK,QAAjB,EAA2BC,QAAQ,GAAG,EAAtC,EAA0C;AACxC,SAAO,CAAC,GAAGF,WAAW,CAACG,OAAhB,MAA6B,CAAC,GAAGH,WAAW,CAACI,WAAhB,EAA6BH,QAA7B,EAAuCC,QAAvC,CAA7B,GAAgF,CAAC,GAAGH,KAAK,CAACM,WAAV,EAAuB,CAAC,GAAGR,IAAI,CAACS,kBAAT,EAA6BL,QAA7B,EAAuCC,QAAvC,CAAvB,EAAyEK,QAAzE,CAAkF,CAAlF,EAAqF,EAArF,CAAvF;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toBip39;\n\nvar _bip = require(\"bip39\");\n\nvar _util = require(\"@polkadot/util\");\n\nvar _wasmCrypto = require(\"@polkadot/wasm-crypto\");\n\n// Copyright 2017-2020 @polkadot/util-crypto authors & contributors\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * @name toSeed\n * @summary Creates a valid Ethereum/Bitcoin-compatible seed from a mnemonic input\n * @example\n * <BR>\n *\n * ```javascript\n * import { mnemonicGenerate, mnemonicToBip39, mnemonicValidate } from '@polkadot/util-crypto';\n *\n * const mnemonic = mnemonicGenerate(); // => string\n * const isValidMnemonic = mnemonicValidate(mnemonic); // => boolean\n *\n * if (isValidMnemonic) {\n *   console.log(`Seed generated from mnemonic: ${mnemonicToBip39(mnemonic)}`); => u8a\n * }\n * ```\n */\nfunction toBip39(mnemonic, password = '') {\n  return (0, _wasmCrypto.isReady)() ? (0, _wasmCrypto.bip39ToSeed)(mnemonic, password) : (0, _util.bufferToU8a)((0, _bip.mnemonicToSeedSync)(mnemonic, password)).subarray(0, 32);\n}"]},"metadata":{},"sourceType":"script"}